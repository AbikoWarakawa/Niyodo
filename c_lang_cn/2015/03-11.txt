00:03 yzld2002 quit:Remote host closed the connection
00:08 code_new quit:Quit: ChatZilla 0.9.91.1 [Firefox 36.0.1/20150305221847]
00:27 code_new joined channel
00:27 code_new quit:Client Quit
00:53 lhjkk joined channel
01:07 wlemuel quit:Ping timeout: 240 seconds
01:10 lh_mouse quit:Read error: Connection reset by peer
01:21 Stevearzh quit:Ping timeout: 250 seconds
01:22 izmntuk quit:Remote host closed the connection
01:29 lhjkk quit:Read error: Connection reset by peer
03:49 wlemuel joined channel
03:53 xxxxxxxx quit:Quit: Leaving...
07:01 Xilzzerts quit:Read error: Connection reset by peer
07:01 Xilzzerts joined channel
07:48 tutu joined channel
08:10 tutu quit:Ping timeout: 252 seconds
08:32 lhjkk joined channel
08:41 lhjkkk joined channel
08:41 lhjkk quit:Read error: Connection reset by peer
08:59 lh_mouse joined channel
09:15 Stevearzh joined channel
09:19 tutu joined channel
09:20 tutu: lh_mouse: 小耗,能不能发一下你的TCP服务器设计框架啊 ... 
09:27 k1mibk quit:Quit: Textual IRC Client: www.textualapp.com
09:35 tutu: 么么 ...
09:35 lhjkkk quit:Read error: Connection reset by peer
09:36 whatofor joined channel
09:39 tutu quit:Ping timeout: 240 seconds
09:41 whatofor_1 joined channel
09:45 whatofor quit:Ping timeout: 256 seconds
10:03 lhanjian joined channel
10:54 lhanjian quit:Remote host closed the connection
10:57 xxxxxxxx joined channel
10:58 lhanjian joined channel
11:08 xxxxxxxx: http://puu.sh/gvmax/3b457af320.jpg 这家伙算欧洲人么?
11:13 Stevearzh quit:Quit: Quit...
11:41 condy: lh_mouse: 最那个stackoverflow上的解释来看，他并没有解释 template<typename T> static yes check(D*, T); 为什么每第2个参数必须是T。 
11:41 condy: lh_mouse: 如果将T改为int的话，会出现 ‘Base’ is an inaccessible base of ‘Derived’
11:46 lh_bot: condy: 推导模板参数用
11:46 lh_bot: condy: 你那个错误是第二个函数触发的
11:47 yzld2002 joined channel
11:51 lh_bot: condy: 如果没有第二个参数，函数模板的参数就推不出来   因此直接被从重载集合里面踢掉了 
11:51 lh_bot: 这情况下你只能调用第二个
11:51 lhanjian: http://dirlt.com/ 直接跪了……
12:00 Xilzzerts quit:Ping timeout: 246 seconds
12:00 lhanjian quit:Remote host closed the connection
12:03 sismvg joined channel
12:05 lhanjian joined channel
12:12 Xilzzerts joined channel
12:14 lh_mouse quit:Read error: Connection reset by peer
12:18 lh_mouse joined channel
12:25 condy: geordi: { foo('a'); } void foo(int){BARK;} template<typename> void foo(int){cout<<"template";}
12:25 geordi: foo(int)
12:25 condy: geordi: replace second int with char
12:25 geordi: foo(int)
12:25 condy: geordi: show
12:25 geordi: { foo('a'); } void foo(int){BARK;} template<typename> void foo(char){cout<<"template";}
12:25 condy: oh, Soga.
12:26 misaka15842 joined channel
12:30 misaka15842 quit:Quit: Ex-Chat
12:36 lh_cat quit:Ping timeout: 250 seconds
12:48 sismvg: 今天得到了一笔牛肉。
12:49 tutu joined channel
12:49 tutu: lhanjian,看看你qq
12:51 tutu: lh_mouse,小耗在不
12:53 tutu quit:Read error: Connection reset by peer
12:54 tutu joined channel
12:56 endle joined channel
12:56 lhanjian: tutu, 收到
12:59 tutu quit:Read error: Connection reset by peer
13:00 tutu joined channel
13:16 lh_mouse quit:Read error: Connection reset by peer
13:18 tutu_ joined channel
13:20 tutu quit:Ping timeout: 245 seconds
13:36 sismvg: 类A有protected成员,然后B继承A，C继承B。那么B能不能访问A的protected成员？
13:41 condy: geordi: { B ins; cout << ins.val_a; } class A { public: A():val_a(0){} protected: int val_a; }; class B : public A { public: B()=default; };
13:41 geordi: error: 'int A::val_a' is protected
13:41 tutu_ quit:Read error: Connection reset by peer
13:41 condy: geordi: { B ins; cout << ins.foo(); } class A { public: A():val_a(0){} protected: int val_a; }; class B : public A { public: B()=default; int foo() { return val_a; } };
13:41 geordi: 0
13:41 condy: sismvg: ^
13:42 sismvg: class C呢？
13:42 lh_bot: geordi: << std::__cxx1998::string().capacity()
13:42 geordi: error: 'string' is not a member of '__cxx1998'
13:42 varna joined channel
13:42 lhanjian: varna, 爆
13:42 tutu_ joined channel
13:42 varna: lhanjian: 你这基佬
13:43 condy: lhanjian: 好棒！
13:43 lhanjian: condy, 抱
13:43 condy: geordi: { C ins; cout << ins.bar(); } class A { public: A():val_a(0){} protected: int val_a; }; class B : public A { public: B()=default; int foo() { return val_a; } }; class C: public B { public: int bar() { return val_a; } };
13:43 geordi: 0
13:45 k1mibk joined channel
13:45 sismvg: 。。嗯..好奇怪。
13:45 sismvg: 我这里B继承A,然后C继承B,B中声明 protected: father_type::value
13:45 sismvg: 然后C访问value就出错..
13:45 k1mibk quit:Max SendQ exceeded
13:51 varna: 卡……
13:51 k1mibk joined channel
13:52 k1mibk quit:Max SendQ exceeded
13:57 k1mibk joined channel
13:58 tutu joined channel
13:58 k1mibk quit:Max SendQ exceeded
13:59 lh_bot: tutu: 你想要啥
13:59 tutu: lh_bot,哦，内个设计框图，或者说是模块图
14:00 lh_bot: 没画过
14:00 tutu_ quit:Ping timeout: 245 seconds
14:01 varna: 我了个大槽
14:01 varna: 今天这网怎么熊成这样……
14:02 tutu: 哦，没事，大概是不是有，处理用户连接的线程，任务队列，执行任务线程，定时器
14:03 tutu: 因为被问到TCP设计流程了
14:03 tutu: TCP服务器
14:04 lh_bot: 这跟 TCP 没多大关系吧
14:05 lh_bot: poseidon 是支持 UDP 的  虽然完全没测过
14:05 lh_mouse joined channel
14:06 lh_bot: 实际上 UDP server 就是 TCP server 把 accept 换成 recvfrom
14:07 tutu: varna,lh_bot,那刚才说的那些放在TCP服务器里够不够？
14:07 lh_bot: 定时器可以不单开线程
14:08 tutu: 哦，是不是还得来一个写缓冲队列
14:08 lh_bot: 就是个消息队列
14:08 tutu: 写日志的时候用
14:08 lh_bot: 日志跟这里没关系
14:09 lh_bot: 日志直接丢 stderr
14:09 tutu: 喔喔
14:16 xxxxxxxx: varna 羊驼网络抽风中?
14:17 lh_cat joined channel
14:22 lh_mouse quit:Read error: Connection timed out
14:22 lh_mouse joined channel
14:23 tutu quit:Read error: Connection reset by peer
14:23 lh_cat quit:Ping timeout: 255 seconds
14:23 tutu joined channel
14:28 varna: 不知道谁把路由器重置之后密码改了，全员一问三不知
14:29 xxxxxxxx: 大妈的报复?
14:30 varna: 不是
14:30 varna: 出口路由器的网络配置我自己手里也只有一份，还对不上号……
14:31 varna: 不过看起来确实有个榨带宽下电影的
14:31 varna: 我先简单攻击下路由器看……
14:31 varna: 虽然爆破基本没法指望
14:34 tutu quit:Read error: Connection reset by peer
14:34 tutu_ joined channel
14:36 xxxxxxxx: varna  弹幕:4发大建 3个大和 一个日向
14:37 tutu_ quit:Read error: Connection reset by peer
14:37 varna: YNB不奇怪
14:37 xxxxxxxx: 怎么什么都有NB...
14:37 lhanjian quit:Ping timeout: 256 seconds
14:52 varna: 我日
14:53 tutu joined channel
14:54 varna: __builtin_apply_args在xs桩里行不通……
14:56 sismvg: http://cnews.chinadaily.com.cn/2015-03/10/content_19771631.htm
14:56 sismvg: 还好还好
14:57 lh_bot: 话说
14:57 lh_bot: Msg::SC_RoomResult 这名字看起来有点怪怪的
14:58 varna: https://pastebin.mozilla.org/8825231 这里是Perl生成的xs桩包装
14:59 varna: 我忘了桩参数是从ST()进的了……
14:59 sismvg: 我竟然输给了没训练过的AI6盘..
15:02 varna: JIT没问题，GC也是对的，调用也确实转发了，就是xs桩神坑……
15:04 lhanjian joined channel
15:06 varna: 结果是我需要重新制造一个call gate, 说不定要做一个虚假的__builtin_apply_args返回值
15:07 varna: ST(0)对应函数类型元信息，ST(1)是JIT snippet里取得的符号地址，以降是应当被填进虚假结构里的参数
15:10 varna: ……而且粗想的话，这可能已经是比较好的状况了——在编译器扩展不确定的情况下，桩函数的调用栈依赖于解释器/虚拟机语义，从而可能可以将调用适配到实现提供的转发上……
15:11 varna: 所以都是gcc的锅，为何总要把扩展做成不被人玩坏就不能用的样子っぽい
15:15 varna: tutu: 兔兔来玩巫术不
15:16 lh_bot: 兔兔玩巫女去了
15:16 varna: 噗！
15:18 varna: 我的巫术不仅可以让死人爬起来走路，还可以让死人倒立走路，一边走一边反射
15:19 lh_bot: 可靠(cao)么
15:19 varna: 这么好的东西岂是巫女的clazz能比的
15:19 varna: 可un靠reliable
15:19 lh_bot: 巫女可靠(cao)
15:20 varna: 小耗用过lua当胶水么
15:22 lh_bot: 不会 lua
15:22 lhanjian: d
15:22 varna: 同不会
15:22 varna: lhj用过？
15:22 lhanjian: varna, 羊驼用过哪种XXmalloc？
15:22 lh_bot: dlmalloc
15:23 varna: lhanjian: 我不用外挂malloc
15:23 lh_bot: wgmalloc?
15:23 lhanjian: lh_bot, 耗子用过？
15:23 lh_bot: wgmalloc? 没
15:24 lhanjian: lh_bot, dlmalloc用过？
15:24 lh_bot: MCFCRT 不就是 dlmalloc 的
15:24 varna: 你要一个随机分配器改进现有的malloc效率？
15:24 lh_cat joined channel
15:24 lhanjian: 其实我就是想问，什么情况会考虑不用glibc malloc
15:24 varna: 懒得和ptmalloc扯上关系的时候
15:24 lhanjian: 当时耗子考虑用dlmalloc的原因是什么
15:24 lh_bot: glibc malloc 是 GPL 的……
15:25 lh_bot: lhanjian: 我就是看 msvcrt 不爽而已
15:25 lhanjian: 揉脸
15:25 varna: 不考虑许可证的话我觉得ptmalloc已经足够应付很多情况了
15:26 varna: 好歹有个thread arena的
15:26 varna: 我记得也有128B以下的小块优化，不过谁会频繁这么作死呢……
15:27 varna: 说起来这里有个逗乐的黑暗脑洞，当个笑话看吧
15:28 varna: 假定一个单子类型构造子Future, 以Future构造一个类型Allocator
15:29 lh_bot: http://www.360doc.com/content/13/0915/09/8363527_314549128.shtml
15:30 varna: Allocator构造一个指定类型的值，但这个值的合法性直到Lazy Eval发生才成立（以实现来说，它需要的内存和一切依赖之已存在非合法对象所需要的内存都会在此时真正分配）
15:30 varna: 当然这只是个笑话
15:30 varna: 或者说这不是个笑话，当我们可以在语言里操纵求值形式
15:31 lh_bot: 所谓的分配器么
15:31 varna: 这个分配器其实没这么多花哨理论
15:31 lh_bot: 就说 malloc   当然有和 C 语言的其它函数一样的毛病
15:31 lh_bot: 这接口一开始就是不合理的
15:31 varna: 比如haskell, 它其实会给lazy eval生成trunk
15:32 lh_bot: 如果我来做内存管理我大概会提供三个函数
15:32 varna: 而这个trunk如果施以语义所提供类型系统之救赎，就是我说的形式
15:33 varna: 只不过我这里含混地把一部分原本的语义（lazy eval）下降为语用
15:33 lh_bot: void * malloc(size_t * real_size, size_t cb);
15:33 varna: real_size是对齐后的？
15:34 sismvg: 百度搜索:v李克强打断代表念稿
15:34 lh_bot: int realloc(void ** ptr, size_t * real_size, size_t cb);
15:34 lh_bot: void free(void * ptr, size_t real_size);
15:34 lh_bot: varna: 可以认为是
15:34 lh_bot: 当然目的不仅如此
15:35 varna: 目的是什么？
15:35 lh_bot: hint
15:35 varna: 哦，入出参啊
15:35 varna: 我以为只是个出参
15:35 lh_bot: 不是
15:35 varna: 求解释
15:35 lh_bot: realloc 是出入参
15:35 lh_bot: 这个东西是给 free 用的
15:36 lh_bot: 当然 c++14 也加了个类似东西
15:36 lh_bot: void operator delete(void * p, size_t hint);
15:36 lhanjian: aligned_alloc posix_memalign之类的
15:36 lh_bot: 这个东西是在给，例如使用了伙伴算法类似的堆等等，的提示用途
15:37 lh_bot: 因此 malloc 自己就不需要维护实际的块大小了
15:37 lhanjian: 我老实承认，没明白 入出参/hint 是什么意思……
15:38 lh_bot: 很多分配器都会根据块大小选择不同的分配方案
15:38 varna: 这个做法比较不错，以前给nvm写buddy的时候我都把块大小艹进奇怪的地方了……
15:39 lh_bot: 例如 Windows LFH 在 32K 以下（16, 32, 64, 128, ..., 32K）都会使用不同的分配器  
15:40 lh_bot: 实际上我兹磁使用这种接口  而且很容易包装成 malloc
15:40 lh_bot: 对了  有一点需要提出
15:41 lh_bot: realloc 只能原地重分配
15:41 lh_bot: 那么 void ** ptr 可以改为 void * ptr
16:06 tutu: 要自己写内存分配管理啊
16:08 lh_bot: 又不是没写过
16:08 lh_bot: YY 一下而已
16:08 lh_bot: 至于为什么 YY    无非是 malloc 已经荼毒了
16:09 varna: 随机分配器我一直懒得写
16:09 varna: 能用别人的就用别人的
16:10 tutu: 那得需要多高的效率才自己写malloc啊？
16:10 varna: 至于之前那个脑洞，实际上根源是降低eval的地位
16:10 varna: 未必malloc
16:10 varna: 可能是用一个内存池代替具有完整随机分配去配功能的东西
16:10 varna: 也可能就是带hint的整块内存分配
16:11 tutu: 内存池一直是我觉得神圣不了艹的东西
16:11 tutu: 不可
16:12 lh_bot: 你想多了
16:12 varna: 内存池是个快速简单的东西
16:12 tutu: 我得找时间艹艹
16:12 varna: 顺序分配，多次分配一次去配
16:12 varna: 比大部分的分配器结构都简单点
16:13 tutu: 小耗，你的posidon里有木有？
16:13 lh_bot: 有个类似的  https://github.com/lhmouse/poseidon/blob/master/src/main/stream_buffer.cpp#L86
16:13 tutu: 我近期去拜读
16:14 lh_bot: 这就是个静态链表……
16:14 tutu: 刚才看TCP服务器框架，就有内存池，对象池
16:14 tutu: 喔
16:14 lh_bot: 你先确定一下到底需不需要这种东西
16:14 varna: 尤其是内存池，很可能你不需要
16:15 tutu: 我觉得是和需求相关的
16:15 lh_bot: 鼓吹对象池的我又不是没见过
16:15 tutu: 不知道对不
16:15 varna: 一个长会话上拖着一大堆半死的临时对象的内存池近乎找死
16:15 varna: 而对象池里的那些东西要不要复用——如果你有内存池，这个倒是值得
16:16 lh_bot: 你想想 stream_buffer 是什么就能明白为何会有那个静态链表
16:17 tutu: 啊嘻，得滚去教室了，我路上想想
16:17 varna: 其实你该学Perl
16:17 varna: Perl能有效地破坏一个人的理智甚至健康状况
16:20 xxxxxxxx: http://puu.sh/gvALo/ef3c5b945a.png 等级排序...
16:21 tutu: ………
16:35 lh_bot: 我有个疯狂的想法
16:35 lh_bot: 你们看看可行性如何
16:35 varna: 给，耗药
16:35 lh_bot: 规定动态对象只能以 240 字节的固定大小分配
16:36 varna: 为何是240
16:37 lh_bot: 256 - 2 * 8
16:37 varna: 那样还不如单独接一个512B封顶的伙伴堆吧
16:38 lh_bot:    嘛  其实就那种东西
16:42 lh_bot: 伙伴堆在内核外用的貌似比较少？
16:43 varna: 似乎是
16:43 varna: 毕竟那东西分出来的尺寸不少时候不适合直接交给用户
16:44 lh_bot: 数组里面挂链表呢
16:44 varna: 这个可以有
16:44 lh_bot: 0: 16 字节  1: 32 字节  2: 64 字节  ...
16:44 lh_bot: 弄 64 个桶
16:44 varna: 实际上我那个实现就类似数组里挂链表
16:44 lh_bot: 其实 48 个就够
16:44 tutu: hash不就会是数组里挂链表么
16:44 varna: 两回事
16:44 lh_bot: 显然不是那东西
16:44 varna: 而且散列未必挂链
16:45 tutu: 喔喔
16:45 varna: 数组里挂链表的好处是容易对齐
16:45 varna: 这样可以砍掉不少元数据
16:45 tutu: 原来如此
16:46 lh_bot: 链表可以用内存块本身实现
16:46 varna: 就是那样
16:46 varna: 在内存块上放一个2指针长的侵入式
16:46 lh_bot: 所以你只要把 malloc 的参数加上 size_t 的尺寸  然后 __builtin_clz 一下拿到指数就行了
16:46 lh_bot: 减掉 4 就是数组的瞎掰哦
16:46 lh_bot: 下标 *
16:47 varna: 而且那么做搞伙伴堆也容易点
16:47 lh_bot: mmap 一个 64K   然后拆开
16:47 varna: 64K我觉得malloc就行
16:48 sismvg: http://tieba.baidu.com/p/3629638875
16:49 sismvg: 长门有希被画崩了啊
16:49 sismvg: 换我冷娇啊
16:51 lh_bot: varna: mmap() 4k 到底给你分配多少
16:52 lh_bot: varna: windows 下面 VirtualAlloc 4KB 返回一个 64K 的地址空间的第一个页，其余都是 reserved 状态
16:52 lh_bot: 页面不可读写  但是地址被占用了  得手工 commit 才可以读写
16:53 lhanjian: mallopt的默认M_MMAP_THRESHOLD，会让malloc在128×1024这个位置为分水岭，以上是mmap，一下就是sbrk了
16:53 lhanjian: 以下
16:53 lh_bot: 数组下面挂链表其实有个缺点的
16:53 lh_bot: 上面这个内部碎片严重
16:53 lh_bot: 如果不是 2 的指数还不适合用这方法
16:54 lh_bot: 优点当然是有的   可以很快  而且几乎没有外部碎片
16:54 varna: lhanjian: 默认阈值我记得有浮动
16:54 varna: lh_bot: mmap 4k我也不知道给多少……
16:55 lh_bot: varna: 你写个死循环看看最后分配多少个
16:55 varna: 我看看
16:55 lh_bot: 我自己机器上大概能分配 23w 个
16:55 lh_bot: 每次 VirtualAlloc 4K
16:55 varna: 那个应该受zone限制吧
16:56 lh_bot: 64 位的机器
17:04 varna: 4k我随便一刷就是一百几十万个……
17:04 varna: 刷到178w有点卡了
17:04 varna: 总之绝对不止23w...
17:05 lh_bot: ok
17:05 lh_bot: geordi: << 230000 * 65536
17:05 geordi: warning: integer overflow in expression
17:05 lh_bot: geordi: append ull
17:05 geordi: 15073280000
17:05 lh_bot: 16GiB 这就是我的物理内存数
17:06 lh_bot: 搞 64KiB 的大内存块弄伙伴分配目测是投机取巧的实现
17:06 varna: 看起来是
17:06 lh_bot: 缺点太明显了  malloc(64k) 就返回了 128k
17:06 varna: 正好向上了
17:06 lh_bot: malloc 只能在内部保存状态  所以就逗比了
17:07 lh_bot: 为了 8 个字节而搞出一大块
17:07 xxxxxxxx: varna 东方舰队任务值得做么?
17:08 varna: 你水面舰能在不太亏资源的情况下碾压4-2吧
17:08 xxxxxxxx: 不知道
17:08 xxxxxxxx: 我还打通4-1呢
17:08 xxxxxxxx: 没
17:09 varna: 或者你能保证一周里每天潜艇能刷通两次4-2
17:09 varna: 如果能做到其一的话，就可以做东方系列（12胜 -> 1胜 -> 5-2 2胜）
17:09 varna: 最后有些螺丝，中间能得点铝，4-2下路能捞点钢
17:10 xxxxxxxx: 通常4-2什么编成打任务?
17:10 varna: 6ss 或者足够低耗的能拿制空的队伍
17:11 varna: 虽说碾压，但4-2敌战舰的水准也相当不错
17:11 varna: 我记得旗舰可能有个金撸
17:11 xxxxxxxx: 轻空母算消耗低么?
17:11 varna: 去一趟稳定扔桶就不算
17:12 varna: 东方任务相当麻烦，不推荐早期做——不过潜艇每天硬偷是能偷下来的，就是费时间
17:12 varna: 毕竟道中反潜有金皮呜十铃
17:16 xxxxxxxx: 听上去我去做那个有点作死...
17:18 varna: 我觉得去做东方的资源不如烧了周5-4
17:18 xxxxxxxx: 然而5图还没开
17:19 varna: 速攻别怂
17:19 varna: 5-4打一场S胜大约2.2战果
17:19 xxxxxxxx: 我觉得还是攒足资源再考虑战果稳一点
17:19 varna: 要是你烧得起，甚至可以手工填一个5-5的空白（实际上也差不多）
17:20 varna: 佐伯湾的战果毕竟不难吧
17:20 varna: 现在应该没多少人打得起5-5
17:21 xxxxxxxx: 我现在247战果 501是490
17:22 xxxxxxxx: 第10是981
17:23 varna: 你3-5没打吧
17:23 xxxxxxxx: 2-5都没打
17:23 varna: 所以说么
17:24 varna: 如果要在现在的佐伯湾确保战果，前三个extra就够用
17:24 xxxxxxxx: 打2-5和3-5?
17:24 xxxxxxxx: 我怀疑我打不过...
17:25 sismvg: http://www.guokr.com/article/438003/?_block=article_interested&_pos=0&rkey=3eee
17:26 sismvg: 五十六个性别，五十六枝花，五十六个人是一家（兄弟姐妹没法套啊）
17:26 krfantasy joined channel
17:31 krfantasy1 joined channel
17:31 lh_bot: IP地址: 116.251.221.227新加坡
17:32 lh_bot: 223.94.37.103浙江省宁波市 移动
17:33 krfantasy quit:Ping timeout: 240 seconds
17:36 tutu: varna,单线程处理读，单线程处理写，外加读缓冲队列和写缓冲队列。工作线程那里的话处理逻辑，从读缓冲队列里读取，处理，再交给写缓冲队列，之间用互斥锁。缺点的话，当数据量大时，处理并发就很慢了
17:37 tutu: lh_mouse,这个设计是不是缺点有些多 … 
17:39 lh_bot: tutu: 读写一个线程  消息循环一个线程  数据库多个（可配置）  消息线程负责计时器
17:40 xxxxxxxx: 今天猫的不行...
17:41 tutu: 这样啊
17:41 varna: 小耗把该说的都说了
17:41 lh_bot: tutu: 你的逻辑有多少
17:41 lh_bot: 你的逻辑就是再慢一千倍照样比 IO 快得多
17:41 tutu: 假设是HTTP
17:41 tutu: 很简单的逻辑
17:41 varna: HTTP可以继续简化
17:42 varna: 缓冲链挂在会话上
17:42 varna: 一线程epoll
17:42 tutu: 所以把读写合到一个线程了
17:43 lh_bot: DDR3 内存的速度大概是 10GBps 左右
17:43 lh_bot: 你用 IO 线程解码
17:43 varna: 数据库和静态缓存可以配置公认
17:43 varna: 工人
17:43 lh_bot: 反正 IO 本来就慢的跟狗一样不差这点速度
17:43 varna: 一般的逻辑都可以交给单线程的IO
17:44 varna: 这样足够撑起HTTP
17:44 lh_bot: epoll 收数据解码之后打个包往消息队列里一丢完事
17:44 varna: 可以不要消息队列
17:44 lh_bot: 你应该明白   即使你的处理器是二十个核的  你的总线还是只有一个
17:44 varna: 维持一个会话集合，缓冲链和过滤器链挂在每个会话上
17:44 tutu: 喔喔
17:44 lh_bot: 所以两个 IO 线程只会使效率更低
17:44 varna: 所有会话单独转移状态
17:45 varna: 即使你有多个工人，IO也集中一下
17:45 varna: 最多accept独立出来
17:45 varna: 不过HTTP的话accept不独立也行
17:45 lh_bot: poseidon 的消息是有一个特定标记的
17:45 tutu: accept放到一个线程上处理
17:45 varna: 不必总单独accept
17:46 varna: 不然你有个同步的问题
17:46 lh_bot: accept 丢 epoll 后面
17:46 tutu: 嗯嗯，也好
17:47 varna: accept不单独处理的代价是多进程的时候需要特别处理
17:47 varna: 比如你有CPU*2个固定的工作进程
17:47 varna: 这里或者你REUSEPORT, 或者accept锁
17:47 varna: 总结起来，其实是你不必要试图考虑太复杂细致的分工
17:47 lh_bot: 按我之前的设想是一个服务器做网关  其余的搞分布式
17:48 varna: 另外省得有人误解，再说一遍多进程不是进程池
17:48 varna: 一网关内网分布比较好
17:48 lh_bot: 所以客户端还是只看到一个服务器
17:48 lh_bot: 这样不存在 accept 惊群的问题
17:48 varna: 还是有的
17:48 varna: 典型的例子是nginx
17:48 lh_bot: 只是中间转发  还是得在 session 上面开洞
17:48 varna: nginx推荐单线程多进程
17:48 tutu: 领导者/追随者？
17:48 varna: L-F效果一般
17:49 lh_bot: 直接 epoll 线程转发  不走主线程
17:49 varna: 我不是很推荐
17:49 varna: 业务逻辑方面，HS/HA会干净一些
17:49 varna: 素朴reactor则总被人忽略
17:50 varna: 实际上如果业务逻辑不多，我不太推荐弄工人线程
17:51 tutu: 那…
17:51 varna: 不要认为并发了就好
17:51 varna: 头脑清醒点
17:53 sawfish joined channel
17:53 sawfish: 一开学就不想学习这也是叼。
17:58 lh_bot: varna: 不���推荐
17:59 tutu: ………？
17:59 tutu: 怎么乱码
17:59 lh_bot: irssi 渣渣
18:00 varna: irssi偶尔会蹦出一两个乱码来
18:00 varna: 而且很难复现
18:02 tutu: 小耗，刚才说的那些，我用C去实现一下吧，测试的话，… 应该如何 ……
18:02 lh_bot: varna: 那个字是啥
18:02 varna: 是“太”
18:02 tutu: 擦
18:02 lh_bot: C 渣渣
18:02 tutu: … 是
18:02 lh_bot: poseidon 写 1w 行的东西你用 C 不得写出 10w？
18:03 lh_bot: 提升垃圾行数的有效方案：使用 C 语言
18:03 tutu: 不是啊，还写不了那个
18:03 varna: 用C的话不会有十万的
18:03 lh_bot: 你要知道代码的故障总量是和总行数成正比的
18:03 tutu:  … … 
18:03 varna: 只会剩下八千，其余的东西以乱七八糟的形式当作filter扔出了服务器
18:03 varna: 当然它们仍然会产生bug
18:03 tutu: 小耗那个，我日后再仿
18:04 tutu: 先能写出来个能用的框子
18:04 xxxxxxxx: 我看到了日后再仿
18:04 varna: 别被人吓到
18:04 FrankHB quit:Ping timeout: 272 seconds
18:04 varna: 每个人的个人观点都很重，你照单全收就逗了
18:04 tutu: 嗯嗯，明白的
18:05 lh_bot: 行吧  我就说一个事情吧
18:05 tutu: … 冷静啊
18:05 lh_bot: 在单逻辑线程的环境下  你需要某些数据  但是内存里没有  在数据库里 怎么办
18:05 varna: 我之前说过数据库线程可以单独配置
18:06 tutu: 额 ， 对
18:06 lh_bot: 你的逻辑线程发现数据不存在  怎么办
18:06 lh_bot: 你可以试着用 C 写写看  写死你
18:06 tutu: 用某种通知 …
18:06 varna: 通知就能通知死你
18:06 varna: 这没错的
18:06 varna: 你连最基本的异步都没有
18:07 lh_bot: 于是你怎么对付  进行了一半的操作
18:07 lh_bot: 操作只进行一半  但是没法继续了 怎么办
18:07 lh_bot: 因为没有数据
18:07 varna: 那么我洗耳恭听一下C艹用户怎么办
18:07 tutu: 呀 ， 阿嘻
18:08 lh_bot: poseidon 的做法是  创建一个异步加载请求丢给数据库线程  然后抛一个异常把当前的调用栈干掉
18:08 lh_bot: 消息循环捕获到这个异常之后从当前主队列中移除这个消息丢到另一个队列里
18:08 lh_bot: 这另一个队列是有说法的
18:09 lh_bot: 每一个消息都有一个标志，当前的实现是 weak_ptr<const void>
18:09 varna: C艹用户试图制造一个配套模式匹配的CPS, 然后把它当作C艹——当然C做这个需要重度hack——说起来了
18:09 lh_bot: 我先说下这个标记是干什么的
18:09 lh_bot: 它确保具有同样标记的所有消息都是 FIFO 的
18:10 lh_bot: 即使是被丢进了延迟队列
18:10 lh_bot: 你可以考虑下这个东西用 C 怎么实现
18:10 lh_bot: 这也是用 weak_ptr  而不是干脆 const void * 或者 intptr_t 的原因
18:10 varna: 用C的麻烦在这里其实是weak_ptr
18:11 lh_bot: 因为你在处理消息的时候可能一个旧的 session 被干掉了  这时候生成了新的 session ——  但是他们具有同样的地址！
18:11 lh_bot: 于是就 233333 了
18:11 varna: 单纯CPS并不很麻烦
18:11 lh_bot: 这里用 SJLJ 也可以做  但是就需要人肉考虑一致性
18:12 varna: 需要一个人肉continuation
18:12 lh_bot: 和 exception safety 同理   必须注意函数可能执行一半被退栈然后从头来过
18:12 lh_bot: 这是问题之一  当然还有另一个问题
18:13 lh_bot: 数据库的执行是有可能会失败的……
18:13 lh_bot: 所以这里并不使用数据库的回调，而是丢进另一个队列用指数回退计算延迟
18:13 lh_bot: 重试一定次数后放弃
18:13 lh_bot: 目前的延迟是 100 200 400 800 1600 3200  放弃
18:13 lh_bot: （上面说的是毫秒）
18:14 varna: 其实这问题初看是个Future风格的问题，但我不认为一个单纯的Future适合解决这个
18:14 lh_bot: future 还是适合多线程
18:14 varna: +
18:14 lh_bot: 单线程有单线程的好处  写逻辑时候基本就不用考虑锁
18:15 lh_bot: 我目前的做法就是上面的所有接口进去都是主线程
18:15 tutu: 恩
18:15 varna: 串行化很多事情方便，除了逻辑
18:15 varna: 逻辑一旦长一些，就需要考虑异步
18:15 lh_bot: 唯一的坑就是上面说的  怎么实现伪异步
18:15 varna: 而C的异步……都是艹出来的
18:15 lh_bot: 异步疼
18:16 varna: SJLJ也好，ucontext也好，都得生艹
18:16 tutu: 晚上又得多吃点了
18:16 lh_bot: 我之前考虑的问题  就像 Mordor 那种多线程多协程的架构
18:16 lhanjian: 没有不带所有权的指针是不是C党永远的硬伤？
18:16 varna: 大概不是
18:16 varna: 我觉得硬伤是异步、Lambda、泛型
18:17 tutu: mordor?
18:17 lh_bot: 如果获取了某个 mutex    然后执行了某个 IO 操作，换到别的协程了——锁怎么办？
18:17 lh_bot: tutu: 我确定我们原来的公司用的框架就是 Mordor 改
18:17 varna: tutu: One Ring to bind them all - and in the DARKness, F@ck 'em
18:17 lh_bot: 这货是一个大数据的框架，专门处理大数据（每天几十 T）
18:18 krfantasy1 quit:Ping timeout: 255 seconds
18:19 lh_bot: 我之前设想的另一种方案
18:20 lh_bot: 弄两个逻辑线程  一个工作一个睡觉
18:20 lh_bot: 工作的发现要阻塞 就唤醒另一个  自己睡觉
18:20 varna: 适配mutex到睡的么
18:20 varna: 这里有个问题
18:21 varna: 换到协程未必是换到线程
18:21 lh_bot: 没错
18:21 varna: 实际上第二个线程可以是个影子线程，负责本线程上阻塞的协程
18:21 varna: 而第一个线程总是工作的
18:21 tutu: … 这里就完全不懂了
18:22 varna: 好处是这里仍然一读一写，坏处是它不解决问题的实质
18:22 lh_bot: 其实我还是觉得抛个异常把调用栈艹掉比较省心  
18:22 varna: 对C艹来说这个做法值得赞赏
18:22 lh_bot: 当然我不知道别的语言怎么搞
18:22 varna: C的麻烦就是能做的事情太少了
18:23 lh_bot: 很多别的脚本语言都是 CGI 多进程
18:23 lh_bot: 所以完全没这档子破事
18:25 varna: 今天的话题为何如此正经
18:25 varna: 舰尾值班人员都哪去了
18:25 varna: xxxxxxxx: ^
18:25 lh_bot: condy: ^
18:26 xxxxxxxx: 羊驼不是在么...
18:26 sawfish: 获取mutex之后执行IO操作还用协程？
18:26 code_new joined channel
18:26 varna: xxxxxxxx: 我排版，你们值班
18:26 lh_bot: IO 就会跳到别的协程上
18:27 sawfish: 不是，为什么要这么写？
18:27 varna: IO触发协程重调度是标准做法
18:27 lh_bot: IO 会阻塞
18:27 varna: goroutine其实让系统调用也触发
18:27 lhanjian: 这也是我就是搞不明白coroutine和thread的区别何在的地方……
18:27 lh_bot: 用协程包装一下  接口上就看不出非阻塞了
18:27 sawfish: 这个我知道，但是为什么要在持有mutex的时候IO？
18:28 lh_bot: 里面是协程阻塞线程不阻塞
18:28 lh_bot: sawfish: 实际上不应该这么做
18:28 varna: lhanjian: 很多时候你不需要区分，但如果你真的要区分，那么routine不具有主动的控制流
18:28 lh_bot: 但是万一手贱了怎么办‘
18:28 sawfish: 是啊，所以说这个问题似乎不应该存在。
18:28 lhanjian: varna, “主动”？
18:28 varna: 当然这里我把user thread也当作主动的，实际上比较暧昧
18:28 sawfish: 好吧
18:29 varna: lhanjian: 一个C艹意味上的函数不是一个线程——你可以如此类比
18:29 xxxxxxxx: varna 隼鹰15.5副炮x2 99舰爆x2还能抢mvp怎么办...
18:29 lhanjian: 比如说协程A阻塞在read上了，那么他就应该跳到另外一个协程B上去？
18:29 varna: lhanjian: 对
18:30 varna: xxxxxxxx: 带太多了
18:30 varna: xxxxxxxx: 带一个97，其余彩云
18:30 lhanjian: 那么协程A阻塞在那儿该怎么做？
18:30 lh_bot: 是搭载协程 A 的线程跳到 B 上去
18:30 sawfish: 正常的想法是在协程控制块里放一些持有mutex之类的信息保证IO时可以检测到避免重调度吧。
18:30 sawfish: 因为毕竟这个用法不正常。
18:30 varna: lhanjian: 我的做法是挂一个单独的IO Monitor
18:30 lh_bot: 我看过他们之前的协程 mutex 的头文件
18:30 lh_bot: mutex.lock 也是会跳到别的协程上的
18:31 varna: 我之前说过，这里mutex可以触发重调度
18:31 lh_bot: 然后每个 mutex 里都塞了一个 list ……
18:31 varna: 实际上原则就是阻塞触发重调度，不可以真阻塞
18:31 varna: 但是这样会有成吨的list
18:31 sawfish: 没做不清楚
18:31 lh_bot: 添加元素进 list 丢个异常出来怎么办……
18:32 lh_bot: 破事更多
18:32 sawfish: C倒是不在意这个
18:32 lh_bot: 不在意个蛋
18:32 lh_bot: C 比 C艹 更麻烦
18:32 sawfish: 这倒是
18:32 lh_bot: malloc 返回空指针你怎么办？
18:32 tutu: …
18:33 varna: 虽然未必会返回，但你拷贝失败是件很尴尬的事
18:33 lh_bot: C艹直接丢异常虽然很可能有问题但是一般还不会死
18:33 varna: malloc回个NULL你得善后
18:33 lh_bot: 空指针整不明白直接炸了
18:33 sawfish: 确实失败是无法处理。
18:33 varna: 当然如果不回NULL, 两种可能
18:33 varna: 第一种是没问题，第二种是整个进程都被OOM了
18:34 sawfish: 怎么可能没问题哦。
18:34 varna: sawfish: 赌五毛不
18:34 lh_bot: 我建议那库的作者学学 Windows CriticalSection
18:34 sawfish: 算了
18:34 Xilzzerts: 据说新libc里面malloc失败也不一定返回NULL
18:34 varna: 我都说OOM了你还没意识到什么吗
18:34 lh_bot: Windows 没得学可以学 MCF
18:34 varna: MCF没得学可以爆MCF的作者
18:34 sawfish: 不好意思，没。
18:35 varna: 所以说没人挖坑你都得自掘坟墓……
18:35 sawfish: 我馒馒意识一下。
18:35 Xilzzerts: By  default,  Linux  follows an optimistic memory allocation strategy.  This means that when malloc() returns non-NULL
18:35 Xilzzerts:        there is no guarantee that the memory really is available.
18:36 lh_bot: 直到你 * 了一下  内核才给你分内存
18:36 lh_bot: 如果内核没法给你分内存  你就死了
18:36 varna: 运气好的话死的或许是firefox
18:36 sawfish: = =
18:36 varna: 可惜服务器上大概不会运行ff
18:38 xxxxxxxx: 活动斩杀得时候死的是FF就是神作
18:38 varna: FF的flashplugin现在玩不起舰娘
18:38 xxxxxxxx: 噗?
18:38 sawfish: 果然要学习还得上来找爆
18:38 varna: 在AL/MI作战之前的某个更新（可能是棒各二改）之后，最新版本的libflashplugin就跪了
18:39 varna: 进去就猫
18:39 varna: 某个低版本似乎持有一定的兼容性
18:39 varna: 不过我从那次之后就单独用chrome开舰娘了
18:40 sawfish: OOM我都有办法的话那宇宙就和谐了啊。
18:41 varna: 没让你有办法
18:41 xxxxxxxx: 35.6连装炮要留么?
18:41 lhanjian: OOM你至少应该优雅的退出，或者不再接受新的任务等着旧的任务释放资源
18:41 varna: 我记得那个炮可以用来改俾斯麦的主炮
18:42 varna: lhanjian: 优雅地退出是这样的：你崩溃了，运维半夜发现，一边娘希匹一边手工重启
18:42 varna: 在POSIX系统上谈优雅太难
18:42 sawfish: 所以其实就是死了。
18:43 varna: lhj那个“优雅退出”实际上是俄式热启动
18:43 sawfish: 不接受新的任务那不可能。
18:43 varna: 消亡的slave不再接受新任务
18:43 sawfish: 所以只能退出
18:43 varna: 至于为何要热启动——因为俄国人的addon是编译进服务器的……
18:43 sawfish: 然后又不能优雅
18:44 varna: 发两个图对比
18:44 xxxxxxxx: varna 试制35.6
18:44 varna: 甲： http://imgsrc.baidu.com/forum/w%3D580%3B/sign=492d743151fbb2fb342b581a7f7121a4/d439b6003af33a87f9937c76c25c10385243b5db.jpg
18:44 xxxxxxxx: ?
18:44 varna: 乙： http://imgsrc.baidu.com/forum/w%3D580%3B/sign=37527087b2fd5266a72b3c1c9b23962b/cefc1e178a82b901fc09bf5f778da9773912ef32.jpg
18:44 sawfish: 一个协程系统怎么可能不接受新任务。
18:44 Plough joined channel
18:44 varna: xxxxxxxx: 我记得是改38
18:44 varna: sawfish: 不是说协程，而且你口胡了
18:45 varna: Plough: 爆
18:45 Plough: varna: 自肛去
18:45 varna: xxxxxxxx: 试制356的作用是练级的时候压火力
18:45 Plough: varna: 我入了Shattered Sword的Kindle版
18:45 Plough: 15刀
18:46 whocares_2 quit:Ping timeout: 246 seconds
18:46 sawfish: ？口胡了么？并发协程不接受新任务可能会影响逻辑说。
18:46 varna: sawfish: 一个机制跟你处理业务逻辑有什么关系
18:46 sawfish: 毕竟串行化的玩意
18:46 xxxxxxxx: varna 只看到38升级可以改
18:46 sawfish: 好吧不知道。
18:46 sawfish: 我不知道用户打算怎么用。
18:46 xxxxxxxx: 变成38改
18:46 varna: Plough: 九十元……还不错啊
18:47 Plough: +
18:47 varna: 我买个国内的实体版吧
18:47 varna: 正好三月份的公款下来了
18:47 Plough: 壕
18:47 varna: 学校食堂毕竟便宜
18:47 Plough: 国内似乎没有kindle版
18:48 Plough: 我冲去美亚买的……
18:48 varna: POI?
18:48 varna: 日向摔了忘修……今天的反潜出动肥桑
18:49 Plough: 我还在坚持不开舰娘
18:49 varna: 我跟你说过笑话
18:49 Plough: 总感觉有点像戒烟……
18:49 varna: 个*
18:50 varna: xs桩的参数在perl栈上，被自动生成的代码强行写回局部变量
18:50 varna: 于是我那玩意自爆了
18:50 varna: 寄存器都是错的
18:50 lhanjian: 我感觉羊驼永远在和既定的限制做斗争……
18:50 Plough: ……什么情况
18:50 lhanjian: 然而从来没有完全胜利……
18:50 varna: 你记得一般调用XS桩的方法吧
18:50 lhanjian: 不记得。
18:50 lhanjian: 实际上我没用过
18:51 lhanjian: 匿了……
18:51 varna: 切perl栈，压参，调用
18:51 varna: 我忘了这个
18:51 Plough: ……参数塞在C栈上所以跪了么
18:51 varna: 比如他们会给你生成一个 SV *the_first_arg = ST(0)
18:51 whocares_2 joined channel
18:51 varna: 不是C栈
18:51 whocares_2 quit:Remote host closed the connection
18:51 varna: 是xs桩的参数栈
18:52 varna: 如果你看xsubpp生成的c代码，能很清晰的看到这个过程
18:52 varna: 你写在xsub里的参数，实际上是被赋值的同名局部变量
18:53 varna: lhanjian: 我的悲剧就是懒人的悲剧
18:53 lhanjian: 不懂……
18:53 sawfish: 就是不能偷懒
18:53 Plough: 我先去研究下XS
18:53 varna: 想用现成的，又不想折腾C艹，还没有自己发明胶水
18:53 varna: 最后就只好hack...
18:54 varna: sawfish: 这评论碉堡
18:54 Plough: 求发源码围观
18:54 sismvg: 用C艹时你会发现，你思考了很多架构方面的事情
18:54 varna: 全是试验用的码
18:54 sismvg: 然后死在了编译
18:54 varna: 而且一堆xs不好编译
18:55 varna: 简单地说，就是xsub里不好直接constructing call
18:55 sismvg: house X wilson
18:55 varna: 还需要hack一下
18:55 varna: 不过至少我有解法
18:55 varna: 我可以伪造一个
18:55 varna: 比起这些，我掉进J点了……
18:56 sawfish: 躺枪，撸少就是罪。
18:56 varna: 肥桑！看你的了！
18:56 varna: 卧槽大井被红皮轻母开幕中破了……
18:57 Plough: 稳如OOI
18:57 varna: 算了能打完两场就行
18:58 varna: 本来不该有今天第二场反潜的，但是周一我点任务点错了……
18:58 Plough: EMACS似乎就没个FFI
18:58 Plough: 要么pipe要么socket，总之你得折腾字符串……
18:59 varna: emacs总能执行shell命令吧
18:59 varna: 单独开服务进程太疼了
18:59 Plough: 能，但是返回之前整个编辑器会卡死
18:59 varna: 噗
18:59 varna: 我说怎么有个clang-compleeetion-async
18:59 Plough: 就是这个原因……
19:00 xxxxxxxx: http://kancolletool.github.io/ 这个有人试过么? 或者谁有小号试试看?
19:00 Plough: 试过
19:00 varna: 肛旗似乎试过
19:00 xxxxxxxx: 怎么样?
19:00 Plough: 比KCV鶸不少，不过也算能用
19:01 wlemuel quit:Ping timeout: 255 seconds
19:01 Plough: 曾经的优势是跨平台，但是现在Linux上用不了了
19:01 varna: 提倡无插件，你将变成部落的达巴
19:01 wlemuel joined channel
19:01 xxxxxxxx: 达巴?
19:03 varna: 南西族的
19:03 xxxxxxxx: 我每次出击都点到远征上面去....
19:03 varna: 纳西族
19:03 varna: ……输入法
19:03 Plough: http://www.acfun.tv/a/ac1784254
19:03 xxxxxxxx: 南西族orz
19:06 xxxxxxxx: https://github.com/gardejo/js-kancolle-logistics-visualizer 还有个这样的东西
19:07 sawfish: 纳尼口类
19:07 varna: 口类挖刚大木那喏DEATH
19:08 varna: 出32！
19:08 sawfish: = =
19:08 varna: 7.7...
19:08 varna: 出32！
19:08 varna: 出！
19:09 varna: 试制连装企鹅……
19:09 xxxxxxxx: 卧槽 赌电碳的土豪 你为何那么多铝
19:09 varna: 我没多少铝
19:09 sawfish: 偷懒即进步！大概吧。
19:09 varna: 现在也就一万出头
19:09 xxxxxxxx: 一万还不多...
19:09 varna: 一万还不够两发大凤的
19:10 varna: 反正现在不像MI, 不流行喷铝了
19:10 sawfish: 两发...大凤...
19:10 varna: 而对付一般的作战，我的战斗机配备在黑鬼里也算上等的了……
19:10 xxxxxxxx: 卧槽我都刷闪跑远征6了还没有一万
19:10 sawfish: 油吖库土豪了。
19:11 varna: 铝这东西其实主要是大建费的多
19:11 xxxxxxxx: 啊啊啊要事故了 
19:11 varna: 一般高强度的航空战也就喷一百多的样子
19:11 xxxxxxxx: 还好打了划水的....
19:11 varna: 倒是MI的长程航空战大约一场七八百
19:12 sawfish: 不是...卧槽你们不能这样搞。
19:12 sawfish: 舰女人不是好话题。
19:12 varna: 大凤造一次至少也得5.2k铝，闪6废人化差不多一天造一次的铝不是问题
19:12 varna: sawfish: 求好话题
19:13 sawfish: 嘛，算了。
19:13 sawfish: 木油吖。
19:13 xxxxxxxx: 一天对别人说没妹子就是作难道是好话题么...
19:13 varna: 所以不然你也来抢个号吧
19:13 sawfish: 果然我还是去撸。
19:13 xxxxxxxx: 看准时间 点击就送 根本不用抢
19:14 sawfish: 比起舰女人，好像撸码还稍微有趣些。
19:14 sawfish: 实在没懂那玩意哪里好玩。
19:14 * varna 笑
19:15 xxxxxxxx: 利根中破怎么搞得和别人大破一样...
19:15 varna: 没见你写码啊……
19:15 sawfish: 我正在写啊卧槽。
19:15 xxxxxxxx: 大破还能露啥?
19:15 varna: 33...
19:15 varna: xxxxxxxx: 最多胖次
19:15 varna: sawfish: 里面有多少是你写的……
19:15 sawfish: 主要还有个maya的建模要搞。
19:15 hoxily joined channel
19:16 varna: 最后一发电探
19:16 varna: 我操连装33
19:16 varna: 这不行，这得接着来
19:16 sawfish: 我晕死，我搞懂了还得都是我写的？
19:16 varna: 搞懂了（笑）
19:16 xxxxxxxx: T2 准备好键盘
19:17 sawfish: 好吧好吧好吧我操。
19:17 sawfish: 我自己写。
19:17 varna: 何必呢
19:17 varna: 内核都是破事
19:17 sawfish: 破事才有干的价值。
19:17 varna: 破事才没什么意思
19:18 varna: 你自己去看看那些datasheet
19:18 varna: 全都是datash*t...
19:19 sawfish: 问题是我先学会干点破事吧。
19:19 varna: 你其实可以问自己一个问题
19:19 sawfish: what？
19:19 lh_bot: 18:45 < sawfish> ？口胡了么？并发协程不接受新任务可能会影响逻辑说。 // 让发任务的那货哑巴掉即可
19:19 varna: 你为何觉得自己该费力气去折腾一个肯定成不了东西的homebrew kernel, 而不去写点别的
19:19 lh_bot: 实际上我就是这么干的
19:20 hoxily quit:Client Quit
19:20 hoxily joined channel
19:20 sawfish: 我tm又不打算要个东西。
19:20 lh_bot: 如果 session 的逻辑抛出了一个 bad_alloc 啥的直接把 session 干掉
19:20 sawfish: 要了再说
19:21 varna: sawfish: 你没看懂我的问题
19:21 varna: 这个问题是我问我自己的
19:21 varna: 而我对自己的评价是，我学了几年计算机，感觉自己其实哪里都不会
19:22 sawfish: 因为不会啊，会我写它干嘛。
19:22 varna: 你还是没看懂
19:22 varna: 当我反思我折腾那些破玩意的过程的时候，我感觉我什么都没学到
19:23 sawfish: 我觉得我还有点能学到的东西。
19:23 sawfish: 基础差咯。
19:23 varna: 基础差去折腾这个更没用
19:24 varna: 折腾OS如打活动，资源够了就来一把大的，什么酒胸矶风甲级章，拿来摆着玩
19:24 sawfish: 也对哦
19:24 varna: 折腾完了你资源也烧掉一半至少了
19:24 sawfish: 那我先去日一下服务器。
19:25 sawfish: 这个比较迫切，。我需要涨个姿势
19:25 varna: 而我就是那种硬要弄个矶风逗着玩的黑鬼，最后也没叽到
19:25 varna: 资源还是烧了
19:25 sawfish: 目前的问题是涨个姿势。
19:25 varna: 长姿势来学巫术吧
19:26 sawfish: 这是啥？
19:26 varna: 你可以让死人走路，可以倒着走、拿大顶走、一边反射一边走、一边JIT一边走
19:26 varna: perlxs
19:26 varna: 但是唯一的麻烦是他们可能不会正着走
19:26 sawfish: 好像挺有意思的样子。
19:27 xxxxxxxx: 正在看一个直播电影的 嘴里念叨着 老子不走 老子不走 老子不走
19:27 sawfish: 内核乱七八糟的破B玩意太多目前应付不来。
19:28 Plough: 或者你直接扔掉Perl来个标准套路？
19:28 varna: 不可能
19:28 varna: 航母上没有火炮怎么行
19:28 Plough: 撸个编辑器，再撸个VM，从TCC里扒个汇编器出来搞个JIT
19:28 Plough: 然后前面架个Parser
19:29 varna: JIT现在能动
19:29 xxxxxxxx: varna 换成一个舰攻一个彩云之后经常打不死金皮...
19:29 varna: xxxxxxxx: 金皮当然打不死，炮击收拾他
19:29 xxxxxxxx: 不是我说最后吃雷击了
19:29 Plough: 我倒想试试来这么一套
19:29 Plough: 不过我的VM大概会是LuaJIT的Fork
19:30 varna: 现在我做的接口是 Isonami::Callwrap::construct_call [ $Isonami::Atom::Void => $Isonami::Atom::Int ], $f; 
19:31 varna: my $jitfrag = Isonami::JITwrap::new('int f(void) { return printf("Hello Isonami!\n"); }', ''); 然后 my $f = Isonami::JITwrap::symbol($jitfrag, 'f');
19:31 Plough: 其实我一直在考虑用Perl转发参数
19:31 Plough: 虽说没有你的源码我也不知道该怎么做……
19:32 varna: 你怎么考虑的，即使不清晰也说说看
19:32 varna: 别考虑我的源码
19:32 varna: 我现在可以给你提供函数指针
19:32 varna: 这个指针直接可供C程序调用
19:33 varna: 以下的事情和JIT部分的代码可以完全无关，你从这个基础开始就行了
19:33 Plough: ……这样的话似乎还是不行
19:33 xxxxxxxx: 卧槽开幕没命中 这下又要吃雷击了...
19:34 varna: 两千铝蒸发，只得了两个33……
19:34 varna: Plough: 你想像的是什么样的说来看看，说不定有启发
19:35 Plough: 我忘了当时的想法了……不过倒是有个新的脑洞
19:36 Plough: 你拿到参数，然后动态生成一段C代码
19:36 Plough: 然后调用编译器编译
19:36 varna: 其实我就不想这么干……
19:36 Plough: 然后想办法把那个中间函数塞进Perl
19:36 varna: 拐弯太多了，而且最后还是要做一次调用
19:36 Plough: 似乎也没啥太好的方法了
19:37 varna: 如果横竖都要造一个调用，我不想插很多动态C代码
19:37 Plough: libtcc的JIT是会返回一个函数指针？
19:37 tutu quit:Read error: Connection reset by peer
19:37 varna: 不是
19:37 varna: 返回一个TCCState *
19:38 tutu joined channel
19:38 xxxxxxxx: 3疲劳怒抢mvp
19:38 varna: 然后有个 void *tcc_get_symbol(TCCState *, const char *)
19:38 varna: 用这个得符号
19:39 Plough: 我去搞个libtcc.h
19:40 varna: 你去搞全套源码吧
19:40 varna: 编译很快的
19:41 varna: 缺省编译是.a, 如果要perl用得改成so
19:41 Plough: 然后用拿到的symbol转换成函数指针？
19:42 varna: 对
19:42 sawfish: 问题是我现在连perl都看不懂。
19:42 Plough: Soga
19:42 sawfish: 算了补一下
19:42 Plough: 前面塞个main()然后tcc_run呢
19:42 varna: 我现在到最后的constructing call都能用
19:43 varna: 就是中间差点东西
19:43 varna: ……疼
19:43 varna: C程序是有main的
19:43 Plough: 我大概会这么干……
19:43 varna: 而我会把这坨东西用一个有main的C程序启动……
19:43 Plough: ……那就蛋疼了
19:44 Plough: 我还是觉得得动态搞一段中间函数塞进去
19:44 varna: 玩军国主义游戏之后，人会出现精神问题的
19:44 varna: 比如驱逐舰一定要有鱼雷
19:44 Plough: 先去吃饭，回来再考虑考虑
19:44 varna: 花式作死一定要用Perl
19:44 xxxxxxxx: 真出事故了... 飞鹰大破...
19:44 varna: xxxxxxxx: 你有PAD么
19:44 xxxxxxxx: 没有
19:45 varna: 那就没办法了
19:45 varna: 炮击打手轮换吧
19:45 xxxxxxxx: 刚才就是换手打...
19:45 varna: ...
19:48 xxxxxxxx: 我让飞鹰再带个舰爆看看
19:49 lh_bot: poseidon 就是没有 main 的
19:49 lh_bot: 当然实际用起来   随手写点东西  然后就指望它能跑
19:49 lh_bot: MODULE_RAII { LOG_POSEIDON_FATAL("hello world!"); return { } };
19:52 cleamoon: 一直觉得没main不好调试
19:53 varna: 有main的东西也有没法调试的
19:53 sismvg: http://tieba.baidu.com/p/3629969381
19:53 sismvg: 魔物娘
19:53 varna: 问题其实只是那个被调试的东西不好调试……
19:53 sismvg: 函数A里崩溃，然后调试器在kernel.dll里
19:54 varna: 实际上现在我折腾的C代码也是直接被perl调用的
19:56 sismvg: http://www.ithome.com/html/next/133563.htm
19:56 sismvg: apple:人傻钱多
19:56 xxxxxxxx: 似乎稳了
19:57 varna: POI?
19:57 xxxxxxxx: 这两盘还算顺
19:57 sismvg: 有谁玩过ecard吗/
19:59 xxxxxxxx: sismvg: 什么ecard?
19:59 condy: 一卡通.
20:00 sismvg: http://tieba.baidu.com/p/2499108022
20:00 sismvg: 某个游戏
20:00 xxxxxxxx: condy: 那东西不是玩的
20:00 sismvg: 赌博默示录
20:00 condy: -,-
20:01 xxxxxxxx: 还是不太稳... 金皮又放雷击了...
20:02 xxxxxxxx: 似乎是混经验的打手的锅
20:04 sismvg: 我家电灯突然开始闪烁
20:04 sismvg: 好像有什么声音
20:04 cleamoon: 感觉码农不是在造轮子的路上，就是在撸理论的路上
20:04 k1mibk joined channel
20:04 sismvg: 还有给轮子包皮的路上
20:05 xxxxxxxx: 不是在呼的路上就是在吸的路上
20:05 varna: 不一定
20:05 varna: 也可能在2-3
20:06 lhanjian: 印象里面Linux进程如果解除一个已经打开为描述符的普通文件的硬链接，还是可以继续访问和操作的？
20:06 sismvg: http://www.ithome.com/html/it/133482.htm
20:06 sismvg: 网吧是什么
20:06 lh_bot: 描述符本身已经关联到物理存储了
20:06 lh_bot: 和路径  硬链接什么都没关系了
20:07 lh_bot: 你把文件 RM 了它依然存在  除非你把描述符关掉
20:07 xxxxxxxx: 一个伙计似乎做了一下午南西 6潜艇了一下午...
20:07 lhanjian: lh_bot, 对……
20:07 Plough: http://www.acfun.tv/a/ac1783665
20:07 lh_bot: 据说之前有人忘了关闭 fd 导致硬盘写爆掉
20:07 lhanjian: 蛤蛤蛤蛤蛤
20:07 lh_bot: windows 完全不会有这种事情
20:08 xxxxxxxx: windows写坏要多久?
20:08 lh_bot: 写啥东西
20:08 lhanjian: HANDLE *?
20:08 lh_bot: 打开普通文件如果没指定 FILE_SHARED_DELETE 就是不能删除的
20:09 lh_bot: lhanjian: HANDLE 本身就是 void *
20:09 varna: windows打开文件之后甚至有独占吧
20:09 lhanjian: 哦，win我确实不懂……
20:10 lh_bot: 可以指定权限
20:10 lh_bot: 共享读 共享写 共享删除
20:10 lh_bot: Windows 支持文件共享写 （实际上 MCF 的文件也是参考这个设计的  所以看起来更像一个数组  而不是流）
20:11 lh_bot: 共享写可以指定偏移量写入一个不大于 4GiB 的块
20:11 lh_bot: linux 你打开文件删掉之后原地重建一个实际上已经是不同的文件了
20:15 tutu_ joined channel
20:15 tutu quit:Read error: Connection reset by peer
20:16 lh_bot: tutu_: 揪兔耳朵
20:17 tutu_: lh_bot,我在回忆你给我的建议
20:19 varna: 兔兔要是妹子就好了
20:19 varna: 可惜不是啊可惜
20:20 tutu_: lh_bot,…… 为啥啊
20:20 tutu_: 不对
20:20 tutu_: varna,为啥啊
20:20 wlemuel quit:Ping timeout: 256 seconds
20:21 varna: 频道缺妹子
20:21 wlemuel joined channel
20:22 sismvg: 有男人就知足ba 
20:22 * sismvg 手机不翼而飞
20:22 lhanjian: 频道的妹子已经绝种了……
20:23 varna: 以前还有腋肖
20:23 varna: 后来有POPOBE
20:23 varna: 亚夜花来频道之后觉得“不堪入目”
20:23 tutu_: …… 
20:25 whocares_2 joined channel
20:25 varna: 当然现在好多了
20:25 varna: 我们从乱爆变成了只爆固定的几个基佬
20:25 tutu_: 那就好了
20:25 xxxxxxxx: ^有谁相信上面这句话?
20:27 xxxxxxxx: 都没人支声
20:27 tutu_: … 会有妹纸滴
20:27 tutu_: 相信自己
20:27 tutu_: 虽然我好多时候都是他信
20:27 tutu_: 这点可以自信
20:28 varna: 妹子啊
20:28 varna: 难
20:29 cleamoon: 羊驼不是有好几个ex呢么
20:29 lhanjian: 羊驼子不就那么一个ningzi么
20:29 cleamoon__ joined channel
20:29 xxxxxxxx: 感觉在这里看到常来的妹子还没找出个女dalao简单
20:29 lhanjian: 说不定过段时间又来找羊驼了
20:29 cleamoon: 找羊驼+
20:30 tutu_: +
20:30 xxxxxxxx: 不是坚定的萌友墙角已挖么?
20:30 tutu_: POPOBE考完应该会来的
20:30 lhanjian: RM2都不来了
20:31 cleamoon: 都忘了还有个叫ppb的可以调教
20:32 code_new: 炮姐不是在这里吗
20:32 sismvg: 还是找不到手机在哪里...但是如果被偷的话我的钱也应该不见才对啊
20:32 code_new: 只是不出来而已……
20:33 sismvg: 再来个管理员那
20:33 lhanjian: 炮姐忽略不计
20:33 varna: 我哪有好几个ex
20:33 sismvg: MisakaBot
20:33 xxxxxxxx: code_new: 你就是说要吃炮姐胖次都炸不出炮姐
20:34 code_new: xxxxxxxx: 这个对炮姐来说根本不算什么
20:34 varna: HO棠有会长酱、社长酱、有意思酱、院长、教授、理事长、粉条姬等数千人
20:34 varna: 而我现在只能攒着一堆航母等那谁改造了……
20:35 code_new: 我今天终于攒够10个饼了
20:35 code_new: 还差5万经验升级
20:35 code_new: 封港等春活了……
20:35 xxxxxxxx: 然而第二次推4-1又沟了
20:35 varna: 升级吧
20:35 xxxxxxxx: code_new: 你封的是不是有点早...
20:36 varna: 五万经验随便打打就有了
20:36 varna: xxxxxxxx: 不早
20:36 varna: 反正封港的同义词是演习和南西
20:36 xxxxxxxx: varna 春活什么时候?
20:36 cleamoon__: 为什么我没有饼的任务
20:36 xxxxxxxx: ....
20:36 xxxxxxxx: 我也不知道
20:37 varna: 春活我猜五月初
20:37 tutu_ quit:Read error: Connection reset by peer
20:37 varna: 运气不好就是四月底
20:37 cleamoon__: 难道是欧提限定？
20:37 varna: cleamoon__: 你清一下缓存
20:37 xxxxxxxx: 人人都有的任务...
20:37 varna: cleamoon__: 或者换一下token
20:38 xxxxxxxx: 欧洲人没有的任务看上去更贴切
20:38 tutu joined channel
20:38 code_new: 我这里封港等于只远征= =
20:38 tutu: varna,用两个队列，读和写队列，一个线程去做这个事 … 如何？
20:38 code_new: 我的时间不多了……这几个月有一堆考试
20:38 lhanjian: 一堆考试？
20:39 varna: tutu: HTTP? 我还是不推荐
20:39 xxxxxxxx: 我终于有10000铝了
20:39 varna: code_new现在大二？
20:39 code_new: lhanjian: 英语，日语，软考加上学校的课程
20:39 tutu: 小耗建议用一个线程处理IO就行了
20:39 xxxxxxxx: 日语什么情况...
20:39 code_new: varna: 大三了
20:40 code_new: 学校有日语课程……
20:40 code_new: 顺便把三级过了
20:40 cleamoon__: 学霸 orz
20:40 code_new: 三级知识点不多的……
20:40 varna: 软考有用么……
20:40 tutu: varna,哦。 假设是HTTP
20:40 varna: tutu: 那何必呢
20:40 tutu: … 
20:41 code_new: 感觉考了总归是好的……
20:41 tutu: varna,直接轮询？
20:42 varna: 我倒觉得考了会造出评价下调呢……
20:42 varna: tutu: 你总得有事件集合/队列
20:42 tutu: 该死的手机不知道log在哪，你和小耗说的当时没记下来
20:42 code_new: varna: 为什么这么说……
20:42 varna: code_new: 总觉得去考这种东西的人平均程度都一般
20:43 varna: 小和：一九〇〇です！　熱々の麦飯、沢庵、そして牛缶に、お味噌汁も♪　どう？
20:43 tutu: …
20:43 varna: ^ 小和原来不会做饭的……
20:43 wlemuel quit:Ping timeout: 246 seconds
20:43 lhanjian: 考考没事儿，别指望着把它往简历上写……
20:43 tutu: 什么鬼
20:43 code_new: varna: 好吧，其实我也算一般程度的
20:44 wlemuel joined channel
20:44 code_new: lhanjian: 了解了= =
20:45 varna: 不过小和准备这个速食晚餐似乎还不错的样子
20:48 varna: http://imgsrc.baidu.com/forum/w%3D580/sign=6a870181a544ad342ebf878fe0a30c08/ba32e48b87d6277f658b91542c381f30e824fcf1.jpg http://imgsrc.baidu.com/forum/w%3D580/sign=b2b39a6f8344ebf86d716437e9f8d736/993c0efbfbedab64da9ceeacf336afc378311ea7.jpg
20:48 varna: ^ 我了割草
20:49 varna: Mutsulim...
20:49 varna: Furutakaiel
20:49 varna: 这简直了
20:49 varna: Nachism...
20:50 varna: 异端宗教最后一项赫然Shibafu
20:50 Plough: 异端宗教：shibafu
20:51 varna: 以前光听说过古鹰大天使，现在连腐乳塔卡叶（Furutakaiel）都出现了……
20:51 xxxxxxxx: 屎扒斧?
20:51 Plough: 23333
20:52 varna: 啊不对
20:52 varna: 这个天使名的拼法大概是Furutakael
20:52 varna: Michael Gabriel Raziel Sariel Furutakael
20:52 FrankHB joined channel
20:52 varna: -iel后缀似乎总是出现在辅音之后
20:54 varna: 今天也早点回去
20:55 wlemuel quit:Ping timeout: 256 seconds
20:58 Plough: 我怎么感觉Thinkpad的外观越来越没意思了……
20:58 varna: 求个图
20:58 varna: TP不都是黑黑的一坨，很Shibafu的样子么
20:58 Plough: 黑倒是黑
20:58 Plough: 但是不如以前方正了
20:59 cleamoon__: 弄个绿色的你买吗
20:59 varna: 送死涂装么
21:00 varna: 玉子烧那种的
21:00 lh_bot: tutu: 那地方我用了三个索引做了个容器
21:00 Plough: http://www.lenovo.com/images/gallery/560x345/lenovo-laptop-thinkpad-e550-main.png
21:00 lh_bot: session, last_read, last_written
21:00 Plough: 看那圆圆的边角
21:01 lh_bot: 后两个索引构成两个 FIFO 队列
21:01 varna: 也还行
21:01 Plough: 不过T系列似乎还行
21:01 varna: 我这个就是圆角
21:01 lh_bot: 这地方改改索引就行  不需要分配内存
21:01 Plough: 我总感觉圆角没气势
21:01 varna: 这个多大尺寸，17in?
21:01 Plough: 15.6in
21:01 tutu: 哦，收到
21:02 varna: 15.6...
21:02 tutu: lh_bot,收到
21:02 Plough: 跟我现在这个Acer一样
21:02 Plough: 不过我这台圆角小很多
21:02 varna: 怎么不多0.4''呢
21:02 Plough: 我倒想变小0.1''
21:02 Plough: 买三个排一块
21:03 Plough: 用来赌大和
21:03 Plough: 副炮玄学
21:03 varna: 最后发现赌出了毛嘎敏
21:03 varna: 主炮伪称玄学
21:03 Plough: 万一来了二号舰呢
21:03 Plough: 也不亏
21:03 varna: 三号炮不亏
21:04 varna: TP还是买E系列比较好
21:04 varna: T系列普遍贵
21:04 Plough: http://www.lenovo.com/images/gallery/560x345/lenovo-laptop-thinkpad-t540p-main.png 相比之下T系列就霸气……
21:05 Plough: 等有钱了我倒想收个二手TP玩玩
21:05 Plough: 比如T500
21:05 varna: 这个确实好看
21:06 Plough: 另外现在E系列是什么键盘，巧克力式？
21:06 varna: 浮萍式
21:06 Plough: ……不好玩
21:06 varna: 现在买个巧克力式的都不容易了
21:06 tutu quit:Read error: Connection reset by peer
21:06 tutu joined channel
21:07 varna: 啊不对
21:07 varna: 我术语搞反了？
21:07 varna: 搞反了
21:08 Plough: 还是孤岛式？
21:08 varna: 说孤岛式差不多吧
21:08 varna: 总之是比较不容易误操作的
21:08 Plough: 我感觉孤岛式的键程短了点
21:09 Plough: 偶然用一次台式机敲密码都费劲……
21:10 varna: 你手揉软，刭力小
21:10 Plough: 不过似乎新的E系列用的是孤岛式改？
21:10 Plough: 弧形键帽，键程也长些
21:10 tutu: lh_bot,小耗用的单线程多进程对么？
21:11 varna: 他是多线程
21:11 lh_bot: 反了
21:11 varna: 我是单线程派
21:11 varna: 浮萍式其实就一个麻烦：总掉头发进去
21:11 tutu: … 我擦， 老了记不住了
21:12 Plough: 孤岛式其实也没多干净，眼不见而已
21:12 Plough: 把键帽扣下来一样惨不忍睹
21:12 varna: 眼不见为净
21:12 varna: http://imgsrc.baidu.com/forum/w%3D580/sign=b02c33fdc911728b302d8c2af8fcc3b3/9c77e8345982b2b7b18e85a835adcbef76099b78.jpg 什么鬼
21:12 varna: PS毫无痕迹
21:13 Plough: 这周末清理下键盘
21:13 Plough: 噗
21:13 varna: 原文应该是大妈翻车后直奔麻将山
21:13 Plough: 然后他回家等上去两发大建，正好一只大和
21:13 Plough: 卒
21:13 Plough: 登*
21:14 xxxxxxxx: 这绝对不能赌啊 人品都用光了赌个毛
21:14 varna: 麻将山不用赌
21:15 varna: 要的是底力
21:15 lh_bot: 羊驼是巧克力派
21:15 varna: 我确实是黑巧克力派
21:16 Plough: 小时候是白巧克力派
21:16 varna: 主要特征是黑
21:16 varna: 你看，你白
21:16 lh_bot: 白丝红旗酱
21:16 Plough: 后来我妈一天给我塞十多颗
21:16 Plough: 现在我看见白巧克力就感觉腻
21:16 varna: 巧克力和舰娘的正道都是一个黑字啊
21:16 lhanjian: 突然忘记了nginx那种模式叫什么名字了……
21:17 Plough: 快十年没吃了腻味都没消掉……
21:17 varna: lhanjian: reactor
21:17 varna: lhanjian: 偏异步回执的则是proactor
21:18 varna: 忍不住了
21:18 varna: 再来三发电探
21:18 varna: 古老的神灵启示我，三发之内必有32
21:19 varna: 我听错神谕了，是挺过三发之后就有32
21:20 varna: 巴尔骗我
21:20 varna: 迦南人的神果然没好东西
21:20 varna: 赌出个栖战板……
21:20 lhanjian: 嗯，proactor我就算了……
21:20 cleamoon: http://mtmos.com/v1/mss_3d027b52ec5a4d589e68050845611e68/ff/n0/0b/ep/ms_513397.jpg
21:21 varna: 明天开始戒赌
21:21 varna: 要赌只赌主炮
21:21 cleamoon: http://mtmos.com/v1/mss_3d027b52ec5a4d589e68050845611e68/ff/n0/0b/ep/b7_52589.jpg
21:22 varna: 谁赌电探的
21:22 varna: 我今天出了两个33哦
21:22 Plough: 我不能上舰娘
21:22 wlemuel joined channel
21:24 FrankHB quit:Remote host closed the connection
21:24 varna: 不能再糟蹋了，今天亏了一千钢
21:24 FrankHB joined channel
21:27 varna: ……戒赌真难
21:27 varna: 再来两发
21:27 wlemuel quit:Ping timeout: 246 seconds
21:27 varna: 蒸发了
21:28 wlemuel joined channel
21:28 varna: 黄历不是说今天宜造电探的么……
21:28 Plough: http://tieba.baidu.com/p/3628673703?pn=1 作大死系列
21:29 varna: 噗
21:30 varna: 烤好了……
21:30 lh_bot: poseidon 采用的应该是 reactor 模式
21:30 varna: http://imgsrc.baidu.com/forum/w%3D580%3B/sign=dab5c73ad4160924dc25a213e43c34fa/8b82b9014a90f6031fc53c2b3d12b31bb051ed61.jpg
21:30 lh_bot: 当然这里有个插曲 Linux 不支持异步
21:30 lhanjian: lh_bot, gcc的取消代码无法运行到函数返回处的扩展叫什么，又给忘了……
21:31 lhanjian: google文档 不知道搜哪个关键词……
21:31 lh_bot: ？
21:31 varna: gcc attribute noreturn
21:31 lh_bot: 取消什么？
21:31 varna: 这个？
21:31 lhanjian: 嗯
21:31 lhanjian: Tks a lot
21:31 lh_bot: 你想干什么
21:31 lh_bot: 你标记一个函数不会返回？
21:32 lhanjian: varna, 记错了，这是另外一个……
21:32 sismvg quit:Quit: ChatZilla 0.9.91.1 [Firefox 36.0.1/20150305021524]
21:32 varna: 那你要什么？
21:32 lh_bot: 你想干什么
21:32 lhanjian: lh_bot, 假设你的函数虽然有返回值，但是不可能运行到函数结尾的那个地方，然后gcc会报警告……
21:33 lh_bot: __builtin_trap();
21:33 lh_bot: 当然也可以用 __builtin_unreachable();
21:33 varna: 我觉得他可能是搞错了
21:33 lhanjian:  __builtin_unreachable()
21:33 lhanjian: 对，就是这个……
21:33 lh_bot: 我建议用 trap
21:33 varna: gcc报的警告应该是“并非所有路径都有返回值”
21:34 lh_bot: 还是那句话  没事别作死
21:34 lhanjian: varna, 嗯嗯嗯……
21:34 varna: 尽量别折腾
21:34 lh_bot: 程序执行到 trap 保证立马崩掉
21:34 varna: 好好写函数比trap好……
21:34 lh_bot: unreachable 是 UB
21:34 lhanjian: 嗯……
21:34 varna: trap保证exit abnormally
21:34 lh_bot: varna: ::TerminateProcess(::GetCurrentProcess(), ERROR_PROCESS_ABORTED); __builtin_trap();
21:35 Plough: http://tieba.baidu.com/f?kw=%CA%B9%B0%C9revolutionparty 我居然让一个贴吧沦陷了
21:35 Plough: 贴吧将王满地舰娘
21:35 Plough: 亡*
21:36 varna: 我看到一个推过2-4就想结婚的
21:36 varna: 这被我当时还激进……
21:37 Plough: 他啊
21:37 Plough: 你猜他那只弥生啥时候拿到的
21:38 varna: 3333?
21:38 Plough: 入坑两天出了
21:38 varna: 果然
21:38 Plough: 我了个大艹，怎么被我直接或间接拉进坑的都是欧皇……
21:38 varna: 你欧
21:38 Plough: 怪不得我脸越来越黑
21:39 Plough: 我的欧气一定都被他们抢走了，搞得我现在只能在撒哈拉沙漠瑟瑟发抖
21:39 cleamoon: 难道弥生是稀有货？
21:39 Plough: http://tieba.baidu.com/p/3628038477
21:39 varna: 弥生掉落不多
21:39 cleamoon: 3楼  我今天掉了舞风，卷云二号机，陆奥二号机和飞龙，但是还是没有饼。 然后，如果你对飞龙有爱，那就使劲肝吧，改二火力强大。 还有，你是不是钢铁地平线的人？
21:40 Plough: 对了我还得准备换号
21:40 varna: 换号？
21:40 Plough: 嗯
21:40 Plough: 沙皇有人要了
21:40 varna: 哦
21:41 Plough: 我现在在甩手上的存货
21:41 Plough: 毕竟贴吧越来越鹅心
21:41 cleamoon: ....
21:41 lh_cat: 喵
21:41 Plough: @战地3 100出了
21:41 Plough: 有人要么
21:42 cleamoon: 我只买硬件
21:43 Plough: 500G的希捷硬盘
21:43 Plough: 没包装
21:43 Plough: 2.5in
21:43 Plough: 一次没用过
21:43 lh_bot: 21:33 <+varna> gcc报的警告应该是“并非所有路径都有返回值” // 鼠辈  竟敢黑我大 VC
21:43 lh_bot: 还有  标记函数不会返回  C11(99?) 有 _Noreturn
21:43 lh_bot: 这个地方用扩展其实就是省事  标准做法是 abort();
21:43 wlemuel quit:Ping timeout: 252 seconds
21:44 cleamoon: 我出30
21:44 Plough: 30英镑我可以考虑下
21:45 wlemuel joined channel
21:45 cleamoon: 我得考虑运费
21:46 cleamoon: 入渠排了4页的队了
21:46 Plough: 运费自负
21:46 Plough: 其实这块硬盘是被我骗回来的
21:47 cleamoon: ....
21:47 Plough: 某月打3-5劝退劝狠了，一拳砸键盘上
21:47 Plough: 原来的硬盘就这么废了
21:47 Plough: 然后当时笔记本还在保修期内
21:47 varna: 经过一段时间的简单hack, 矶波的call gate胜利爆炸成功……
21:47 Plough: 我就跑去修理店表示“这硬盘莫名其妙跪了”
21:47 Plough: 于是新硬盘GET
21:47 varna: 进JIT的函数之后出不来了
21:48 Plough: ……
21:49 varna: 我觉得我现在的补救方案简直是啪啪扇自己耳光
21:49 Plough: 来发大建冷静下
21:49 varna: 跟大和锤胸顿足一样咣咣响
21:49 varna: 我就五千多钢
21:49 wlemuel quit:Ping timeout: 240 seconds
21:49 Plough: 4752来一发
21:50 varna: 你们欧洲人骗我造扶桑
21:50 Plough: 只有欧洲人才有大和
21:50 Plough: 非洲人只有黑不溜秋的二号舰
21:50 varna: 我都吓尿了，手写的调用有用，换成__builtin_apply直接挂……
21:50 wlemuel joined channel
21:50 xxxxxxxx: 卷云要2号机干啥...
21:51 varna: 小卷可以养
21:51 Xilzzerts quit:Ping timeout: 272 seconds
21:51 cleamoon: 我赌大和连大傻都不出，只有山城
21:51 varna: 你赌得少
21:51 cleamoon: 不少了，3发了
21:52 Plough: 三发不少了
21:52 xxxxxxxx: cleamoon__: 你这个欧洲人三发就想出大河
21:52 varna: 欧洲人真可怕
21:52 Plough: 一股欧皇气息扑面而来
21:52 xxxxxxxx: 我大建一共就建造过两次还是低保的 为何你们那么多资源...
21:53 varna: 因为我平时不出击
21:53 varna: 潜艇出击资源都是倒涨的
21:53 cleamoon: 欧皇都是一发就出的
21:54 Plough: 一发出五个大建货也是莉害
21:54 Plough: 那不是欧皇是田中
21:54 varna: 狂炸不止……
21:54 cleamoon: 因为我所有有战力的船都破了，只能等着修
21:54 xxxxxxxx: 一发如何出五个大建货?
21:54 varna: 从我换用xsub里的__builtin_apply_args开始就一直怒炸
21:54 Plough: 问岚月酱
21:54 Plough: 他是欧皇，他知道
21:55 varna: rdi rsi都是对的
21:55 cleamoon: 而现在正在把没有战力的送到澡堂
21:55 cleamoon: 我明显不是
21:55 cleamoon: 连潜艇都没有
21:55 xxxxxxxx: 欧洲人的乱〇浴室
21:55 varna: 绝对是栈帧平衡错了……
21:56 varna: 这里搞不好不能生分发
21:56 cleamoon: 一整页大破
21:56 varna: JIT函数的栈帧平衡是对的
21:56 Plough: 有可能gcc -S一下么
21:57 varna: 逼急了我试试
21:57 varna: 但是如果可能的话，我换个写法
21:57 Plough: 动态生成大法好
21:57 Plough: 中间函数使劲塞
21:57 Plough: 不塞不是人
21:58 varna: 不过在这之前我可以先查查rsp rbp的状况
21:58 varna: 这个比对着perl生成的C代码汇编一次来得有贡献点
21:59 * varna 怒走刀山
21:59 cleamoon: 看我6战舰弄肝南西
21:59 varna: 噗
21:59 varna: 对面有制空的
22:00 cleamoon: 制空不要了
22:00 varna: 要是6战舰的话大概需要二改肥桑肥城……
22:00 varna: 噗
22:00 Plough: 你打不中的
22:00 Plough: 放心
22:00 cleamoon: 反正都等着修呢，多几个也好
22:01 varna: ...何等糟蹋
22:01 cleamoon: 写haskell多好
22:01 Plough: haskell是邪教
22:01 varna: haskell的单子用起来太难受
22:03 varna: http://imgsrc.baidu.com/forum/pic/item/af6b9409b3de9c82b51872e36881800a19d84314.jpg
22:03 Plough: 晒千姿
22:03 cleamoon: 把大破的换成北上，继续肝
22:04 cleamoon: 在perl里试图让c jit太疼
22:04 varna: 让C JIT不疼
22:04 varna: 疼的是我不肯让用户自己打包参数
22:04 lhanjian: 羊驼子原来说过的epoll设计上的缺点是什么来着……
22:04 varna: 而希望提供赤裸的参数表
22:04 cleamoon: 这不好吗
22:04 varna: lhanjian: 没法按fd取元信息
22:04 xxxxxxxx: 6战舰小破一个就得吃一个桶...
22:05 varna: 赤裸的参数表肯定好，但它现在在爆炸……
22:05 lhanjian: 元信息 具体指？
22:05 varna: 忘了
22:05 varna: 我觉得当时那话可能是我自己EPOLLONESHOT用的地方不对才说的，你忘掉它吧
22:05 cleamoon: 不用吃桶，都不是主力
22:05 varna: 如果我什么时候再想起来，就再提一下看……
22:05 lhanjian: 哦……
22:06 varna: http://tieba.baidu.com/p/3630247018
22:06 Plough: kindle确实挺不错的
22:06 xxxxxxxx: 敷波不只长相像个逗比 声音也像个逗比...
22:06 Plough: 至少不至于一天一冲
22:07 varna: 一天一冲的只有战果吧
22:07 varna: 我还不冲战果
22:07 Plough: 还有手机
22:07 varna: 手机我一般两三天
22:07 varna: 关掉GPRS数据和WLAN, 一直扔桌子上待机
22:08 Plough: 我用的频繁些……
22:08 lhanjian: 没办法用fd取出struct epoll_event……
22:08 Plough: 放学路上放音乐
22:08 Plough: 躺床上看本子
22:08 varna: lhanjian: 那个不是事
22:08 varna: 我不用手机听音乐
22:08 lhanjian: 用户倒是一般会自己保存
22:08 lhanjian: 先下
22:08 lhanjian quit:Quit: Leaving
22:09 cleamoon: 我已经丧心病狂了，全中破全红5战舰1轻巡去肝2-4
22:09 Plough: 作死
22:09 cleamoon: 反正不会沉
22:09 Plough: 难说
22:09 Plough: 运营说的是“小破以下无疲劳”
22:09 Plough: (笑
22:09 cleamoon: 毛都打不中
22:10 Plough: 必然
22:10 xxxxxxxx: cleamoon: 废话....
22:10 Plough: 红脸哪来的命中
22:10 varna: 32
22:10 Plough: 32也没用
22:11 cleamoon: 我也不知道有没有大破，总之，近击
22:11 varna: 噗
22:11 Plough: 坐等沉船
22:11 varna: 造几发主炮
22:11 lh_cat quit:Ping timeout: 255 seconds
22:12 tutu: 去吃饭啦 ~~~
22:12 cleamoon: 还是全中破
22:12 cleamoon: 近击
22:12 varna: 41 GET
22:12 varna: 出41就可以了
22:12 xxxxxxxx: varna 你为何这么没有追求!
22:13 cleamoon: 哈哈哈，对方航母一次打出4个大破
22:13 Plough: 太正常了
22:13 varna: xxxxxxxx: 加上大和的炮我有18个46，现在我要计划至少4个5星41
22:13 cleamoon: 出门
22:14 Plough: 红脸还有闪避一说？
22:14 varna: 41改修我记得是要吃装备的，所以得屯一些
22:14 Plough: 简直壕气万丈
22:14 Plough: 41我只改到2星
22:14 varna: 我数数到底有多少46
22:14 varna: 大和改了之后是19个
22:15 cleamoon: 差点又进击了
22:15 varna: 加上51，就算20个
22:15 varna: 支援大概是够用了
22:15 Plough: 我很怀疑联合舰队里到底能不能用51
22:15 varna: 我反正没用
22:15 wlemuel quit:Ping timeout: 244 seconds
22:15 varna: 武藏带46很好
22:15 cleamoon: 我去，我还忘记补给了，全是空的
22:15 varna: 另有一说，水上打击部队的命中上限是60%
22:15 cleamoon: 走
22:16 varna: 而常规部队的上限是97%
22:16 xxxxxxxx: 46不改了?
22:16 varna: 46不改，太贵
22:16 Plough: 谁改46啊
22:16 varna: julao才改46，比如南风叔……
22:16 wlemuel joined channel
22:16 varna: 他似乎弄了个改满的46
22:17 Plough: 那是至少15门46
22:17 varna: 算上确实化，不说46得有多少螺丝啊……
22:17 varna: julao有几十个46都正常，但螺丝是去年年底才有的新东西……
22:17 Plough: 似乎至少68螺丝
22:17 Plough: 再确实化一下
22:17 Plough: 嗯
22:19 varna: 不过到下次活动的时候，大和就可以投入实战了
22:20 varna: 所以即使是联合舰队，大概也是可以投入重火力的
22:20 cleamoon__ quit:Ping timeout: 246 seconds
22:20 Plough: 下次活动的时候我还不知道有没有大和
22:20 xxxxxxxx: 68螺丝似乎有点多....
22:21 xxxxxxxx: 我一共都不到68一半的...
22:21 Plough: 吃七个甲章就有了
22:21 Plough: 貌似一个甲章十个螺丝
22:22 varna: 我现在是99
22:22 wlemuel quit:Ping timeout: 252 seconds
22:22 Plough: 另外最近突然想往kindle上扔点小说了
22:22 Plough: 有推荐吗
22:22 lh_cat joined channel
22:23 varna: 钢铁是怎样炼成的
22:23 tutu: 小王子
22:23 wlemuel joined channel
22:24 varna: 先回去了
22:24 varna: 诸君武运
22:24 varna quit:Quit: leaving
22:24 tutu: 牧羊少年奇幻之旅
22:24 tutu: 雪国
22:25 tutu: … 呀，才浅 ，只想到印象深的
22:25 whocares_2 quit:Remote host closed the connection
22:25 Plough: 收到，先记下……
22:31 whocares_2 joined channel
22:33 hoxily quit:Ping timeout: 244 seconds
22:35 wlemuel quit:Ping timeout: 255 seconds
22:36 wlemuel joined channel
22:41 FrankHB: release有能用的就__builtin_unreachable，不行就__builtin_trap，再不行abort()。VC艹能用就__assume。debug看着办。
22:42 FrankHB: malloc最好能把根据size选择分配器的操作尽量内联掉。不过现在为基础比较dt。
22:43 whatofor_1 quit:Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/
22:47 hoxily1 joined channel
22:48 * lh_mouse slaps FrankHB around a bit with a large trout
22:55 Plough quit:Remote host closed the connection
23:01 lh_mouse: geordi, << foo::bar(); struct foo { const char * bar(); }; \\ namespace foo { const char * bar(){ return "meow"; } }
23:01 geordi: error: cannot call member function 'const char* foo::bar()' without object
23:01 lh_mouse: geordi, insert static  before first const
23:01 geordi: 1.o: In function `geordi::Assert::operator<<(std::ostream&, geordi::Assert::BinOp)': [+ 2 discarded lines]
23:01 lh_mouse: geordi, show
23:01 geordi: << foo::bar(); struct foo { static const char * bar(); }; \\ namespace foo { const char * bar(){ return "meow"; } }
23:04 condy: geordi: -c namespace foo{} struct foo {};
23:04 geordi: error: 'struct foo' redeclared as different kind of symbol
23:14 hoxily2 joined channel
23:16 hoxily1 quit:Ping timeout: 246 seconds
23:17 endle quit:Quit: Leaving
23:19 lh_cat quit:Ping timeout: 245 seconds
23:19 condy: 我感觉老人与海不错.
23:20 wlemuel quit:Quit: leaving
23:20 tutu quit:Read error: Connection reset by peer
23:21 lh_cat joined channel
23:21 tutu joined channel
23:22 * lh_mouse slaps condy around a bit with a large trout
23:22 condy: -.-
23:22 lh_mouse: trap 和 unreachable 没多大区别
23:22 lh_mouse: x86 就一个字节
23:26 condy: 看反汇编，trap多生成了一个ud指令。不知道是不是测试得还简单了..
23:26 condy: s/还/太
23:30 tutu_ joined channel
23:30 sawfish: 嘛，还是一头雾水。
23:30 sawfish: 算了，先睡觉去了。
23:31 sawfish: 诸君晚安，夜间愉快。
23:31 tutu_ quit:Read error: Connection reset by peer
23:31 sawfish quit:Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/
23:32 lh_mouse: condy, 没错
23:33 tutu quit:Ping timeout: 252 seconds
23:34 Petrus07 joined channel
23:34 tutu joined channel
23:42 k1mibk quit:Ping timeout: 255 seconds
23:42 k1mibk joined channel
23:43 k1mibk quit:Max SendQ exceeded
23:46 tutu quit:Read error: Connection reset by peer
23:49 k1mibk joined channel
23:52 code_new quit:Quit: ChatZilla 0.9.91.1 [Firefox 36.0.1/20150305221847]
23:57 lh_mouse: http://www.letv.com/ptv/vplay/20863615.html
