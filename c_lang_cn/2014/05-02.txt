0:0 condy1:原来需要primary啊。
0:0 condy1:geordi: { if (int a[2] = {1,2}) cout << a[1], a[0];}
0:0 geordi:warning: the address of 'a' will always evaluate as 'true'
0:0 hope1:geordi, {if(int x = 0) cout << x;}
0:0 geordi:<no output>
0:1 condy1:geordi: -w { if (int a[2] = {1,2}) cout << a[1], a[0];} 
0:1 geordi:2, 1
0:1 condy1:geordi: { if (string s = "xxoo") cout << s; }
0:1 geordi:error: could not convert 's' from 'string {aka string}' to 'bool'
0:6 GODDOG:我的库存多
0:7 hope1:geordi, {struct A{operator bool(){return true;}};if(A a)cout<<a;}
0:7 geordi:error: expected primary-expression before 'a'
0:7 LHJ joined channel
0:7 hope1:geordi, {struct A{A(int){}operator bool(){return true;}};if(A a(1))cout<<a;}
0:7 geordi:Same error.
0:7 hope1:geordi, {struct A{A(int){}operator bool(){return true;}};if(A a = 1)cout<<a;}
0:7 xxxxxxxx_:老虎机来了
0:7 geordi:true
0:8 lhanjian:刚才登陆闪讯，网掉了
0:8 hope1:geordi, {struct A{operator bool(){return true;}};if(A a = A())cout<<a;}
0:8 geordi:true
0:8 hope1:看来只要能转成bool就行
0:9 hope1:geordi, {struct A{operator ostream&(){return cout;}};if(A a = A())cout<<a;}
0:9 geordi:error: could not convert 'a' from 'main(int, char**)::A' to 'bool'
0:9 hope1:geordi, {struct A{operator int(){return 1;}};if(A a = A())cout<<a;}
0:9 geordi:1
0:10 lhanjian:c++这些玩意儿都是什么……
0:13 lhanjian:XP真是没字体可选择，就是Simsun正义
0:13 hope1:SimSun+
0:14 lhanjian:而且必须是12号字体
0:14 FrankHB:contextually convert to bool
0:15 lhanjian:错了，9号宋体，默认最佳
0:18 LHJ joined channel
0:18 lhanjian joined channel
0:18 hope1:9号宋体间距太小
0:19 hope1:总之latin部分都一塌糊涂
0:19 lhanjian joined channel
0:19 xxxxxxxx_:Well, at the beginning i chose not to use Xft in WMFS2 due to the slowness of this lib.
0:19 xxxxxxxx_:If you want this feature in wmfs2, make it an optional feature (so an optional dependence) using some #ifdef like in wmfs1.
0:20 xxxxxxxx_:这种人去解说就是一条狗都亏的货
0:22 condy1:geordi: { string A { int a[10]; }; } A a; for (auto& i : a.a) cout << i;
0:22 geordi:error: 'A' does not name a type
0:22 lhanjian:说起来mpv还是不错的。大多数播放器对ass字幕的默认设置都二
0:22 condy1:geordi: { string A { int a[10]; };  A a; for (auto& i : a.a) cout << i; }
0:22 geordi:error: expected primary-expression before 'int'
0:22 condy1:geordi: { struct A { int a[10]; };  A a; for (auto& i : a.a) cout << i; }
0:22 geordi:-202341869632737004222320042062560126115841632767
0:23 condy1:geordi: { struct A { int a[10]; };  A a; for (auto& i : a.a) cout << i << " "; }
0:23 geordi:-2035501896 32764 0 0 4222464 0 4206384 0 1650448960 32767 
0:23 condy1:geordi: { struct A { int a[10]; A():a(){}};  A a; for (auto& i : a.a) cout << i << " "; }
0:23 geordi:0 0 0 0 0 0 0 0 0 0 
0:26 lhanjian:condy1, 这都是什么
0:26 condy1:lhanjian: Hidden Features of C++? ...
0:26 condy1:lhanjian: http://stackoverflow.com/questions/75538/hidden-features-of-c#75627
0:27 condy1:感觉好神奇，看来白学了。
0:28 lhanjian:这比羊驼子的黑魔法还……
0:30 lhanjian:上床睡觉了
0:40 lh_mouse:geordi, << sizeof(initializer_list<int>)
0:40 geordi:16
0:40 lh_mouse:geordi, << sizeof(initializer_list<__int128>)
0:40 geordi:error: ISO C++ does not support '__int128' for 'type name'
0:40 lh_mouse:geordi, << sizeof(initializer_list<pair<double, double>>)
0:40 geordi:16
0:42 condy1:geordi: << sizeof(initializer_list<int128_t>)
0:42 geordi:error: 'int128_t' was not declared in this scope
0:42 condy1:geordi: << sizeof(initializer_list<int64_t>)
0:42 geordi:16
0:44 condy1:__int128 gcc还真支持。。
0:49 hope1:原来operator +是这么用的
0:50 lh_mouse:geordi, << sizeof(__int128)
0:50 geordi:error: ISO C++ does not support '__int128' for 'type name'
0:50 lh_mouse:geordi, << TYPE<__int128>
0:50 geordi:Same error.
0:53 hope1:geordi -v
0:53 geordi:g++ (GCC) 4.10.0 20140418 (experimental)
0:54 kgjmbqhft340728 joined channel
0:59 whocares_2 joined channel
1:5 condy1:geordi: { template<typename func1, typename func2> class callable { func1* f1; func2 f2; callable(func1* _f1, func2* _f2):f1(_f1), f2(_f2) {} operator func1*() {return f1;} operator func2*(){return f2;} }; void foo(int) {cout <<"foo: " <<i<<" ";} void bar(long i){cout<<"bar: " <<i<<" ";} int main(){ callable<void(int), void(long)> c(foo, bar); c(42); c(42L);} }
1:5 geordi:error: a template declaration cannot appear at block scope
1:6 condy1:geordi: template<typename func1, typename func2> class callable { func1* f1; func2 f2; callable(func1* _f1, func2* _f2):f1(_f1), f2(_f2) {} operator func1*() {return f1;} operator func2*(){return f2;} }; void foo(int) {cout <<"foo: " <<i<<" ";} void bar(long i){cout<<"bar: " <<i<<" ";} int main(){ callable<void(int), void(long)> c(foo, bar); c(42); c(42L);} 
1:6 geordi:error: 'i' was not declared in this scope
1:6 condy1:geordi: template<typename func1, typename func2> class callable { func1* f1; func2 f2; callable(func1* _f1, func2* _f2):f1(_f1), f2(_f2) {} operator func1*() {return f1;} operator func2*(){return f2;} }; void foo(int i) {cout <<"foo: " <<i<<" ";} void bar(long i){cout<<"bar: " <<i<<" ";} int main(){ callable<void(int), void(long)> c(foo, bar); c(42); c(42L);} 
1:6 geordi:error: field 'callable<void(int), void(long int)>::f2' invalidly declared function type
1:7 condy1:geordi: template<typename func1, typename func2> class callable { func1* f1; func2* f2; callable(func1* _f1, func2* _f2):f1(_f1), f2(_f2) {} operator func1*() {return f1;} operator func2*(){return f2;} }; void foo(int i) {cout <<"foo: " <<i<<" ";} void bar(long i){cout<<"bar: " <<i<<" ";} int main(){ callable<void(int), void(long)> c(foo, bar); c(42); c(42L);} 
1:7 geordi:error: 'callable<void(int); func2 = void(long int), func2>::callable(void(int); func2 = void(long int)*, func2*)' is private
1:8 condy1:眼花了。。。
1:10 condy1:geordi: template<typename func1, typename func2>
1:10 geordi:error: expected unqualified-id at end of input
1:10 condy1:class callable { func1* f1; func2* f2; public: callable(func1* _f1, func2* _f2):f1(_f1), f2(_f2) {} operator func1*() { return f1; } operator func2*() { return f2; } }; void foo(int i) { cout << "foo: " << i << endl; } void bar(long ii) { cout << "bar: " << ii << endl; } int main() { callable<void(int), void(long)> c(foo, bar); c(42); cbbb(42L); }
1:11 condy1:geordi: template<typename func1, typename func2>class callable { func1* f1; func2* f2; public: callable(func1* _f1, func2* _f2):f1(_f1), f2(_f2){} operator func1*() { return f1; } operator func2*() { return f2; } }; void foo(int i) { cout <<"foo: " << i << endl; } void bar(long ii) { cout << "bar: " << ii << endl; } int main() {callable<void(int), void(long)> c(foo, bar); c(42); cbbb(42L); } 
1:11 geordi:error: 'cbbb' was not declared in this scope
1:11 condy1:geordi: template<typename func1, typename func2>class callable { func1* f1; func2* f2; public: callable(func1* _f1, func2* _f2):f1(_f1), f2(_f2){} operator func1*() { return f1; } operator func2*() { return f2; } }; void foo(int i) { cout <<"foo: " << i << endl; } void bar(long ii) { cout << "bar: " << ii << endl; } int main() {callable<void(int), void(long)> c(foo, bar); c(42); c(42L); } 
1:11 geordi:foo: 42 [+ 1 discarded line]
1:11 condy1:geordi: template<typename func1, typename func2>class callable { func1* f1; func2* f2; public: callable(func1* _f1, func2* _f2):f1(_f1), f2(_f2){} operator func1*() { return f1; } operator func2*() { return f2; } }; void foo(int i) { cout <<"foo: " << i << " "; } void bar(long ii) { cout << "bar: " << ii << " "; } int main() {callable<void(int), void(long)> c(foo, bar); c(42); c(42L); } 
1:11 geordi:foo: 42 bar: 42 
1:12 condy1:\yeah/
1:12 hope1:But this requirement has one exception (pun intended): either the second or third operand can be a throw expression (which has type void), regardless of the type of the other operand.
1:12 hope1:这是什么梗？(pun intended)
1:17 xxxxxxxx_:话说我这里今天bilibili.tv又被拐走了
1:26 hope1:拐走？
1:28 hope1:http://blog.plenz.com/2014-04/so-you-want-to-write-to-a-file-real-fast.html 233
1:42 xxxxxxxx_:指解析到奇怪的地方
1:43 hope1:解析到哪了
2:26 condy1 joined channel
2:26 condy1:geordi: { int angle = (short)((+180+30)*65536/360) * 360/65536; cout << angle; }
2:26 geordi:-150
2:26 condy1:geordi: { int angle = (short)((180+30)*65536/360) * 360/65536; cout << angle; }
2:27 geordi:-150
2:27 condy1:geordi: { int angle = (short)((180+30)*65536/250) * 250/65536; cout << angle; }
2:27 geordi:-40
2:48 boosure joined channel
3:48 tsuki joined channel
4:33 boosure joined channel
4:39 lh_mouse:geordi, { foo<int>().bark(); } template<typename Tx> struct foo { void bar(){ BARK; } }; template<typename Tx> struct make_foo { typedef foo<Tx> type; }; template<typename Tx> struct make_foo<foo<Tx>> { typedef foo<Tx> type; };
4:39 geordi:error: 'struct foo<int>' has no member named 'bark'
4:39 lh_mouse:geordi, { foo<int>().bar(); } template<typename Tx> struct foo { void bar(){ BARK; } }; template<typename Tx> struct make_foo { typedef foo<Tx> type; }; template<typename Tx> struct make_foo<foo<Tx>> { typedef foo<Tx> type; };
4:39 geordi:foo<int>::bar()
4:40 lh_mouse:geordi, { typename make_foo<int>::type().bar(); } template<typename Tx> struct foo { void bar(){ BARK; } }; template<typename Tx> struct make_foo { typedef foo<Tx> type; }; template<typename Tx> struct make_foo<foo<Tx>> { typedef foo<Tx> type; };
4:40 geordi:foo<int>::bar()
4:40 lh_mouse:geordi, replace first int with make_foo<int>
4:40 geordi:foo<make_foo<int>>::bar()
4:40 lh_mouse:geordi, replace first int with make_foo<int>
4:40 geordi:foo<make_foo<make_foo<int> >>::bar()
4:40 lh_mouse:geordi, replace first int with make_foo<int>
4:40 geordi:foo<make_foo<make_foo<make_foo<int> > >>::bar()
4:41 lh_mouse:geordi, { typename make_foo<int>::type().bar(); } template<typename Tx> struct foo { void bar(){ BARK; } }; template<typename Tx> struct make_foo { typedef foo<Tx> type; }; template<typename Tx> struct make_foo<foo<Tx>> { typedef foo<Tx> type; };
4:41 geordi:foo<int>::bar()
4:41 lh_mouse:geordi, replace first int with foo<int>
4:41 geordi:foo<int>::bar()
4:41 lh_mouse:geordi, replace first int with foo<int>
4:41 geordi:foo<foo<int>>::bar()
4:41 lh_mouse:geordi, replace first int with foo<int>
4:41 geordi:foo<foo<foo<int> >>::bar()
4:42 lh_mouse:geordi, replace last foo<Tx> with typename foo<Tx>::type
4:42 geordi:error: no type named 'type' in 'struct foo<foo<foo<int> > >'
4:43 lh_mouse:geordi, undo and replace last foo<Tx> with typename make_foo<Tx>::type
4:43 geordi:foo<int>::bar()
4:43 lh_mouse:geordi, show
4:43 geordi:{ typename make_foo<foo<foo<foo<int>>>>::type().bar(); } template<typename Tx> struct foo { void bar(){ BARK; } }; template<typename Tx> struct make_foo { typedef foo<Tx> type; }; template<typename Tx> struct make_foo<foo<Tx>> { typedef typename make_foo<Tx>::type type; };
5:1 cleamoon joined channel
5:10 Ver1tas joined channel
5:20 boosure joined channel
5:30 Ver1tas joined channel
5:44 tsuki joined channel
5:48 Ver1tas joined channel
6:29 Ver1tas joined channel
7:5 Ver1tas joined channel
7:11 Ver1tas joined channel
8:1 silencly07 joined channel
8:40 boosure joined channel
8:52 sleepwalking joined channel
8:53 sleepwalking:上飞机了。。
8:54 hysw:sleepwalking: 难道准备去MIT找数学娘么？
8:54 sleepwalking:去澳门考sat
8:54 hysw:为啥？
8:55 sleepwalking:这有原因么。。。
9:3 sleepwalking:飞了拜拜
9:26 boosure joined channel
10:18 iyzsong joined channel
10:19 sismvg joined channel
10:27 cuihao joined channel
10:35 lhanjian joined channel
10:36 lhanjian:朱军，在Arch上的FF播放letv正常么？
10:36 lhanjian:http://comic.letv.com/zt/777ac/index.shtml
10:37 Plough joined channel
10:39 iyzsong:75s广告..
10:39 lhanjian:iyzsong, 我这里直接一视频的黑，啥也不显示……
10:39 lhanjian:但是flash插件看起来还是加载正常
10:40 iyzsong:2333
10:42 lhanjian:看着BT的下载速度，我简直感动
10:42 lhanjian:chrome倒是没问题……
10:43 iyzsong:本科/在家的时候bt都是满速..
10:43 iyzsong:教育网无法直视
10:43 hysw:某表示无压力
10:43 iyzsong:烧
10:44 hysw:看Cryptography I by Stanford中
10:44 lhanjian:Chrome Flash crashed！
10:44 lhanjian:Fxxk!
10:49 lhanjian:靠，声音也出问题了
10:52 lhanjian joined channel
10:53 lhanjian:竟然是错觉。难道是我耳朵聋了？可是明明听到了电脑的虚拟蜂鸣音的……
10:54 lhanjian:http://comic.letv.com/zt/777/index.shtml
10:54 iyzsong:= =b
10:54 lhanjian:乐视的无弹幕版倒是一切正常
10:55 iyzsong:这里一切正常 flash-11.2.202.356
10:55 lhanjian:http://comic.letv.com/zt/777ac/index.shtml
10:55 hope1 joined channel
10:56 lhanjian:这个我这里是FF直接读不出乐视播放器，Chrome 视频广告加载结束直接Crash……
10:56 lhanjian:iyzsong, 同。
10:56 iyzsong:我果然还是不适合追番  跟不上节奏..  打算过年回家再看
10:57 iyzsong:挽 *.*
10:57 lhanjian:碗
10:57 lhanjian:hope1, 海棠起床了
10:58 hope1:咳咳
11:0 iyzsong:我也刚起来 >.<
11:0 lhanjian:hope1, 海棠竟然咳咳
11:0 iyzsong:竟然不知不觉已经40分钟了
11:1 lhanjian:iyzsong, 我才不会说我也只是起床了30分钟呢
11:1 iyzsong:lhanjian: 摸头
11:2 lhanjian:乐视的服务器真是shxt，这么慢……
11:4 lhanjian:噗哈哈，原来乐视的视频下载早就被破解了，哈哈
11:5 hysw:还不如去看Cryptography I去...
11:6 hysw:DSP / ProgLang也行
11:6 lhanjian:再也不爱寒云了
11:6 hysw:Neural Networks for Machine Learning <要挑战的话欢迎
11:7 Plough joined channel
11:10 hope1:不看乐视，不是有里区吗
11:16 lhanjian:里区挂了
11:19 hope1:怎么挂了
11:20 hope1:还没更新？
11:20 lhanjian:而且乐视的几部番，里区也没有
11:21 iyzsong:赚个广告钱也不容易..
11:21 lhanjian:艹，这回是电信网挂了
11:21 lhanjian:iyzsong, 我都把他广告看了3、4遍了……
11:21 hope1:确实
11:21 lhanjian:可是就没有一会能给我流畅播出来的……
11:21 iyzsong:2333
11:22 lhanjian:半分钟缓冲10秒能忍？
11:22 hope1:还是搜狐比较良心，都有2p的up投稿版，1p广告也只有15s，播放流畅
11:23 lhanjian:搜狐的质量也不错。
11:23 lhanjian:乐视就是半桶水的互联网公司。渣渣
11:23 lhanjian:hope1, 搜狐的机斗士还有无圣光R18版的，简直业界良心
11:24 hope1:顶风作死？
11:24 lhanjian:hope1, 这回扫到新浪头上以后，搜狐又把圣光加回来了
11:25 lhanjian:新浪最良心，一点视频广告都没有
11:26 hope1:总之下一季就完全不用看广告了
11:26 *hope1 是强盗
11:28 *lhanjian 当强盗，还要批评正版源视频网站找不对商业模式
11:29 *lhanjian 不仅要当强盗，还要开着BT上传当种子源鼓励大家当强盗
11:31 *hope1 为无私奉献的老司机点赞
11:31 iyzsong:为啥叫司机..
11:32 hope1:不知道...
11:33 lhanjian:iyzsong, http://zh.moegirl.org/%E8%80%81%E5%8F%B8%E6%9C%BA
11:33 lhanjian:话说萌娘百科的崛起真心是令人瞩目
11:33 iyzsong:soga..
11:37 hope1:sina iask关掉整顿了……
11:40 lhanjian:hope1, 你可以直接用谷歌 C primur plus site:sina.com.cn
11:40 lhanjian:还是可以下吧
11:41 lhanjian:原来你说的是新浪爱问……
11:41 lhanjian:我还以为是ishare.iask.sina
11:42 hope1:原来ishare还是能用...
11:43 lhanjian:很早以前就不能用ishare搜出资源了，但是用google还是一直能下。毕竟微博的网盘和ishare貌似有比较紧密的联系
11:50 sismvg:昨天迅雷下东西 。。。发现资源不能离线，被举报了
11:50 sismvg:这次的号角吹得太响了
11:50 sismvg:毛站都沦陷成为渣渣了。。
11:53 lhanjian:只有BT的毛站，根本支撑不起来
11:53 lhanjian:而且国外似乎没有靠谱的网盘？
11:55 GODDOG joined channel
11:56 sismvg:国外网盘坑跌
11:56 sismvg:坑爹
11:56 sismvg:没有速度，迅雷不能下，用转换器麻烦死了
11:57 sismvg:我们需要新的高速发布文件的方式
11:57 hysw:非天朝的网盘，免费的都是坑爹
11:58 sismvg:好像某个外国网盘免费，可以达到最高速度，但是每15分钟只能下载1MB 的东西。。
11:59 Plough:mediafire现在如何了
11:59 sismvg:?\
12:0 Plough:我记得以前还不错的来着
12:0 Plough:不过被墙了
12:0 GODDOG:hysw: dropbox 不错
12:0 lhanjian:Plough, 一直被墙的基本不可用
12:1 Plough:Soga
12:1 Plough:残念
12:1 hysw:忘了这货...
12:1 hope1:国外免费网盘基本都不可用
12:1 hysw:不过一般没有能在dropbox上找到的东西
12:2 GODDOG:hysw: 好吧 其实当作同步盘还好
12:2 GODDOG:至少比github方便点 
12:2 hysw:对我而言没必要...
12:2 hysw:直接rsync就得了...
12:3 lhanjian:不过容量都差距很大。度娘虽然有上传限制，但是实际BT分享的过程中，基本没限制……
12:3 GODDOG:lhanjian: 几餐 开了啊
12:3 lhanjian:GODDOG, 我吃的盒饭……
12:3 lhanjian:GODDOG, 室友帮买的
12:4 GODDOG:lhanjian: 哦有钱人
12:4 GODDOG:一份盒饭至少10起吧
12:4 hysw:果然得建立一份全局备份
12:5 lhanjian:GODDOG, ……
12:5 lhanjian:不过这次没把杀马特梯子的goagent版本火狐/谷歌浏览器百度盘分享干掉真奇怪
12:6 GODDOG:lhanjian: 前天看见一个 graphics on terminal
12:6 GODDOG:算了吃饭去
12:7 lhanjian:fbterm……
12:7 lhanjian: @ayanamist  ·  4月30日
12:7 lhanjian:迅雷离线开始主动删文件了。迅雷离线把十几年累积的P2P资源全部囊括在他们服务器上然后杀死了P2P，我就想过迅雷离线如果挂了，很多资源就彻底绝种了。不过当时是想着迅雷这公司运营不善，没想到是靠着这个净网行动。古时候的东西失传大概也是同样的过程吧
12:7 sismvg:迅雷竟然被国外给做掉了。。
12:8 sismvg:赶快下载下来搞备份啊
12:8 sismvg:焚迅雷坑淫民
12:8 lhanjian:我好像很早就质疑过迅雷在服务器上存储数据涉嫌违法了。他们当时竟然回应我说，都是代替用户进行下载不保存。
12:9 lhanjian:度娘的数据至少没有自我删除
12:10 sismvg:BT的概念不是每个人都是服务器&客户端嘛。
12:11 lhanjian:一旦没人分享了，很多资源就彻底死了。
12:11 iyzsong:没了就没了吧..
12:12 sismvg:我不喜欢为了下载个源代码竟然要忍受10kb/s的速度。。
12:12 hope1:楼下可以送饭的餐馆放假了……
12:12 lhanjian:233
12:12 sismvg:自己血做菜吧
12:13 lhanjian:iyzsong, 有点怅然若失的感觉。有些古早的稀有资源可能再也下不到了。
12:13 sismvg:用firefox下4.4BSD的源代码的时候竟然2kb/s...
12:13 lhanjian:sismvg, 用代理。
12:13 lhanjian:真怀疑是不是哪家硬盘厂被我朝买走了？
12:15 hysw:这类玩意从来100Mbps的飘过...
12:18 lhanjian:这次我看来是要下定决心买个移动硬盘了
12:21 condy joined channel
12:22 condy: 53.6 MiB  5.80M/s 00:09 太感动了。。。
12:23 sismvg:话说把大量头文件放到无损压缩包里然后再读取可以加快头文件的读取速度吧
12:23 lhanjian:大量头文件？
12:23 sismvg:2000个赴京。。
12:24 hysw:无线网果然是渣 down 16Mbps, up 10Mbps
12:26 sismvg:hacg也挂掉了。。
12:29 condy:绅士之庭上的资源也没有了。
12:31 lhanjian:琉璃神社的货，不是还在么？
12:32 lhanjian:而且BT虽然不快了，不过还能接受的样子
12:39 hope1 joined channel
12:39 Plough:e绅士党路过
12:48 phone_lhanjian joined channel
12:50 hope1:NGNL第三集....
12:51 iyzsong:...
12:52 phone_lhanjian:ngnl听说正版没了？
12:54 hope1:里区还能看
12:56 sismvg:还好我还是50G 的loli本子放在本地。。
12:59 hysw:与其拷贝到移动硬盘还不如直接rsync
13:1 sismvg:不安全
13:1 hysw:?
13:1 sismvg:谁知道什么时候就挂了
13:2 hysw:rsync过还挂啥?
13:2 sismvg:不是备份到服务器嘛/
13:2 hysw:就是remote rsync
13:3 Plough:移动硬盘更不安全吧
13:3 sismvg:加密一下就好啦
13:3 iyzsong:可以存磁带..
13:3 Plough:物理破坏
13:4 sismvg:保存好一点用3年
13:4 Plough:我觉得Server更不容易挂
13:10 phone_lhanjian:还是刻光碟吧。保10年
13:10 phone_lhanjian:藏起来也方便
13:11 hysw:光碟什么的update太麻烦
13:11 phone_lhanjian:本来就是备份本子视频，又不是代码，还增量？
13:12 hysw:视频音乐啥的没必要备份...
13:14 phone_lhanjian:等你碰到你想要的老物没资源分享了，你就知道那种蛋疼了。
13:15 hysw:没什么老物...
13:15 hysw:老早以前的东西基本上都有移动硬盘备份...
13:16 hysw:最头痛的的问题是自己写的笔记和作业玩完
13:16 cuihao joined channel
13:18 hoxily joined channel
13:22 hoxily joined channel
13:38 hysw:貌似只有700M要sync的玩意..
13:42 xxxxxxxxx joined channel
14:0 xxxxxxxxx joined channel
14:11 condy:实数集是不可列的，其势（或称“基”）为阿列夫1（而Z，即整数集的势则是阿列夫0）,函数空间的势为阿列夫2... 又涨知识了，虽然我已经忘光了。
14:13 sismvg:门外30度，门内16度。。每开空调。。
14:14 hope1:没法证明是Aleph1吧
14:16 xxxxxxxxx:http://zh.wikipedia.org/zh-cn/%E8%BF%9E%E7%BB%AD%E7%BB%9F%E5%81%87%E8%AE%BE <- 这个看不太懂....
14:17 sismvg:好厉害的感觉-----连初中数学都忘了的我如是说。
14:18 xxxxxxxxx:浙江男子持刀追砍母亲 称要单挑警察
14:18 xxxxxxxxx:orzzz
14:18 hysw:hope1: 貌似是continuum hypothesis
14:21 xxxxxxxxx:http://www.brain-dump.org/projects/dwm-win32/ <- 还有这种东西
14:38 xxxxxxxxx:http://www.bilibili.tv/video/av1093340/ ........
14:42 sismvg:大角虫(笑)\
15:15 condy:geordi: << sizeof(char (&)[1])
15:15 geordi:1
15:19 phone_lhanjian joined channel
15:21 phone_lhanjian2 joined channel
15:30 cuihao joined channel
15:35 condy:geordi: << sizeof int64_t
15:35 geordi:error: expected primary-expression before ';' token
15:35 condy:geordi: << sizeof(int64_t)
15:35 geordi:8
15:35 condy:这算不算一个bug啊。
15:36 sismvg:这样看起来不是更加屌嘛
15:37 sismvg:geordi :{int test(int val) {return val*100;} <<test(10}
15:37 geordi:error: Unexpected `}` after test(10. Expected ')', '/', or balanced code.
15:37 sismvg:geordi :{<<typeof(int)->name();}
15:37 geordi:error: expected primary-expression before '<<' token
15:37 condy:geordi: << (sizeof int64_t)
15:37 geordi:error: expected primary-expression before ')' token
15:38 sismvg:geordi :{cout<<typeof(int)->name();}
15:38 geordi:error: expected primary-expression before 'int'
15:38 condy:sizeof 不是一个operator吗？
15:38 sismvg:geordi :{cout<<typeid(int)->name();}
15:38 geordi:error: base operand of '->' has non-pointer type 'const type_strings_detail::type_info'
15:38 sismvg:geordi :{cout<<typeid(int).name();}
15:38 geordi:int
15:38 sismvg:geordi :{cout<<typeid(int .name();}
15:38 geordi:error: Unexpected `}` after `name();`. Expected ')' or balanced code.
15:38 sismvg:我记得我打了花括号的。。
15:39 sismvg:geordi :{typeid(int ; }
15:39 geordi:error: Unexpected `}` after `(int ; `. Expected ')', '/', or balanced code.
15:39 sismvg:还是看不见花括号。。
15:39 condy:geordi: >> typeif(int64_t).name()
15:39 geordi:error: expected unqualified-id before '>>' token
15:39 condy:geordi: << typeif(int64_t).name()
15:39 geordi:error: expected primary-expression before ')' token
15:40 condy:geordi: << typeid(int64_t).name()
15:40 geordi:long
15:40 sismvg:geordi :<<typeid(int).name(
15:40 geordi:error: Unexpected end of request. Expected ')' or balanced code.
15:40 sismvg:这次括号不见了。。
15:41 sismvg:geordi: {cout<<10>5 ? :1 :0 ;}
15:41 geordi:error: no match for 'operator>' (operand types are 'ostream' and 'int')
15:41 sismvg:geordi: {cout<<10>5 ? 1 :0 ;}
15:41 geordi:Same error.
15:41 sismvg:geordi: {cout<< 10>5 ? 1 :0 ;}
15:41 geordi:Same error.
15:41 sismvg:geordi: {cout<<10>5;}
15:41 geordi:Same error.
15:41 condy:geordi: << 10>5 ? 1 :0
15:41 geordi:Same error.
15:41 sismvg:geordi: {cout<< 10>5;}
15:41 geordi:Same error.
15:41 condy:geordi: << (10>5 ? 1 :0)
15:41 geordi:1
15:41 sismvg:到底发生了什么。》
15:42 sismvg:geordi: << 10>5 ? 1 : 0
15:42 geordi:error: no match for 'operator>' (operand types are 'ostream' and 'int')
15:42 sismvg:geordi: << 10>5 ? 1:0
15:42 geordi:Same error.
15:42 condy:优先级的问题吧。 
15:42 sismvg:geordi: << (10>5 ? 1:0
15:42 geordi:error: Unexpected end of request. Expected ')', '/', or balanced code.
15:42 sismvg:geordi: << (10>5 ? 1:0)
15:42 geordi:1
15:42 sismvg:可以了
15:43 sismvg:geordi: << (10<5 ? 1:0)
15:43 geordi:0
15:43 sismvg:为什么有一些符号看不见呢
15:44 condy:不懂。
15:44 sismvg:我这里看不见右边的括号，如果在 : 这个符号后面打字母是看不见的
15:45 condy:终端的问题？
15:45 sismvg:你看的见？
15:45 sismvg:{}
15:46 sismvg:{:}
15:46 sismvg:{:}
15:46 condy:可以。
15:46 sismvg:geordi: <<{ ;}
15:46 geordi:error: expected primary-expression before '{' token
15:46 sismvg:geordi: <<{ ;}
15:46 geordi:Same error.
15:46 sismvg:geordi: { ;}
15:46 geordi:<no output>
15:46 sismvg:我这看不见。。
15:51 xxxxxxxxx:换个字体也看不见?
15:54 sismvg:geordi:{;}
15:54 geordi:<no output>
16:6 sismvg:xchat的bug?设置背景图片的时候不会自动缩放。。
16:16 T2 joined channel
16:18 whocares_2_ joined channel
16:21 sismvg3 joined channel
16:22 sismvg3:谁吧sismvg这个名字给占用了
16:22 xxxxxxxxx:不是你自己么?
16:23 sismvg3:不是我
16:23 xxxxxxxxx:还在这个频道里呢 不是你自己?
16:24 sismvg3:IP虽然一样。。。但是这里完全上不去。。
16:24 sismvg3:只开了一个xchat..
16:26 sismvg joined channel
16:38 iyzsong:...
16:39 xxxxxxxxx:那么明显的一个掉线的情况.....
16:40 sismvg:.主要是5分钟左右还挂在上面。。。
16:43 condy:开始分网了。。。
16:43 sismvg:什么意思
16:44 condy:>> geordi (~geordi@2a02:348:71:635b::1) has quit (*.net *.split) 
16:46 sismvg:C语言里main都要exit(0)?
16:46 xxxxxxxxx:你是指 0 还是exit?
16:47 sismvg:调用exit啊
16:56 xxxxxxxxx:http://linux.die.net/man/3/abort
17:1 lhanjian joined channel
17:3 hoxily joined channel
17:5 *hoxily /time
17:9 biergaizi_ joined channel
17:16 sismvg:今天随手下了4个资源。。全部被举报不能离线。。。
17:18 xxxxxxxxx:乒乓画人物心理的方式真是碉堡了
17:31 lh_mouse joined channel
17:35 condy:geordi怎么还没有来？
17:37 xxxxxxxxx:分网的话能判断挂不挂?
17:38 xxxxxxxxx:分网的时候我还遇到过本频道只有我一个呢....
17:38 xxxxxxxxx:能说明你们都掉线了?
17:39 xxxxxxxxx:垠酱竟然有7千多粉丝....
17:44 lh_mouse:int typedef T;
17:54 xxxxxxxxx:http://www.ecice06.com/CN/article/downloadArticleFile.do?attachType=PDF&id=13818 <-  天朝产
18:4 Plough:Time taken for tests:   10.089 seconds
18:4 Plough:快了5秒
18:6 cleamoon:这是毕业论文？
18:6 lh_mouse:sismvg, /help ghost
18:6 xxxxxxxxx:不知道 我只是路过看到
18:7 geordi joined channel
18:8 xxxxxxxxx:中国电子科学研究院系统软件室，北京 <- http://www.caeit.cn/
18:9 lh_mouse:好啦 geordi 来了
18:18 condy:geordi: << typeid(int)
18:18 geordi:int
18:18 condy:geordi: typeid(int)
18:18 geordi:error: expected constructor, destructor, or type conversion before '(' token
18:18 condy:geordi: typeid(int);
18:18 geordi:Same error.
18:18 condy:geordi: << typeid(int).name()
18:18 geordi:int
18:19 condy:geordi: << typeid(int).hash_code()
18:19 geordi:6253375586064260614
18:19 condy:geordi: << typeid(int32_t).hash_code()
18:19 geordi:6253375586064260614
18:20 condy:<< typeid(int) == typeid(long)
18:20 condy:geordi: << typeid(int) == typeid(long)
18:20 geordi:error: no match for 'operator==' (operand types are 'ostream' and 'const type_strings_detail::type_info')
18:20 condy:geordi: << (typeid(int) == typeid(long))
18:20 geordi:false
18:21 condy:geordi: << sizeof(int), sizeof(long)
18:21 geordi:4, 8
18:22 condy:geordi: any i = 10
18:22 geordi:error: 'any' does not name a type
18:23 Plough:geordi: auto i = 10
18:23 geordi:error: expected ',' or ';' at end of input
18:23 Plough:geordi: {auto i = 10;}
18:23 geordi:warning: unused variable 'i'
18:23 condy:geordi: auto i = "ss"; << i
18:23 geordi:error: expected unqualified-id before '<<' token
18:23 condy:geordi: auto i = "ss"; cout << i;
18:23 geordi:error: 'cout' does not name a type
18:23 condy:geordi: { auto i = "ss"; cout << i; }
18:23 geordi:ss
18:24 T2 joined channel
18:25 sleepwalking joined channel
18:25 sleepwalking:赌场的肯德基好贵。。。
18:26 cleamoon:miku去赌和c酱的结婚戒指？
18:26 sleepwalking:去考sat
18:26 sleepwalking:结婚需要戒指？
18:26 cleamoon:好神奇的考试地点
18:26 cleamoon:多新鲜
18:27 sleepwalking:澳门
18:27 sleepwalking:出了考点就一赌场
18:27 sleepwalking:我去踩考点顺便解决掉晚饭
18:27 cleamoon:烧
18:30 cleamoon:马上miku就要成为国外现充后宫壕了，烧的理由不计其数
18:30 lhanjian:壕无人性
18:31 cleamoon:我就只有一个国外好不好
18:33 lhanjian:cleamoon, 你要说你没钱，那我就是水深火热了
18:33 cleamoon:我确实没钱
18:33 *lhanjian 活在harden area
18:34 cleamoon:至少工作前不会有钱
18:34 *lhanjian 是负资产
18:35 cleamoon:你借钱了？
18:40 sleepwalking:四十奥币的套餐。。
18:40 cleamoon:那是多少
18:43 sleepwalking:公交上两个外国小萝莉好萌呀
18:43 cleamoon:hentai后宫王
18:44 sleepwalking:还是C酱好。
18:44 cleamoon:无图无真相
18:46 sleepwalking:其实kfc算便宜了这里
18:46 xia joined channel
18:47 sleepwalking:上次来这，中午下馆子吃掉300软妹币
18:47 lhanjian:壕无人性
18:47 sleepwalking:我觉得这kfc很经济实惠。
18:47 cleamoon:壕无人性
18:48 xxxxxxxxx:爆炸吧现充!
18:48 sleepwalking:bang
18:48 lhanjian:1澳门元= 0.78 软妹币
18:53 xxxxxxxxx:miku酱住在澳门?
18:54 phone_lhanjian joined channel
18:57 iyzsong joined channel
18:59 sleepwa50 joined channel
19:0 xxxxxxxxx:http://tieba.baidu.com/p/3018176637 <- 七楼那个肯定看了王垠的微博
19:0 sismvg:烧算什么，我们需要硝酸甘油
19:1 xxxxxxxxx:MAGICIAN RED!
19:5 sismvg:233
19:5 cleamoon:无论技术如何也改变不了yinwang是sb的事实
19:5 iyzsong joined channel
19:5 hoxily joined channel
19:7 sismvg:无论技术如何也改变不了jojo全套贵的头疼的事实
19:8 xxxxxxxxx:不过别太谦虚没说错 天朝人的谦虚只是因为别人告诉我要谦虚所以我自己感到自己谦虚的程度
19:9 cleamoon:谦虚不是因为想谦虚，而是自大的sb太多，像某“世界顶尖的语言学家”
19:11 xxxxxxxxx:这句话是什么意思?
19:12 cleamoon:意思就是我觉得一般说的谦虚不是让你在正常水平上谦虚，而是不要自大
19:14 xxxxxxxxx:自大又不一定是啥坏处
19:14 Plough:绝大部分时候是有害的
19:14 Plough:至少我没见过自大有益的例子
19:14 xxxxxxxxx:战忽局就从来没体现出过坏处
19:14 cleamoon:基本没有有好处的时候
19:15 cleamoon:战忽局?
19:15 lhanjian:战忽局不是自贬的么
19:16 xxxxxxxxx:每次吹牛吹大了也不见得会被认艹
19:16 xxxxxxxxx:人
19:16 Plough:非得被人艹才是有害么
19:16 cleamoon:他那不是自大，是sb，他肯定不敢在领导那里自大
19:16 xxxxxxxxx:也就是毫无影响也是有害么?
19:16 Plough:毫无影响么？␣
19:17 cleamoon:而且成为了公认sb，在领导那里也得是下人，还需要多有害呢？
19:17 xxxxxxxxx:对人家来说有啥影响嘛
19:17 Plough:被人当傻逼
19:17 iyzsong joined channel
19:17 Plough:这就是影响
19:17 xxxxxxxxx:他自大了 还忽悠到一曲傻逼顶他呢
19:17 cleamoon:自大是不自知且自信，少将是自知且忽悠那些不自知的
19:17 Plough:还有一帮人当他傻逼呢
19:18 xxxxxxxxx:其实你不吹牛几乎所有不认识的人都拿你当傻逼
19:18 Plough:Prove it
19:18 xxxxxxxxx:你会觉得``哎呀这个路人好屌呀" 么?
19:18 cleamoon:吹完了就是所有认识你的都当你sb
19:18 cleamoon:经常的
19:18 lhanjian:不会。
19:19 lhanjian:你可以适当放大自己的能力
19:19 lhanjian:外行绝壁看不出来
19:19 cleamoon:我觉得没必要
19:19 lhanjian:这就是yinwang0之所以火的原因
19:19 xxxxxxxxx:你在路上看到路人也觉得他们什么地方做的不够好
19:19 xxxxxxxxx:什么地方傻逼了
19:19 Plough:但我不会当他傻逼
19:19 cleamoon:火了也没意义
19:19 lhanjian:适当放大自己的能力，有助于增强自己的话语影响力
19:20 xxxxxxxxx:口头上说当不当他是傻逼有啥意思嘛 你会顶他么?
19:20 cleamoon:话语影响力在不从政时没意义
19:20 Plough:顶他？␣
19:20 cleamoon:我更不会顶自大狂
19:20 lhanjian:想想看，老谭
19:20 lhanjian:到处跑去搞讲座
19:20 FrankHB:狗日的aapt。。。怎么调用的找不到。。。
19:20 cleamoon:老谭是从政的
19:20 FrankHB:http://www.bilibili.tv/video/av939149/ 果断循环。
19:20 lhanjian:微博上的公知，火了以后，卖书好。
19:21 lhanjian:尽管他可能是什么狗屁演员
19:21 lhanjian:话语影响力强了，还可以搞个大新闻
19:21 xxxxxxxxx:张召忠的那个啥<网络战争> 没人顶他你会去看他?
19:22 xxxxxxxxx:你看了尤其是看了实体书他就赚了呗
19:22 xxxxxxxxx:他的书有需求了啊
19:22 Plough:装逼不叫自大
19:22 cleamoon:按你这说法所有东西都有好处
19:22 Plough:认为自己如同装得一般牛逼才叫自大
19:22 lhanjian:局座虽然上媒体都是负面新闻，但并不代表他做的节目全是Shxt
19:22 cleamoon:去变药娘也有好出
19:22 cleamoon:好处
19:22 cleamoon:自杀也有好出
19:23 cleamoon:杀光全家人也有好处
19:23 cleamoon:你都能出名
19:23 cleamoon:出名了都能出书
19:23 cleamoon:出书了都能挣钱
19:23 cleamoon:这个并不证明自大有好处
19:23 xxxxxxxxx:谁跟你说出了书才能有好处么?
19:23 lhanjian:总之，我觉得适当包装人，完全可以。
19:24 Plough:xxxxxxxxx: 别死扣字眼，没意思
19:24 cleamoon:如果是自己，我觉得宁可不保装
19:24 lhanjian:当年国内搞毛线十进制网络传输，就因为没有有公众影响力的通信专家，结果一对民粹脑残力挺
19:24 xxxxxxxxx:我就问你嘛 xym自大不自大?
19:24 xxxxxxxxx:凤姐自大不自大
19:24 cleamoon:xym是sb
19:25 xxxxxxxxx:我现在只要说cleamoon是sb是不是就完胜了?
19:25 cleamoon:凤姐可不认为自己是全世界最漂亮的
19:25 Plough:你就完败了
19:25 cleamoon:可以呀，我确实是sb呀
19:26 lhanjian:只要能凝聚人心，少数派完全可以碾压沉默的大多数
19:26 xxxxxxxxx:简单的考虑当我举出一个例子之后只要说那个例子是sb而不考虑他自不自大 就说明我说的错的咯?
19:26 cleamoon:这和自大有毛关系
19:27 xxxxxxxxx:当你遇到不符合你想法的东西就一闭眼睛 然后世界就和谐而美丽了?
19:27 cleamoon:啊？
19:28 xxxxxxxxx:xym要是不自大 不到处乱说 他连一点名声都没有 你说是有名声好还是没有名声好?
19:28 cleamoon:没名声好
19:28 Plough:秦桧相当有名
19:28 Plough:你要是欣赏他我也没话说
19:28 cleamoon:要加薪有名
19:28 xxxxxxxxx:对 在他死之前尤其有名
19:28 Plough:价值观不同
19:29 cleamoon:金枪小霸王有名
19:29 xxxxxxxxx:对 所以你仅仅去掉名声
19:29 Plough:仅仅去掉名声？␣
19:29 cleamoon:我根本就不想要名声
19:29 Plough:我已经跟不上你的思路了
19:30 xxxxxxxxx:小霸王做了他做的事情 后面的发展也一样 仅仅没有名声
19:30 iyzsong joined channel
19:30 xxxxxxxxx:没人关注他
19:30 hoxily_ joined channel
19:30 xxxxxxxxx:法官一生气 判你个死刑 完了
19:30 cleamoon:谁还听的懂基王在说什么
19:30 Plough:我是听不懂
19:31 xxxxxxxxx:你有困难的时候 当别人都注意到你就会有一群傻逼想来帮你
19:31 phone_lhanjian:巨基在举例表示有名声好的情况普遍存在
19:31 xxxxxxxxx:没有注意的时候爱死那边死那边
19:31 Plough:懂了
19:31 phone_lhanjian:巨基也没有否认出名可能也有坏处
19:31 Plough:我们对好和坏的定义不一样
19:32 cleamoon:定义不同+
19:32 phone_lhanjian:巨基反对的是片面地拒绝出名
19:32 cleamoon:不片面，我觉得只要不从政最好就别出名
19:33 xxxxxxxxx:我反正没说什么定义同不同 只有你不爽了 喊出来 有人听 才有用
19:33 Plough:我倒觉得要看出的是什么名
19:33 cleamoon:再说，我没看到谁自主帮小霸王呀，都是他爸熟人或顾人帮，哪有网名帮了，再说，网名除了帮助他确保了判刑，没做什么吧
19:33 xxxxxxxxx:cleamoon的那种喊出来也不管又没人听的想法简直可笑
19:34 cleamoon:喊出来有人听也不代表有用
19:34 cleamoon:而且喊出来之后你自己肯定有损伤
19:34 Plough:我觉得你这种不管如何出名就有用的想法也挺逗的
19:35 xxxxxxxxx:恶名就会带来不好的影响这个想法才抖
19:35 xxxxxxxxx:逗
19:35 cleamoon:恶名不会有坏处？
19:35 xxxxxxxxx:有坏处怎么了 只要好处更大 恶名也行啊
19:35 xxxxxxxxx:对不对啦
19:36 xxxxxxxxx:三百六恶名吧
19:36 cleamoon:xym得到什么好处了？
19:36 Plough:问题是我没看出来恶名能造成比美名更大的好处
19:36 cleamoon:也就是只要名字里有xym三个字帖子就没人看了而已
19:36 Plough:有人看
19:37 Plough:抱着什么样的心态看另说
19:37 xxxxxxxxx:xym的恶名对他实际生活造成什么影响了么?
19:37 Plough:那么你说的影响到底是什么？
19:37 Plough:别偷换概念
19:38 xxxxxxxxx:很简单 他的傻逼书稿还有人看
19:38 condy:geordi: << typeid("abc")
19:38 Plough:我说最终的印象你说对自己的影响
19:38 geordi:char [4]
19:38 Plough:我说对自己的影响你说对实际生活得影响
19:38 Plough:我说对实际生活的影响你又扯最终的影响
19:38 Plough:这还怎么聊
19:38 xxxxxxxxx:对啊就是对自己的影响嘛 你说有啥?
19:38 cleamoon:这还是出名了能出书就是好处
19:38 Plough:他在网上被人当傻逼了
19:38 Plough:这就是对自己的影响
19:39 xxxxxxxxx:对 如果他不被当成傻逼他聪明点了么?
19:39 cleamoon:那你当然可以自灭满门，然后出一本书叫我的粪豆之类的
19:39 Plough:他当然聪明点
19:39 Plough:至少他聪明到不会被人当成傻逼了
19:39 cleamoon:+
19:39 xxxxxxxxx:阅历广了?
19:40 Plough:按你之前说的
19:40 Plough:一定得阅历广才是好处么？
19:40 cleamoon:而且他的帖子人们会认真看了，也有人会认真回复了，这样自然就能学点什么
19:40 xxxxxxxxx:所以我之前就说了 被当成傻逼这就是恶名本身 是否带来坏处还两说
19:41 xxxxxxxxx:你们现在跟说他被当成傻逼了 所以恶名带来了坏处 和哲学大师有什么差别嘛
19:41 phone_lhanjian:巨基的意思是，恶名很可能比没名更好
19:41 cleamoon:我的意思是我不这么想
19:41 Plough:恶名会阻碍你干其他事
19:42 Plough:这就是影响
19:42 xxxxxxxxx:我不说恶名一定比赞誉更好 但是得到赞誉难 恶名却简单的要死
19:42 xxxxxxxxx:如果大量的恶名胜过少量的赞誉 那恶名就是有益的
19:42 cleamoon:想得到恶名也难，现在sb那么多，怎么你就出名了
19:43 xxxxxxxxx:百度提供新功能你赞了么?
19:43 xxxxxxxxx:百度封个功能或者提供新功能你喷了么?
19:43 Plough:看他封的/出的是什么功能
19:43 Plough:我喜欢他的行为我为什么要喷？
19:43 cleamoon:那是因为你在用度娘，不是因为他是不是sb
19:43 Plough:我讨厌他的行为我为什么要赞？
19:44 cleamoon:yahoo.jp封了一个功能你喷了吗？
19:44 xxxxxxxxx:对 他们可以花几年时间从零做个编译器 或者几天时间做个t票抽奖
19:44 Plough:然后呢？
19:45 xxxxxxxxx:然后用户就开始傻逼兮兮的和朋友抱怨百度又干傻逼事情了
19:45 xxxxxxxxx:然后百度贴吧又有新用户了
19:45 Plough:同时也有人用脚投票了
19:45 xxxxxxxxx:qq空间的傻逼党也能愉快的玩耍了
19:45 Plough:而且说白了
19:45 cleamoon:新用户不认为度娘sb
19:45 xxxxxxxxx:百度也有钱赚了
19:46 Plough:那也只是你觉得百度傻逼而已
19:46 Plough:没准人家就喜欢玩呢
19:46 xxxxxxxxx:没错新用户确实不认为度娘傻逼
19:46 Plough:你凭什么说这就是恶名？
19:46 cleamoon:+
19:46 xxxxxxxxx:所以你们凭什么告诉我xym出的是恶名?
19:46 Plough:那不是你说的么？
19:46 cleamoon:而且如果度娘刚开始时就这么玩，还有现在吗
19:46 xxxxxxxxx:好多新人被忽悠呢
19:46 cleamoon:被忽悠又如何呢
19:47 xxxxxxxxx:xym是大神啊 恶名变成赞赏了啊
19:47 xxxxxxxxx:三百六不也这样吗
19:47 Plough:对呀
19:47 FrankHB joined channel
19:47 xxxxxxxxx:你们都觉得三百六傻逼 新用户可不觉的
19:47 sismvg:下意识的想要删贴了。。
19:48 Plough:那你把xym扯出来干啥呢？
19:48 xxxxxxxxx:恶名为它带来了好名声
19:48 Plough:我没看出来
19:48 Plough:稍微懂点的人都能看出来他是傻逼
19:48 xxxxxxxxx:既然恶名是不好的东西那么 恶名怎么转变成了好名声呢?
19:48 cleamoon:360一开始就是好名声
19:48 cleamoon:后来自己搞臭的
19:48 Plough:按你那么说我觉得他就没个名声
19:49 xxxxxxxxx:好 现在cleamoon已经叛逃到赞赏三百六额行列中了
19:49 cleamoon:一开始的360不错呀
19:49 Plough:选择性失明玩的漂亮
19:49 Plough:19:48 < cleamoon> 后来自己搞臭的
19:49 Plough:19:48 < cleamoon> 后来自己搞臭的
19:49 Plough:19:48 < cleamoon> 后来自己搞臭的
19:49 Plough:看见了么？
19:49 sismvg:.w.zh 死神
19:50 xxxxxxxxx:我是不是也可以说xym也是他自己搞臭的?
19:50 sismvg:怎么玩的。。
19:50 cleamoon:是呀
19:50 xxxxxxxxx:另外三百六的老总傻不傻?
19:50 Plough:那个bot掉了
19:51 cleamoon:老总傻不傻和这个有关系吗？
19:51 xxxxxxxxx:当然有关了
19:51 xxxxxxxxx:你先回答我再说
19:51 cleamoon:无关
19:51 Plough:我来回答吧
19:51 Plough:我不知道
19:51 Plough:我又不是他，我咋知道他傻不傻？␣
19:51 cleamoon:360老总至少没自大到一开始就要求人们充值，而且屏蔽baidu，qq，等等
19:52 phone_lhanjian:现在讨论的是傻，『名声的好坏与他所获的利益是否相关？』
19:52 cleamoon:一开始免费，帮助升级，修补漏洞
19:52 xxxxxxxxx:你又要说腾讯名声不好了是不是?
19:53 cleamoon:腾讯一开始也没什么不好的呀
19:53 cleamoon:免费聊天，有截图，有各种功能
19:53 cleamoon:当时就是没有这样的东西
19:53 xxxxxxxxx:我问现在
19:53 xxxxxxxxx:没问你一开始或者三叶虫以前的事情
19:53 cleamoon:现在他确实做了很多sb事呀
19:54 sismvg:IP接口选项好多。。到底要不要看呢。
19:54 xxxxxxxxx:那是好名声还是坏名声?
19:54 Plough:腾讯总体上看我觉得是好名声
19:55 xxxxxxxxx:cf呢?
19:55 cleamoon:比尔盖茨现在说了几句sb话，于是他所有的钱都是因为这几句话挣的？
19:55 Plough:你想说CF == 腾讯是么？
19:55 xxxxxxxxx:不是
19:55 cleamoon:没有一开始的好名声，后来怎么得涩？
19:55 xxxxxxxxx:我就先确定你们的观点罢了
19:56 xxxxxxxxx:何必到处乱联想
19:56 Plough:而且CF也是毁誉参半
19:56 Plough:有好名声也有坏名声
19:56 Plough:我认为它的好处是由他的好名声带来的
19:56 Plough:句号
19:56 cleamoon:况且cf的坏名声也没为他带来任何利益，只让大量讨厌小学生的不玩了
19:57 sismvg:QQ用户1/5重号，2/5的承认,3/5的学生...
19:57 lhanjian joined channel
19:59 xxxxxxxxx:那你如何确定是好名声给它带来的好处呢?
19:59 Plough:我不能确定
19:59 Plough:但是我通过我接触过的所有人能作出如此推断
20:0 xxxxxxxxx:也就是说你仅仅猜测好的名声给这游戏带来了好处是么?
20:0 cleamoon:那你觉得不少qq用户是因为想被扫描硬盘而用qq？cf玩家是为了他抄袭而玩cf？xym的读者是因为认为他太sb去买他的书？
20:0 phone_lhanjian:反向宣传使更多人知道它，哪怕很多人是骂它，但都是扩大了知名度，于是它可能存在于某些人眼中的亮点也得到了扩大
20:0 Plough:xxxxxxxxx: 是猜测，但不是瞎猜
20:0 sismvg:快播的名声不怎么好，但是为了自己的兄弟，名声不好也有用
20:0 Plough:明确一下
20:0 cleamoon:快播名声不好吗？
20:1 xxxxxxxxx:猜测和瞎猜的区别不大
20:1 Plough:区别很大
20:1 cleamoon:基王也没给出恶名有好处的证据呀
20:1 Plough:在我眼里我认为好处是由好名声带来的是猜测
20:1 Plough:你认为好处是由坏名声带来的是瞎猜
20:2 Plough:因为你没有证据
20:2 xxxxxxxxx:http://www.bilibili.tv/video/av878400/ <- 一个关于平衡性的讨论 你觉得平民玩家是经常赞赏游戏 还是黑它不平衡?
20:2 Plough:xxxxxxxxx: 有人经常赞赏，有人黑他不平衡
20:2 Plough:xxxxxxxxx: 具体数量我没法统计
20:2 cleamoon:你觉得平民玩家是因为好玩才玩还是因为他不平衡才玩？
20:2 cleamoon:不平衡是恶名，但不是因为不平衡人们才玩的
20:2 xxxxxxxxx:Plough 你这已经纯粹是 因为我好所以我好的解释法了
20:3 Plough:xxxxxxxxx: 那不是你么
20:3 Plough:xxxxxxxxx: 你一直在强加因果
20:3 sismvg:感觉TCP/IP协议第一卷白看了。。UNIX网络编程又重新讲了一边。还一模一样。。
20:3 Plough:xxxxxxxxx: 因为这个东西有恶名，而且他受到了好处
20:3 xxxxxxxxx:对但是不平衡是游戏赚钱的要素
20:3 Plough:所以他的好处是由他的恶名带来的
20:3 lh_mouse:/join #c_water_cn
20:3 Plough:xxxxxxxxx: 1.Prove it
20:4 Plough:xxxxxxxxx: 2.恶名不是游戏赚钱的要素
20:4 cleamoon:耗子好评
20:4 cleamoon:红旗+
20:4 xxxxxxxxx:你看完那个视频就行了
20:4 Plough:把大致内容概括下
20:4 cleamoon:不平衡是为了赚钱，但是游戏只有不平衡有人玩吗？
20:4 xxxxxxxxx:清自己看去
20:4 lh_mouse:geordi, template<typename Tx> struct S { template<typename Ty> void foo(); }; { S<int>().foo<char>(); }
20:4 geordi:error: expected unqualified-id before '{' token
20:5 lh_mouse:geordi, { S<int>().foo<char>(); } template<typename Tx> struct S { template<typename Ty> void foo(); };
20:5 geordi:undefined reference to `void S<int>::foo<char>()'
20:5 cleamoon:如果是这样那么我开发一个游戏，比谁给的钱多
20:5 cleamoon:我是不是就成亿万富翁了
20:5 xxxxxxxxx:cleamoon 你不觉得正是因为他们选择了坏名声 才能拿到不平衡带来的收益么?
20:5 lh_mouse:geordi, { S<int>().foo<char>(); } template<typename Tx> struct S { template<typename Ty> void foo(); }; template<> template<typename Ty> void S<int>::foo<Ty>(){ BARK; }
20:5 geordi:error: function template partial specialization 'foo<Ty>' is not allowed
20:5 cleamoon:不觉得
20:6 lh_mouse:geordi, { S<int>().foo<char>(); } template<typename Tx> struct S { template<typename Ty> void foo(); }; template<typename Tx> template<> void S<Tx>::foo<int>(){ BARK; }
20:6 geordi:error: invalid explicit specialization before '>' token
20:6 lh_mouse:geordi, { S<int>().foo<char>(); } template<typename Tx> struct S { template<typename Ty> void foo(); }; template<typename Tx> void S<Tx>::foo<int>(){ BARK; }
20:6 geordi:error: template-id 'foo<int>' in declaration of primary template
20:6 cleamoon:我觉得正是他们创造了好名声，才能在此之上靠不好的不平衡赚钱
20:6 lh_mouse:geordi, { S<int>().foo<char>(); } template<typename Tx> struct S { template<typename Ty> void foo(); }; template<typename Tx> template<typename Ty> void S<Tx>::foo<Ty>(){ BARK; }
20:6 geordi:error: function template partial specialization 'foo<Ty>' is not allowed
20:6 lh_mouse:geordi, { S<int>().foo<char>(); } template<typename Tx> struct S { template<typename Ty> void foo(); }; template<typename Tx> template<typename Ty> void S<Tx>::foo(){ BARK; }
20:6 geordi:S<Tx>::foo() [with Ty = char; Tx = int]
20:7 xxxxxxxxx:但是好名声最多只能给他们玩家数量
20:7 lh_mouse:geordi, { S<int>().foo<char>(); } template<typename Tx> struct S { template<typename Ty> void foo(); }; template<> template<typename Ty> void S<int>::foo(){ BARK; }
20:7 geordi:[with Ty = char; Tx = int]
20:7 lh_mouse:geordi, { S<int>().foo<char>(); } template<typename Tx> struct S { template<typename Ty> void foo(); }; template<> template<typename Ty> void S<int>::foo(){ BARK; }
20:7 geordi:No change in output.
20:7 xxxxxxxxx:并不能转化为收益
20:7 Plough:是的
20:7 lh_mouse:geordi, i;
20:7 geordi:error: 'i' does not name a type
20:7 lh_mouse:geordi, { S<int>().foo<char>(); } template<typename Tx> struct S { template<typename Ty> void foo(); }; template<> template<typename Ty> void S<int>::foo(){ BARK; }
20:7 geordi:[with Ty = char; Tx = int]
20:7 cleamoon:坏名声只能减少玩家数量
20:7 Plough:不平衡能转化为收益
20:7 Plough:但不平衡的恶名不能转化为收益
20:7 Plough:只能减少收益
20:7 xxxxxxxxx:那 你怎么把这份恶名和收益分割开
20:8 iyzsong:吃方便面..
20:8 sismvg:mobibot: weather ZBAA
20:8 cleamoon:但是目的是带来收益的不平衡，目的不是恶名，如果能不被骂地做到不平衡当然他们会做
20:8 Plough:不平衡是特性
20:8 sismvg:玩过强者大战嘛？
20:8 Plough:不平衡的恶名是玩家对他的抱怨
20:8 Plough:显然两者不是一回事
20:8 sismvg:一张魔兽地图，以不平衡&变态为优点
20:9 xxxxxxxxx:Plough 难道你制造不平衡的时候无法预见玩家会抱怨么?
20:9 Plough:xxxxxxxxx: 能
20:9 Plough:xxxxxxxxx: 这根我们的话题有什么关系么？
20:9 cleamoon:暴雪卖sc2有扩展包，这个只增加显示效果，也算不平衡，也是靠不平衡赚钱，但是几乎没有骂名
20:9 xxxxxxxxx:那为了杜绝不好的坏名声你该怎么做?
20:9 cleamoon:他们也能赚钱
20:9 Plough:xxxxxxxxx: 我为什么要杜绝？
20:9 cleamoon:装不装都一样玩
20:9 xxxxxxxxx:因为你们认为 坏名声是不好的
20:9 Plough:xxxxxxxxx: 那些抱怨不平衡的人又不影响我的收益
20:9 Plough:坏名声的确是不好的
20:10 Plough:否则他就不叫坏名声
20:10 Plough:只能叫名声
20:10 xxxxxxxxx:那你为什么要接受这份坏名声?
20:10 Plough:因为我没必要不接受啊
20:10 Plough:这什么也说明不了
20:10 xxxxxxxxx:如果你不接受呢?
20:10 Plough:没有如果
20:11 cleamoon:不接受就像暴雪那么做呀
20:11 iyzsong:好人难做..
20:11 Plough:如果解放战争国民党赢了呢？
20:11 Plough:如果齐国统一了六国呢？
20:11 xxxxxxxxx:20:09:45 Plough>xxxxxxxxx: 那些抱怨不平衡的人又不影响我的收益 <- 其实你这里的话已经暗示那不是坏名声了
20:11 Plough:如果人类一开始就没出现呢？
20:11 Plough:这种假设有意义么？
20:11 Plough:xxxxxxxxx: 没有
20:12 cleamoon:红旗的观点和我不完全相同
20:12 xxxxxxxxx:cleamoon开始分割阵营
20:12 xxxxxxxxx:如果你是为了表达你说明什么我是赞同这种行为的
20:13 Plough:没看懂你这句话
20:13 cleamoon:没看懂+
20:14 xxxxxxxxx:排除怪物用来说明自己原本的想法我是赞同的 但是实际上改变立场而不承认失误我是不赞同的 当然这和现在的话题没啥关系
20:14 cleamoon:看不懂
20:15 xxxxxxxxx:不重要
20:15 Plough:怎么个改变立场法？
20:16 xxxxxxxxx:我不确定他是否在改变立场
20:16 xxxxxxxxx:我又不清楚他本来想表达的是什么
20:16 sismvg:加入把地球加速到无限接近光速，然后在地球外进行长时间才能解答的科学实验
20:16 sismvg:那么100年的地球外时间对地球内是15分钟
20:16 cleamoon:我的立场一直是一样的，自大没好处，因为会带来恶名，而恶名还不如不出名
20:16 sismvg:岂不是爽爆了
20:17 xxxxxxxxx:cleamoon:  更细一些吧
20:17 Plough:sismvg: 把地球加速到光速太阳系就悲剧了
20:17 cleamoon:sismvg, 你在地球上还是得等，在帝球外等得更长
20:17 Plough:sismvg:整个地球会被甩成一个又瘪又宽的盘子
20:18 cleamoon:xxxxxxxxx, ？怎么个细？
20:18 sismvg:看来还是发明时光机比较靠谱
20:18 Plough:sismvg: 边缘飞快的撞上其他星体
20:18 xxxxxxxxx:比如你的恶名是什么养的东西 为什么不如不出名
20:18 Plough:sismvg: 后果可想而知
20:19 cleamoon:xxxxxxxxx, 基本上讲好名就是人喜欢你，恶名就是人讨厌你
20:19 sismvg:其实这项技术可以用来保存货物或者食品
20:19 cleamoon:这项技术可以用来回复一个星球
20:20 xxxxxxxxx:喜欢你的人和讨厌你的人通常都有吧
20:20 Plough:xxxxxxxxx: 对呀
20:20 cleamoon:比如把工厂什么都关掉，让所有人坐上一个飞船，以接近光速随便飞个来回，回来地球就变成几万年前那种漂亮的模样了
20:20 xxxxxxxxx:所以你怎么判断好的还是不好的?
20:20 sismvg:2333.。。
20:21 cleamoon:甚至可以多飞点，然后回来就有石油了
20:21 Plough:xxxxxxxxx: 一群人喜欢你你在他们心中就有美名
20:21 cleamoon:xxxxxxxxx, 一般情况是看大部分人
20:21 Plough:xxxxxxxxx: 一群人讨厌你你在他们心中就有恶名
20:21 sismvg:但是燃料怎么半
20:21 Plough:xxxxxxxxx: 很难区分么
20:21 xxxxxxxxx:确实很难
20:21 cleamoon:飞船也不可能用石油呀
20:21 sismvg:曲律飞船用的是什么燃料。。
20:22 Plough:xxxxxxxxx: 你硬说很难那我也没辙不是
20:22 xxxxxxxxx:不是我硬说啊 
20:22 lh_mouse:cleamoon, 高速飞行只是你的时间变慢  但是不会倒流
20:22 cleamoon:如果想仔细分，那可以看给你带来利益的人怎么看你
20:22 xxxxxxxxx:不是有个奸臣同时是书法家么
20:22 lh_mouse:秦桧
20:22 cleamoon:lh_mouse, 我说的是等地球自己慢慢恢复... 
20:22 Plough:他是书法家我也讨厌他啊
20:22 Plough:不矛盾啊
20:22 sismvg:能接近光速的话估计核燃料已经能完美控制了吧。。
20:23 lh_mouse:Plough, 快 爆 照
20:23 xxxxxxxxx:对啊 但是有人喜欢他啊
20:23 Plough:那秦桧在他心中就有美名嘛
20:23 Plough:怎么了
20:23 cleamoon:sismvg, 区率飞船核燃料不够
20:23 lh_mouse:Plough, 快 爆 照
20:23 Plough:lh_mouse: 不给
20:23 cleamoon:xxxxxxxxx, 只要让皇上喜欢他就行了
20:23 lh_mouse:QAQ
20:23 cleamoon:这就是看带来利益的人怎么看
20:23 cleamoon:Plough, 快 爆 照
20:23 sismvg:查不到用什么燃料。。、
20:24 Plough:cleamoon: 就不给
20:24 Plough:sismvg: 能查到还用研究么……
20:24 xxxxxxxxx:cleamoon 你要这样说再看那个游戏平衡性的例子就很清楚了
20:24 lh_mouse:Plough, 快爆照  就要看
20:24 cleamoon:连理论都没有呢，怎么有燃料
20:24 Plough:xxxxxxxxx: 一直很清楚啊
20:24 sismvg:干脆压缩几个小行星当燃料好了
20:24 Plough:lh_mouse: 等价交换
20:25 xxxxxxxxx:Plough 我没法通过现有的表达理解你所说的清楚
20:25 cleamoon:xxxxxxxxx, 不平衡需要人买，也需要那些不买的，要不哪来的不平衡
20:25 cleamoon:lh_mouse, 好的，红旗答应了，你爆照吧
20:25 xxxxxxxxx:买了的人 更重要对吧
20:25 Plough:cleamoon: 等价交换
20:25 Plough:cleamoon: 照片的价值要相等
20:25 xxxxxxxxx:但是他们都不是花的钱最多的人
20:25 iyzsong:= =
20:25 Plough:xxxxxxxxx: 跟这个无关
20:26 xxxxxxxxx:他们也会去说土豪imba吧
20:26 Plough:xxxxxxxxx: 我们的话题是“恶名能不能带来好处”
20:26 sismvg:经过我10年的研究发现
20:26 sismvg:年龄越大，周围的萝莉也就越多
20:26 xxxxxxxxx:Plough: 你这种可以随意分割副作用的神奇技能还是好好解释解释再说
20:26 cleamoon:xxxxxxxxx, 但他们是重要的人
20:27 Plough:xxxxxxxxx: 哪里要解释？
20:27 cleamoon:不是花钱最多的，但是没有就一分都别想挣
20:27 Plough:xxxxxxxxx: 还有，告诉你件事，你可能不知道
20:27 xxxxxxxxx:Plough:  如何不要恶名 还能拿到必须承担恶名才能拿到的好处 
20:27 Plough:xxxxxxxxx: 我不是绅士
20:27 xxxxxxxxx:我早就知道了
20:27 Plough:xxxxxxxxx: 别把我和他的话混在一块看
20:28 Plough:xxxxxxxxx: 我没看出来
20:28 Plough:xxxxxxxxx: 没法不要恶名
20:28 xxxxxxxxx:我看出来了 你在不停插话
20:28 Plough:我在说我要说的话
20:28 xxxxxxxxx:Plough: 所以为了利益你就得选择恶名对吧 恶名带来的好处
20:29 Plough:xxxxxxxxx: 强加因果
20:29 xxxxxxxxx:即便是个副作用
20:29 sismvg:又大神用wine开魔兽的嘛
20:29 phone_lhanjian:有。
20:29 xxxxxxxxx:你能分割 就可以破坏这个因果 我不需要加强
20:29 Plough:xxxxxxxxx: 工业化让经济增长
20:29 sismvg:球方法
20:29 Plough:xxxxxxxxx: 也会污染环境
20:29 iyzsong:-opengl
20:29 Plough:于是你得出结论
20:29 cleamoon:恶名无法带来利益，而是带来利益时常常伴随恶名
20:29 Plough:污染环境让经济增长
20:29 phone_lhanjian:iyzsong: 瓶颈貌似不在图形上
20:29 Plough:好了，你可以让经济学家去死了
20:30 cleamoon:+
20:30 iyzsong:wine war3直接就行 还能玩战网
20:30 cleamoon:人活着就要呼吸，时间长了就会了，所以呼吸导致死亡
20:31 xxxxxxxxx:不不不 我的想法很清楚 我就是需要污染环境让经济增长
20:31 Plough:xxxxxxxxx: 经济增长需要污染环境
20:31 Plough:xxxxxxxxx: 污染环境不能使经济增长
20:31 Plough:xxxxxxxxx: 句号
20:32 xxxxxxxxx:我就是需要(污染环境让经济增长)
20:33 Plough:xxxxxxxxx: 语言的表达不能改变现实
20:33 xxxxxxxxx:我也想对你说这句话
20:33 cleamoon:经济增长也不代表一定要环境污染
20:33 cleamoon:只有环境污染也不会带来任何经济增长
20:33 Plough:xxxxxxxxx: 那你就说呗
20:33 condy:geordi: << "源里的gcc更了."
20:33 geordi:源里的gcc更了.
20:33 Plough:xxxxxxxxx: 我又没必要阻止你
20:34 Plough:xxxxxxxxx: 我也可以从水滑梯上滑下去
20:34 Plough:wheeeeeeeeeeeeeeeeeeeeeeeeeee~
20:34 Plough:(参见xkcd)
20:36 xxxxxxxxx:cleamoon:  污染环境 不一定能增长经济 但是如果增长经济必须要污染环境 那就是污染环境带来的经济增长
20:36 Plough:xxxxxxxxx: 所以说你是在强加逻辑
20:36 Plough:xxxxxxxxx: 强加因果
20:37 Plough:xxxxxxxxx: 不信你完全可以去一把火把大兴安岭烧个精光
20:37 Plough:然后看看中国有没有实现伟大复兴
20:37 xxxxxxxxx:23333333
20:37 xxxxxxxxx:污染环境 不一定能增长经济
20:38 xxxxxxxxx:但是如果增长经济必须要污染环境 那就是污染环境带来的经济增长
20:38 cleamoon:一个简单的例子，比如现在xym和耻球或者耗子或者alpako之类的精神互换了，然后他们都出书，你说是假xym真耻球出的书买的多还是假耻球真xym出的书买的多？当然是假耻球真xym出的书卖的好，即使这实际是xym写的完全sb的书，这就是名声的区别
20:38 Plough:xxxxxxxxx: 那不就结了么
20:38 condy:geordi: -v
20:38 geordi:g++ (GCC) 4.10.0 20140418 (experimental)
20:38 Plough:xxxxxxxxx: 污染环境带来经济增长
20:38 Plough:xxxxxxxxx: 这句话的意思就是污染环境能增长经济
20:38 xxxxxxxxx:这是污染环境是前提的意思
20:39 Plough:xxxxxxxxx: 就算污染环境是前提吧
20:39 Plough:xxxxxxxxx: 前提不是原因
20:39 xxxxxxxxx:配方不只制作过程 说以和结果无关23333
20:39 Plough:xxxxxxxxx: 这是你说的
20:39 Plough:xxxxxxxxx: 不是我说的
20:40 Plough:xxxxxxxxx: 记下了
20:40 cleamoon:那按这个说法就可以推出呼吸导致死亡
20:40 xxxxxxxxx:不是你说的么?
20:40 Plough:xxxxxxxxx: 我说了么？
20:40 xxxxxxxxx:前提不是原因
20:40 Plough:xxxxxxxxx: 对呀
20:40 Plough:xxxxxxxxx: 前提不是原因
20:40 cleamoon:喝水导致二战
20:40 iyzsong:噗
20:41 Plough:xxxxxxxxx: 某种配方是产物表现出某种性质的原因
20:41 cleamoon:秦朝的人放了个屁，于是南京大屠杀，911，原子弹
20:41 Plough:+
20:41 cleamoon:希腊人喝了口水，于是清朝灭亡了
20:42 cleamoon:我突然觉得自己好伟大，我今天做的事可能导致人类灭亡呢
20:42 Plough:我喝了口水
20:42 iyzsong:NGNL竟然又有了..
20:42 Plough:于是人类幸存了
20:43 xxxxxxxxx:你喝了口水 于是你幸存了 快来反驳吧
20:43 Plough:xxxxxxxxx: 有什么好反驳的
20:43 Plough:xxxxxxxxx: 我喝了这口水的确让我避免脱水而死
20:43 cleamoon:我现在不喝水我也能在下一分钟幸存
20:43 xxxxxxxxx:人如果不喝水 二战可能发生么?
20:44 iyzsong:好吧 竟然是无限广告 >.<
20:44 hoxily:有人读过java assembly吗?
20:44 xxxxxxxxx:cleamoon: 按照你的结论 你可以永远不喝水
20:44 Plough:xxxxxxxxx: 二战是因为人喝水么？
20:44 xxxxxxxxx:人类喝水是发生二战的前提
20:44 Plough:xxxxxxxxx: 不是原因
20:44 cleamoon:所以说基王支持希腊人喝水导致二战，那为了我们的未来，禁止希腊人喝水吧
20:45 xxxxxxxxx:你不觉得前提的限定要过比原因更强么?
20:45 cleamoon:xxxxxxxxx, 我的结论推不出那个
20:45 cleamoon:不觉得
20:45 Plough:xxxxxxxxx: 于是你证明了前提就是原因
20:45 Plough:xxxxxxxxx: 我也能证明你是错的
20:45 Plough:xxxxxxxxx: 通过滑下水滑梯
20:45 Plough:wheeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee~
20:45 xxxxxxxxx:我现在不喝水我也能在下一分钟幸存 <- 这个结论持续下去你就不用喝水了
20:46 Plough:xxxxxxxxx: 这个结论持续不下去
20:46 xxxxxxxxx:那他就根本不是什么可信的结论
20:46 Plough:xxxxxxxxx: 正方形是矩形
20:47 cleamoon:你强加了条件 现在是对的就永远是对的
20:47 Plough:xxxxxxxxx: 要是这个结论对所有图形都适用那所有图形都是举行了
20:47 Plough:矩形
20:47 Plough:所以正方形不是矩形
20:47 Plough:证毕
20:47 cleamoon:+
20:47 xxxxxxxxx:现在你承认不承认前提比因果限定效果更强?
20:47 cleamoon:不承认
20:47 Plough:xxxxxxxxx: 我认为这和我们讨论的话题无关
20:47 xxxxxxxxx:我给你加了个前提你的因果还成立么?
20:48 Plough:你的论点是“恶名是带来好处的原因”
20:48 Plough:不要偷换论点
20:48 Plough:xxxxxxxxx: 所以你不能加前提
20:48 xxxxxxxxx:Plough: 是你加了必定
20:48 Plough:xxxxxxxxx: 我没加啊
20:48 Plough:xxxxxxxxx: 我只是在说你举出来的例子
20:48 xxxxxxxxx:我只说恶名能带来好处
20:48 Plough:xxxxxxxxx: 那么明确你的意思
20:49 Plough:xxxxxxxxx: 我认为你说的是“恶名是带来好处的原因”
20:49 xxxxxxxxx:为什么你这么认为?
20:49 cleamoon:如果恶名不是带来好处的原因，那么恶名不能带来好处
20:50 FrankHB joined channel
21:0 Plough:http://imgs.xkcd.com/comics/citogenesis.png
21:5 iyzsong:浅色终端真好(我已经丧病了) => http://puu.sh/8w3a8.png
21:8 cleamoon:这是什么wm？
21:8 iyzsong:xmonad..
21:8 iyzsong:AB站也越来越坑了 >.<
21:9 cleamoon:看起来不错
21:11 iyzsong:不错不错吧
21:11 cleamoon:好用吗
21:11 iyzsong:还能用..
21:12 iyzsong:只是显示器太少 - -b
21:12 xia:表示一直很好♂奇 http://puu.sh/8w3a8.png这样多窗口的效果是怎么做到的
21:12 iyzsong:等我工作了就买9台 HO~
21:12 iyzsong:xia: 平铺的wm都这样
21:13 xia:求全名= =
21:14 iyzsong:xia: dwm/xmonad/i3/awesome/xmonad...
21:14 Plough:两个xmonad
21:14 iyzsong:额 竟然打了两次
21:15 xia:ok，去试试看
21:15 iyzsong:恭喜入坑..
21:15 xia:\("▔□▔)/阿勒
21:16 condy:iyzsong: 为什么喜欢Adwaita ?
21:16 iyzsong:condy: 没有adwaita..
21:17 iyzsong:gtk主题是menta(mate)
21:17 condy:iyzsong: 两者这么像。。
21:17 condy:iyzsong: 怎么换gtk3的主题啊？
21:17 iyzsong:= =b
21:18 condy:iyzsong: lxappearance用过，不过不行。 把~/.config/gtk-3.0下的重新删掉再重建还是不行。。。
21:18 iyzsong:不行么.. https://wiki.archlinux.org/index.php/GTK+#GTK.2B_3.x
21:20 Plough:http://imgs.xkcd.com/comics/cryogenics.pnghttp://imgs.xkcd.com/comics/cryogenics.png
21:20 condy:iyzsong: 还是不行。。。
21:21 iyzsong:2333
21:25 condy:iyzsong: 有没有装local/gnome-themes-standard这个包？
21:25 iyzsong:装了
21:25 sleepwalking joined channel
21:26 iyzsong:sleepwalking: 晚上好
21:31 sleepwalking:困。。
21:32 condy:一大波禽兽，我在aMule里搜了下miku,然后一片AV。。。
21:32 iyzsong:- -b
21:35 sleepwalking:- -p
21:36 sleepwalking:q- -p
21:38 Plough:还真是
21:40 hope1 joined channel
21:42 Plough:http://imgs.xkcd.com/comics/the_mother_of_all_suspicious_files.png
21:45 iyzsong:黑lisp..
21:51 Plough:http://imgs.xkcd.com/comics/fight_club.png
21:52 iyzsong:不懂
21:54 Plough:http://imgs.xkcd.com/comics/cell_phones.png
21:55 xia joined channel
21:55 iyzsong:- -
21:56 lh_mouse:0.0
21:56 lh_mouse:o.O
22:4 hope1:Plough, 这链接有效吗？
22:4 lh_mouse:有
22:5 hope1:http://imgs.xkcd.com/comics/the_mother_of_all_suspicious_files.png 这个
22:5 lh_mouse:是的
22:5 Plough:有啊
22:6 lh_mouse:为什么会有人不知道 C 语言的函数是不需要声明的……
22:6 cleamoon:啊？
22:7 hope1:https://65.222.202.53/~TILDE/PUB/CIA-BIN/ETC/INIT.DLL?FILE=__AUTOEXEC.BAT.MY%20OSX%20DOCUMENTS-INSTALL.EXE.RAR.INI.TAR.DOÇX.PHPHPHP.XHTML.TML.XTL.TXXT.0DAY.HACK.ERS_(1995)_BLURAY_CAM-XVID.EXE.TAR.[SCR].LISP.MSI.LNK.ZDA.GNN.WRBT.OBJ.O.H.SWF.DPKG.APP.ZIP.TAR.TAR.CO.GZ.A.OUT.EXE
22:7 Plough:你说这个啊……
22:7 iyzsong:>.<
22:7 iyzsong:考据党
22:7 Plough:这个应该没用
22:7 Plough:只是个漫画而已
22:8 hope1:65.222.202.53是NSA的
22:8 cleamoon:噗
22:8 iyzsong:orz
22:8 hope1:http://blog.dynamoo.com/2013/08/torsploit-is-6522220253-nsa.html
22:8 cleamoon:果然是the mother of all suspicious files
22:26 T3rmin4t0r:漫展返图：http://tieba.baidu.com/p/3019078068
22:28 iyzsong:FFF最高!
22:30 cleamoon:果然不愧是抬头杀
22:30 condy:loli....
22:30 cleamoon:面码可怕死了
22:30 condy:#15不错啊！！
22:31 cleamoon:#18左边还好
22:31 cleamoon:恶心死了
22:32 OO_after joined channel
22:34 hope1:千人工程？
22:36 OO_after joined channel
22:41 xia joined channel
22:47 xia:于是就喜闻乐见得把自己的桌面系统搞坏了= =
22:48 xia:一打开xmonad桌面就只剩下个鼠标了。。。
22:48 iyzsong:xia: Alt+Shift+Enter, man xmonad..
22:49 xia:= =不是这个问题，我是直接就黑屏了。。。按什么都没有反应
22:49 xia:估计我以前装显卡驱动的时候留下的后遗症。。。
22:50 cleamoon:xmonad支持非平铺吗？
22:50 iyzsong:默认就是黑屏的..
22:50 cleamoon:默认就是黑屏
22:50 cleamoon:有鼠标就对了
22:50 iyzsong:float支持比较差
22:50 xia:额。。。？就是什么东西都没有吗
22:50 condy_ joined channel
22:50 iyzsong:xia: 嗯 ^.^
22:50 cleamoon:有那个模式，可以改窗口大小就行了
22:50 xia:= =我再试试看
22:51 iyzsong:有
22:53 xia joined channel
22:53 xia:success!!
22:53 xia:But how can I print Chinese...
22:53 cleamoon:iyzsong, 分享一下配置文件
22:53 phone_lhanjian:我一直在想现在学校电信网络这么恶劣，是不是因为网盘完蛋导致
22:54 iyzsong:https://github.com/iyzsong/_/blob/master/xmonad/xmonad.hs
22:54 iyzsong:dvorak键盘布局..
22:54 cleamoon:多谢
22:55 hope1:why use dvorak?
22:56 iyzsong:曾被坑了 之后就不能回来了..
22:56 cleamoon:http://bbs.xunlei.com/forum.php?mod=viewthread&tid=354621&page=1#pid1745090
22:57 hope1:您好，目前国家开展”净网2014”专项行动，如搜索的资源属于涉及版权争议或国家不允许公映的影片和资料，【将无法正常下载和播放使用】。 
22:57 hope1:而不是删除？
22:58 cleamoon:也就是说不正常的下载方式可以下载？
22:59 iyzsong:目前..
23:0 phone_lhanjian:还好，会补档的老司机都是雷锋
23:0 xia joined channel
23:0 phone_lhanjian:应该说不会要求迅雷和百度删除资源，这么干损失太大
23:1 cleamoon:毕竟他们自己还要下
23:1 iyzsong:= =b
23:1 phone_lhanjian:绅士，你戳中了盲点
23:3 phone_lhanjian:国家帮我戒撸，网站帮我脱宅
23:3 cleamoon:我觉得如果国内突然完全下不了软件和电影了，gdp至少降10%
23:3 phone_lhanjian:cleamoon: 至少CPI隐形大涨。
23:3 phone_lhanjian:大大提高了生活成本
23:3 cleamoon:一个后果...
23:5 *phone_lhanjian 还是支持FF29
23:6 xia joined channel
23:8 hope1:https://addons.mozilla.org/en-us/firefox/addon/google-no-tracking-url/
23:10 cleamoon:试试xmonad
23:11 iyzsong:GL
23:13 xxxxxxxxx:xmonad – dwm clone in haskell suckless.org 这么说
23:14 iyzsong:扩展比较多 => http://xmonad.org/xmonad-docs/xmonad-contrib/
23:14 cleamoon joined channel
23:15 cleamoon joined channel
23:18 cleamoon:还需要段磨合期
23:18 cleamoon:不过看起来不错
23:24 iyzsong:2333
23:25 cleamoon:红色框不好看
23:26 hope1:反正可以改
23:26 cleamoon:+
23:27 xxxxxxxxx:能不改我反正尽量不改
23:31 T3rmin4t0r joined channel
23:34 hope1:改了会暴露些什么？
23:34 xxxxxxxxx:改了丢了会觉得可惜
23:35 hope1:配置当然要备份（虽然我也没备份）
23:36 phone_lhanjian:,233
23:38 phone_lhanjian:玩会儿坦克大战
23:39 iyzsong:去玩魂斗罗3吧..
23:39 phone_lhanjian:玩通关就腻了
23:39 cleamoon:玩以撒吧
23:40 phone_lhanjian:。。。
23:41 cleamoon:wine以撒的win版都比linux版快，那个linux版完全就是一个包装了的flash
23:42 xxxxxxxxx:我得提醒你win版也是flash的
23:42 cleamoon:最新的不是
23:43 cleamoon:我记得这个好象还是你和我说的呢...
23:43 hope1:玩了1小时nethack....
23:43 cleamoon:....
23:44 xxxxxxxxx:印象中听过说新版本制作了原生而非flash版 但是我感觉已经没啥可玩的了
23:44 cleamoon:我还没拿到伟大的d6呢...
23:45 xxxxxxxxx:以撒吃个重生十字架然后在最后故意死一次就行了
23:45 xxxxxxxxx:我玩的时候就这么解锁的
23:46 cleamoon:三格命打不过？？？
23:46 xxxxxxxxx:你在说啥?
23:47 cleamoon:我唯一一次打过是修女+心+圣饼
23:47 cleamoon:不是要求用？？？打过？？？吗
23:48 xxxxxxxxx:蓝心毕竟少 以撒重生十字架最后一关打boss的时候死一次重生为小蓝人 然后过了就行了
23:48 cleamoon:重生完了不是只有3格蓝心吗...
23:49 xxxxxxxxx:吃的加血上限的我印象中是会变成蓝心的吧
23:49 cleamoon:soga
23:49 cleamoon:那还有可能
23:49 cleamoon:要不就得考启示录了...
23:51 xxxxxxxxx:还有个解除伤害的被动道具 和一个无敌的主动道具 攻击够高boss直接撞都能撞死
23:51 xxxxxxxxx:不过这个通常是发生在解锁d6之后
23:51 cleamoon:我赢？？？的无敌套装那次攻击是1...
23:54 cleamoon:iyzsong, 怎么mod-p和mod-shift-p都没反应....
23:58 xxxxxxxxx:http://pan.baidu.com/wap/link?shareid=696753473&uk=2097597150&third=0&dir=%2Flinux%E9%95%9C%E5%83%8F%2Flinux%E6%B8%B8%E6%88%8F%2FDon%27t%20Starve 
23:58 iyzsong:cleamoon: pacman -S dmenu
23:59 cleamoon:........
23:59 iyzsong:o.o
