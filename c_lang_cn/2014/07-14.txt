00:00: xxxxxxxxx: 一股要砍的感觉吓尿了
00:01: cleamoon__: 砍之前谁会叫唤
00:02: alpazuma: 猪
00:02: cleamoon__: 噗
00:07: cleamoon__: 似乎是个逗逼四处喷另一个逗逼的事
00:10: alpazuma: 2333
00:16: xxxxxxxxx: 闪灵那个小说里到底是什么样的?
00:17: cleamoon__: 电影看过，没看过小说
00:17: alpazuma: 电影好看吗
00:17: lh_mouse joined channel
00:17: cleamoon__: 还好
00:17: xxxxxxxxx: 电影搞不清到底怎么回事
00:18: lh_mouse: 起床
00:18: lh_mouse: 先洗个澡去
00:18: lh_mouse: 今天早晨六点起来陪 ⑨chu 去逛漫展 困死了
00:18: cleamoon__: 噗
00:18: cleamoon__: 现充耗子
00:19: xxxxxxxxx: 然后顺势就找了个旅馆之类的?
00:19: alpazuma: 然后在漫展上找了个厕所
00:19: cleamoon__: 在漫展上招了个台子
00:20: xxxxxxxxx: 羊驼看过小说?
00:20: alpazuma: 没
00:20: alpazuma: 我是慕名问问
00:21: lh_mouse: 找旅馆作甚
00:22: alpazuma: @基佬们的大和号
00:23: lh_mouse: kon'nitiwa sekaizyuunominasan
00:24: lh_mouse: 洗澡澡去了
00:28: alpazuma: 小赌十一发，出了门46炮
00:38: lh_mouse: 回来了
00:40: alpazuma: 水耗子
00:41: cleamoon__: 水耗子233
00:41: * lh_mouse kicks alpazuma in the ass.
00:42: cleamoon__: 不应该是fa*ks alpazuma in the ass吗
00:44: alpazuma: 小耗那尺寸也就在我手上变平
00:54: alpazuma: http://acgspace.wsfun.com/kancolle/src/1405267787467.jpg
00:55: alpazuma: ^ 58：提督～蜜月旅行去哪啊～ 提督：2-3 58：离婚吧
00:55: alpazuma: 各洲提督都用潜艇在2-3偷油，动辄大破
00:56: lh_mouse quit:Read error: Connection reset by peer
01:02: condy quit:Quit: leaving
01:04: lh_mouse joined channel
01:11: FrankHB: 背景这幅KDE默认桌面即视感是怎么回事……
01:11: alpazuma: 突然想到个词：大月氏
01:11: alpazuma: FrankHB: 爆
01:30: cleamoon__: 至今为止四处布道linux从未成功过
01:41: lh_mouse: 渣 linux
01:47: alpazuma: 逻辑：我是精锐，不满足我需求的是渣，同时我们需要把95%无脑用户也考虑进来，因为精锐太少了看上去没说服力
01:48: lh_mouse: 比那严重得多
01:48: alpazuma: 我就是黑一下论证渣不渣的典型论证方式
01:49: alpazuma: 每当两方精锐部分僵持不下的时候，就会有些作战人员试图引入大批杂鱼
01:50: cleamoon__: 自己喜欢什么用什么，但不要被别人用什么和以前用什么所束缚就好了
01:50: alpazuma: 这个很难，总有人希望统一观点
01:50: cleamoon__: 统一观点：all suck
01:51: alpazuma: 而现在又没法说统一观点到底好不好，或者把这些反对持不同意见的持不同意见者全都干掉
01:52: cleamoon__: 搞虚拟机就好了，别直接弄在硬件上
01:53: alpazuma: 解决不了的
01:53: alpazuma: 统一系统，统一接口，统一语义
01:53: alpazuma: 各种各样的地方都有需要统一的，而不少时候还真不是不对
01:53: cleamoon__: 算了吧
01:54: alpazuma: 当然也有些时候是聪明人拿蠢蛋当挡箭牌推销观点
01:54: alpazuma: 至于推销linux, 我个人觉得不可行
01:54: cleamoon__: 这种统一要求这个一有很好的设计，要不就是一起死
01:54: alpazuma: 我自认为现在我用着linux就是住在一个工棚上，日常接个三相电
01:55: cleamoon__: 我就是觉得那些每天就是刷人人和微博的被盗号后为什么还在装几个杀毒软件
01:56: cleamoon__: 还有人装两个
01:57: alpazuma: 装两个大概有特定需求？
01:57: alpazuma: 我听说AV这玩意也有专长差别
01:58: cleamoon__: 连自己用的是xp还是vista还是7都不知道的能有多少需求
01:58: alpazuma: 哦，那就是乱来
01:58: alpazuma: http://picpaste.com/result4-LoMDfypT.jpg # 俄式
01:59: alpazuma: ^ 提供了an-94结果ammo项里没有5.45x39子弹是什么状况
02:22: lh_mouse: 艹  没有 automake 编译真他妈的慢
02:23: lh_mouse: 将就下吧
02:23: lh_mouse: 妈蛋  为何 autocrap .o 和源文件是塞一个目录下面的
02:24: FrankHB: 不需要统一系统。具体系统是建筑在接口语义上的具体实现。
02:24: lh_mouse: AC_CHECK_HEADER_STDBOOL
02:25: lh_mouse: AC_C_RESTRICT
02:25: lh_mouse: AC_TYPE_SIZE_T
02:25: lh_mouse: AC_TYPE_UINT64_T
02:25: lh_mouse: AC_CHECK_TYPES([ptrdiff_t])
02:25: lh_mouse: 草泥马  这是什么乱七八糟的东西
02:25: FrankHB: lh_mouse: 你被逼的艹autocrap了？
02:25: lh_mouse: FrankHB, 临时解决方案
02:25: FrankHB: lh_mouse: nano-win？
02:25: lh_mouse: 我开了个目录把 autocrap 塞里面
02:25: lh_mouse: 不是
02:25: FrankHB: 233
02:25: lh_mouse: 那个不用 autocrap
02:25: lh_mouse: 那个 configure 是写好的
02:25: FrankHB: 你在艹啥。
02:26: lh_mouse: mcfbuild 0.4
02:26: FrankHB: 没autogen？
02:26: FrankHB: 233
02:26: FrankHB: mcfbuild干嘛鸟autocrap。
02:26: lh_mouse: 没有蛋之前……
02:26: FrankHB: 这种东西如果不是打算包装就不应该依赖。
02:26: lh_mouse: 艹  'autoreconf' 不是内部或外部命令，也不是可运行的程序
02:26: lh_mouse: 或批处理文件。
02:26: FrankHB: 硬编码自举一个stage就行了。
02:27: FrankHB: 先连源文件一起全部写死，然后静态链接到stage1，再重新编译一遍自己。
02:28: FrankHB: 反正我这里最简单的东西就只依赖g++（文件系统+链接器什么的余略），make什么的统统无视。sh是偷懒。
02:28: lh_mouse: 没增量编译……
02:29: FrankHB: stage1要什么增量。
02:29: FrankHB: 早知道得重复发明make，加上这类破事，所以一开始就只依赖标准库+系统库。（FreeType+FreeImage非必要。）
02:30: lh_mouse: 没增量开发蛋疼死
02:30: FrankHB: 然后硬编码自举还是已经实现了。功能当然是烂了点，可以以后改。
02:30: lh_mouse: 哦艹  我为什么不直接把 mcfbuild 0.3 拿来
02:30: lh_mouse: 二了
02:30: FrankHB: 233
02:31: FrankHB: mcfbuild能直接当dll调用么。
02:32: lh_mouse: 不能
02:32: lh_mouse: 你想要这功能么
02:32: FrankHB: 我是要自己实现。
02:32: FrankHB: 看看能不能抄。
02:32: lh_mouse: 抄哪部分
02:33: lh_mouse: 增量编译还是 DLL
02:33: FrankHB: 整个。你这里依赖环境太恶劣不好直接拿来用。
02:33: lh_mouse: 之前是这样的  之前那个版本就是临时解决方案
02:33: lh_mouse: 所以我才会重写
02:33: FrankHB: 要换个系统你这样折腾起来就麻烦了。依赖数量太多还没兼容层。
02:33: FrankHB: 这边先得撸个build system然后得撸个shell和package mgr。其它就没多大意思了。等到Clang++靠谱就能让GNU彻底见鬼去了。
02:34: lh_mouse: gcc 预编译头太烂
02:34: FrankHB: 不用那玩意儿
02:34: lh_mouse: vc 预编译头目测提速 60% 以上
02:34: lh_mouse: gcc 掐表测 25%
02:34: FrankHB: NTFS性能太烂。
02:34: lh_mouse: 有效果 但是太不明显
02:34: lh_mouse: 不是  只是编译速度
02:34: FrankHB: 太dt了，整体提升效率还是ccache什么的好了。
02:35: lh_mouse: FrankHB, 你想移植到什么东西上去么比如 ARM
02:35: FrankHB: 有替代就干脆让gcc滚粗。
02:35: lh_mouse: 要是没这需求我觉得 windows native 没啥问题
02:35: lh_mouse: 哦  那个啊
02:35: lh_mouse: 我看看用了什么 gcc specific
02:35: FrankHB: lh_mouse: 为任意未知环境减小工作量。
02:36: lh_mouse: 最多支持下 clang++   不过我感觉这两个编译器扩展差不多
02:36: FrankHB: 简单来说就是抢GNU的饭碗。
02:36: lh_mouse: vc 什么的不打算支持了
02:36: FrankHB: clang++本来就是尽量兼容旧前端设计出来的。
02:36: FrankHB: vc是疼。
02:36: lh_mouse: https://github.com/lhmouse/MCF/blob/master/MCFBuild%200.4%20(incomplete)/libmcflite.lst
02:36: FrankHB: lh_mouse: windows native已经够肥了，不爽。
02:37: lh_mouse: 现在这情况就是 debug 版 gdb 挂上就崩
02:37: lh_mouse: gdb 渣渣
02:37: FrankHB: 对Windows本身不爽的除了文件系统主要是Win32的一大坨接口以及功能残废。NT还是能用的。
02:37: lh_mouse: 你只说 NT 可能指的是内核
02:37: FrankHB: 不过M$就没把NT接口普及到给你日用……
02:38: lh_mouse: 就像说 linux 其实也指内核一样
02:38: lh_mouse: NT 接口是暴露的（r3 可用）
02:38: FrankHB: 对，就内核以下我觉得还行。子系统可能概念上还不错，实现嘛……
02:38: FrankHB: 再上面就各种抽搐了。。。
02:38: lh_mouse: 翻翻文档应该可以直接用
02:38: FrankHB: 哦，反斜杠路径某种意义上是从内核开始就反人类的，不过限制在内核层次上问题不大。
02:38: lh_mouse: 内核那种东西 M$ 不敢打马虎眼的
02:39: FrankHB: \/混用抽风API真是无语……
02:39: lh_mouse: 不是的  内核上两种都认识
02:39: FrankHB: 底层直接认成\了吧。
02:39: lh_mouse: kernel32 有一个函数把路径转换为绝对路径的   他有这个功能
02:39: lh_mouse: 是转成 \
02:40: lh_mouse: 但是 / 也认识
02:40: FrankHB: 总之也不会有些认\/有些只认\吧……
02:40: lh_mouse: 印象里  确实有
02:40: FrankHB: 不管怎么说这里比*NIX dt多了……刚好跟C-like的转义序列冲突实用实在不爽。
02:41: lh_mouse: 记不太清了
02:41: FrankHB: ...
02:41: lh_mouse: 倒杯水去
02:41: FrankHB: NtXXXX这样好像都没见过……
02:42: lh_mouse: 那个应该不会有
02:42: FrankHB: 嘛，内核什么的暂时没意见了。虽然按王♂根说的地址空间隔离什么的迟早是问题，不过userland的workaround多得是。
02:43: FrankHB: ……已经是问题的了（比如跨进程GC不方便有效共享浪费的空间）看来也没我什么事。
02:43: lh_mouse: nt 的内核比 linux 内核合理
02:44: FrankHB: *NIX的内核接口只是【能用】。
02:44: lh_mouse: 就现在操作系统来说面临的问题是蓄意破坏
02:44: lh_mouse: linux 那种宏内核随便写写恶意驱动就能搞死
02:44: lh_mouse: nt 这种 _理论上_ 是可以避免的
02:45: alpazuma: 合理是什么意思
02:46: FrankHB: 这坨轮子造全倒是能吹是“自主知识产权”的“系统”了……
02:46: alpazuma: 感觉又要转入宏内核对混合内核的不清楚对比了
02:46: cleamoon__: 0_0
02:47: alpazuma: 同时还可能牵扯一点部署方面的考虑
02:47: FrankHB: ……理想来说，有HAL就够了。上面不管需要什么，只要我用得着的就撸给你看。
02:47: alpazuma: exokern
02:47: FrankHB: 实际是我没那么空……
02:48: alpazuma: 过分理想疼得要死
02:48: alpazuma: MIT自己都没搞下去
02:48: FrankHB: 所以相对实际的就是内核问题放置play。
02:48: FrankHB: 结果这样好像就变成踹开GNU运动了。（反正编译器估计能有现成的。）
02:48: alpazuma: 而LK vs. NT单纯谈内核架构还是笑话，这两个都是历史话题
02:49: alpazuma: 哪一方也没什么自己的架构
02:49: lh_mouse: 狗咬狗
02:49: lh_mouse: 管你什么 j8 内核给我个能用的就行
02:49: FrankHB: 反正现在谁都是C的余孽，一团和气……
02:50: alpazuma: lh_mouse+
02:50: lh_mouse: NT 内核 int 2E 和 sysenter 到底什么区别我还是不懂
02:50: lh_mouse: linux 据说还是 int 0x80
02:50: alpazuma: 是
02:50: lh_mouse: NT 大概 XP SP2 以后全是 sysenter
02:51: lh_mouse: 旧版 system call 是   mov eax, FUNCTION, lea edx, [esp + 8]   int 0x2E
02:51: lh_mouse: 新版就是  mov edx, esp   sysenter
02:51: lh_mouse: 估计会有好处吧  他函数名字叫 KiFastSysCall
02:52: lh_mouse: KiFastSystemCall*
02:52: lh_mouse: 反观 linux
02:53: lh_mouse: linux 内核刚出来就被吐槽严重依赖 x86
02:53: lh_mouse: 结果现在走到相反的路线去了
02:53: lh_mouse: 完全标榜跨平台了
02:53: FrankHB: 一开始就是i386上的玩具吧。
02:53: lh_mouse: 是玩具是真的
02:53: alpazuma: linux一开始是面向i386的
02:54: lh_mouse: i386 渣渣
02:54: FrankHB: i386已经给扔了……
02:54: lh_mouse: 坑大破事多
02:54: alpazuma: 那时代的替代品呢
02:54: lh_mouse: 91 年不是 MIPS 最火的时候么
02:54: cleamoon__: 看来这个cs界就是个历史遗留问题
02:55: FrankHB: M$: i286渣渣。
02:55: lh_mouse: 85 年出的 MIPS 和 ARM
02:55: lh_mouse: MIPS 已死  ARM 火了
02:55: alpazuma: i386的保护模式各种坑是真的
02:55: alpazuma: 到了64一通扔还没扔完
02:55: FrankHB: 那时候整得这种兼容性干嘛。
02:55: lh_mouse: 段寄存器啥的
02:56: alpazuma: 噗
02:56: alpazuma: 我搞错了
02:56: FrankHB: IA-64早点出来搞不好都不会死了。
02:56: alpazuma: 现在的LK也开始用sysenter
02:56: lh_mouse: ia64 自己搞的坑多
02:56: lh_mouse: 硬件上完全没互斥
02:56: lh_mouse: 所以很多东西依赖编译器
02:56: alpazuma: LK 2.6以降
02:57: lh_mouse: 我记得 2.6 是 int 0x80 吧   我还用反汇编调过  debian 6
02:57: lh_mouse: 批处理能不能多进程编译的
02:58: lh_mouse: 即使没增量多进程可能也好点
02:58: alpazuma: http://kerneltrap.org/node/view/531/1996
02:58: alpazuma: 具体实现debian可能用了旧的glibc
03:02: lh_mouse: FrankHB, libstdc++ 有 -MMD -MF 这命令行么
03:02: lh_mouse: 不是 
03:02: lh_mouse: clang++
03:02: lh_mouse: 手贱……
03:06: FrankHB: 貌似有吧。
03:06: FrankHB: 很多makefile都用到的。
03:06: cleamoon__: 我去，德国传球，裁判踢出去了，然后阿根廷的边球...
03:07: alpazuma: ...
03:07: alpazuma: 裁判是什么现象
03:08: cleamoon__: 谁知道...
03:09: alpazuma: H.B.Flankoi 我在考虑这次要不要整场跪着看。
03:10: cleamoon__: 反正她也站不起来
03:10: cleamoon__: arm再快点就好了
03:10: alpazuma: 我可以爆着她看啊
03:11: lh_mouse: echo g+f*+ | grep -E g(\+\+\|cc)   这个有问题么
03:11: cleamoon__: 你这连一个伤停补时都撑不了的
03:12: lh_mouse: $ echo g+f*+ | grep -E g\(\+\+\|cc\)
03:12: lh_mouse: g+f*+
03:13: alpazuma: [varna@shiki p7]$ echo g+f*+ | grep -E g\(\+\+\|cc\)
03:13: alpazuma: g+f*+
03:13: lh_mouse: 错了吧
03:13: lh_mouse: g(++|cc) 怎么匹配的
03:13: alpazuma: 我不用grep只用perl
03:13: lh_mouse: -P 就是
03:14: alpazuma: 你要匹配什么
03:14: lh_mouse: 擦
03:14: alpazuma: -P不如perl原生
03:14: lh_mouse: 我明白了
03:14: alpazuma: 你输出了被匹配行？
03:14: lh_mouse: alpazuma, 不  只要退出码
03:15: alpazuma: soga
03:15: lh_mouse: $ echo gcc | grep -P g\(\\+\\+\|cc\)
03:15: lh_mouse: gcc
03:16: alpazuma: 匹配g++或者gcc啊
03:16: lh_mouse: 是啊
03:16: alpazuma: 疼
03:20: lh_mouse: 艹   grep: invalid UTF-8 byte sequence in input
03:21: lh_mouse: 渣渣 win console 用什么 code page
03:23: alpazuma: 23333
03:23: alpazuma: 想当年haskell我不开LANG=C就不给过
03:24: FrankHB: 23333
03:24: FrankHB: 不过现在LANG=zh_CN还是很多./configure会抽……
03:25: cleamoon__: LANG还有影响？
03:25: lh_mouse: alpazuma, linux 有什么命令是把标准输出的第一行丢掉的
03:25: alpazuma: 没试过
03:25: alpazuma: 输出很长么
03:26: lh_mouse: 第一行是中文……
03:26: lh_mouse: 其实第一行是表头
03:28: alpazuma: 我还是只会perl解法2333
03:29: lh_mouse: done
03:29: lh_mouse: http://stackoverflow.com/questions/7318497/omitting-the-first-line-from-any-linux-command-output
03:29: lh_mouse: sed -n '1!p'
03:29: alpazuma: awk '{if(NR > 1){print $0 } }' 
03:29: alpazuma: sed...
03:30: alpazuma: 最后又是这两个怪物
03:30: cleamoon__: 激动的跑了几十米，发现越位了233
03:31: alpazuma: 真越位了？
03:31: cleamoon__: 真越位了
03:31: alpazuma: 噗
03:31: cleamoon__: 噗，意大利裁判
03:34: whocares_2 joined channel
03:34: cleamoon__: 意大利二战除了叛变做了任何正事吗？
03:35: lh_mouse: 艹  各种杂糅货
03:35: lh_mouse: :wait2
03:35: lh_mouse: 	sleep 1
03:35: lh_mouse: 	tasklist /fo csv | sed -n 1!p | grep -P """cc1(plus)?.exe""" >nul 2>nul
03:35: lh_mouse: 	if not errorlevel 1 goto wait2
03:35: lh_mouse: 奇葩物
03:40: cleamoon__: 德国要悬
03:41: alpazuma: 阿根廷要反击了？
03:41: cleamoon__: 是德国快没机会反击了
03:42: cleamoon__: 德国都开始用搏击了，已经两张黄牌了
03:42: alpazuma: 噗
03:42: alpazuma: 用少先队员之惩戒啊
03:43: cleamoon__: 为什么元首国没研制发动机呢
03:43: alpazuma: 他们土豆吃多了
03:44: alpazuma: 元首国留学回来的伙计表示简直是土豆的海洋
03:45: lh_mouse: 魔兽世界吧那个预言帖呢
03:45: cleamoon__: 那倒是真的...
03:46: cleamoon__: 那元首用的什么发动机...
03:46: lh_mouse: http://tieba.baidu.com/p/947894760
03:47: cleamoon__: f*ck, 打门柱上了
03:48: cleamoon__: 顺便，f*ck边裁，两次了，球的行进路线上有个德国队员，然后就算越位了
03:50: alpazuma: 复习一下吧 http://www.tudou.com/programs/view/sCS7pIS0djE/
03:52: cleamoon__: 原来元首的发动机还是很屌的，只不过输了后别人嫉妒其大屌被阉了
03:56: cleamoon__: 看起来像霓虹的生化科技
03:56: cleamoon__: 噗，看到球场外观我就想扔核弹砸一下...
03:59: alpazuma: H.B.Flankoi 跪了47分钟，休息一下接着跪……
03:59: alpazuma: 真跪了啊……
03:59: cleamoon__: 那种人来疯做什么都不新鲜...
04:00: alpazuma: 做爱就新鲜了
04:01: cleamoon__: 不新鲜，她的本源就是充气娃娃
04:01: alpazuma: 日常更新了，继续赌烈风
04:08: alpazuma: 恋恋可以充气的？
04:08: cleamoon__: 可以
04:09: alpazuma: 噗呼呼
04:11: cleamoon__: 擦，老照那个耶稣像干什么
04:13: alpazuma: 春哥纯爷们
04:13: alpazuma: 噗，恋恋在磕头
04:18: cleamoon__: 德国门将对对方前锋头部使出了膝击，然后他得到了任意球
04:18: alpazuma: 噗
04:18: xxxxxxxxx: 有个叫csplit的东西在男人页里提到Create an output file containing the input up to but not including line N (a positive integer).
04:21: alpazuma: 为什么我的没有
04:22: alpazuma: 啊有了
04:22: alpazuma:        INTEGER
04:22: alpazuma:               copy up to but not including specified line number
04:23: cleamoon__: 噗，解说说足球是一种搏击运动
04:24: xxxxxxxxx: 他们解说的SC2的那个足球吧...
04:25: cleamoon__: 阿根廷正在努力追上德国的黄牌
04:27: alpazuma: 改对打了啊&
04:27: alpazuma: ……
04:28: cleamoon__: 摔跤+跆拳道
04:29: cleamoon__: 啊，已经敌我不分地攻击了
04:29: cleamoon__: 啊，出现洪拳的招数了
04:30: alpazuma: 哈哈哈哈
04:30: alpazuma: 有没有会北斗神拳的
04:31: cleamoon__: 啊啊啊啊，差一点呀
04:31: cleamoon__: 早晚能看到友情破颜拳
04:31: alpazuma: 哪边射门了？
04:32: cleamoon__: 我去，德国为什么全传给观众，他们难道不知道场下的射门从门后过来不算吗
04:32: cleamoon__: 德国短传到空门，然后传给了阿的门将
04:32: alpazuma: 噗
04:33: alpazuma: 这什么奇妙线路
04:36: cleamoon__: 噗，解说：场上二十几个大汉子已经为了一个六公斤多的金块跑了七十多分钟了
04:37: alpazuma: 噗
04:37: alpazuma: 夏普何在
04:37: cleamoon__: 我去，为什么把一个进了一个越位球的换下来了
04:38: alpazuma: 咕嘿？
04:39: cleamoon__: 本届一片神门将
04:39: alpazuma: 呜呼呼，晓酱给我带桶回来吧，我要出击……
04:40: cleamoon__: 啊啊啊啊，空门呀，不是球星你就不会题球呀
04:40: cleamoon__: 顺便，不是罗本就别玩假摔了
04:42: cleamoon__: 德国进攻越来越多了
04:43: cleamoon__: 我去，球迷冲下来了
04:43: alpazuma: 噗
04:43: cleamoon__: 根据FIFA的规定，这个不让播，于是，看看耶稣吧
04:44: alpazuma: 哈哈哈哈哈哈哈哈原来耶稣是这么回事啊
04:44: cleamoon__: 好了，继续了，几十个便衣和没便衣的解决了他们
04:44: alpazuma: 大快人心
04:44: alpazuma: 恋恋怎么不说话，跪晕了么
04:44: cleamoon__: 刚才是因为出界
04:45: cleamoon__: 恋恋到底支持谁呀...
04:47: alpazuma: 我啊
04:48: cleamoon__: 噗
04:48: cleamoon__: 我去，怎么德国也换下一个主力来
04:49: cleamoon__: 又开始照城市了，解说说放心，这次没来球迷，就是有人受伤照照城市而已
04:49: alpazuma: 耶稣呢
04:49: alpazuma: 我们要看安拉胡阿克巴
04:50: cleamoon__: 黑了，看不到了
04:50: alpazuma: 咕嘿
04:50: alpazuma: 现在还0-0？
04:51: cleamoon__: +
04:51: cleamoon__: 我去，瑞典解说坐在哪呀，怎么双方教练说的话都听得到
04:53: alpazuma: 有细作
04:53: xxxxxxxxx: http://teknopants.com/2011/05/shoot-first/ 这个好玩
04:53: xxxxxxxxx: 不知道能不能wine
04:53: cleamoon__: 结束了
04:54: alpazuma: 噗？
04:54: alpazuma: 谁进了
04:54: cleamoon__: xxxxxxxxx, 这什么画面... 感觉对眼睛不好
04:54: cleamoon__: 谁也没进
04:54: cleamoon__: 90分钟结束了
04:56: cleamoon__: 解说偏向略厉害，全都支持德国呀...
04:58: cleamoon__: 7W3k观众
05:04: cleamoon__: http://photo.fanfou.com/n0/0a/tx/wc_387202.jpg
05:06: cleamoon__: 啊啊啊，阿根廷差一点
05:11: cleamoon__: 友情破菊脚
05:13: cleamoon__: 双方都跑不动了
05:15: cleamoon__: 噗？第一次看到，裁判在四处发糖
05:19: cleamoon__: xxxxxxxxx, 基王在b站上看sc比赛吧
05:21: xxxxxxxxx: 没在看
05:21: cleamoon__: 之前
05:21: cleamoon__: 出现了！友情破颜拳
05:21: alpazuma: 噗
05:21: cleamoon__: 流血了
05:22: cleamoon__: 然后双方都用出了头锤
05:23: alpazuma: 什么状况
05:23: cleamoon__: 德国最重要主力被友情破颜拳了，然后下场缝合，现在继续
05:23: alpazuma: 我嚓
05:23: alpazuma: 怎么就打起来了
05:24: cleamoon__: 复活了
05:24: cleamoon__: 没打起来
05:24: cleamoon__: 连牌都没给
05:24: cleamoon__: 我擦
05:25: cleamoon__: 这裁判找死
05:25: cleamoon__: 明显黄牌的情况都不吹了
05:25: cleamoon__: 进了！！！！
05:25: cleamoon__: 进了！！！！
05:25: alpazuma: 谁
05:25: cleamoon__: 进了！！！！
05:25: cleamoon__: 德国
05:25: alpazuma: 噗
05:25: alpazuma: 结束了
05:25: alpazuma: 估计没时间了吧
05:25: cleamoon__: 还有最多10min
05:25: alpazuma: 果然折腾了
05:26: cleamoon__: 噗，瑞典解说好记仇，射门的就是上上次世界杯把瑞典送走的那个
05:28: alpazuma: 2333
05:28: alpazuma: 记性不错
05:29: cleamoon__: 我去，抬脚过高就任意球，友情破颜拳都不吹
05:30: cleamoon__: 赢了也要把裁判打一顿
05:30: alpazuma: 打裁判了？
05:30: cleamoon__: 没有
05:30: alpazuma: 这次裁判不是倾向德国么？
05:30: cleamoon__: 我觉得没有
05:30: alpazuma: soga
05:31: alpazuma: 岚月酱看过这个没 http://www.nocow.cn/index.php/RP%E5MondayFJulyC%E8MondayEJulyA
05:32: cleamoon__: 没有...
05:32: cleamoon__: 德国换人了！
05:33: alpazuma: 咕！？
05:33: cleamoon__: 还有一分半
05:33: cleamoon__: 阿根廷任意球！
05:34: alpazuma: 噗
05:34: alpazuma: 快进球
05:34: cleamoon__: 估计最后一次进攻了
05:34: alpazuma: 我要文字围观点球大战
05:34: cleamoon__: 点球也就文字围观...
05:35: cleamoon__: 啊啊啊啊啊
05:35: cleamoon__: 踢高啦！
05:36: cleamoon__: 毛都没打着
05:36: alpazuma: 噗噗
05:36: cleamoon__: 吹了！！！
05:36: cleamoon__: 吹了！！！
05:36: cleamoon__: 结束了！
05:37: alpazuma: 德国赢了？
05:37: alpazuma: 幸好我没在宿舍
05:38: alpazuma: 不然对面那些说话都口齿不清的土鳖能逗死
05:38: cleamoon__: why？
05:39: alpazuma: 有个傻逼以三秒钟左右的间隔，带湖南腔还咬不准音的普通话连发「我操你妈」
05:39: alpazuma: 还有个大舌头傻逼常年狂呼乱吼，我也不知道他在说些什么，感觉跟被浇了开水一样
05:40: cleamoon__: 23333
05:41: lh_mouse: https://github.com/lhmouse/MCF/blob/master/MCFBuild%200.4%20(incomplete)/MCFBuild.mcfproj
05:41: lh_mouse: 改版  大换血
05:41: cleamoon__: 德国这次赢的毫无问题，他们是踢得最努力的了
05:42: cleamoon__: 不明白为什么连自动编译这种事gcc都做不到...
05:42: alpazuma: 自动编译？
05:43: alpazuma: c系的库依赖本身就拿不出来
05:44: cleamoon__: 自动编译，自动找头文件之类的
05:44: alpazuma: 头文件又不是库
05:45: alpazuma: 我写一个#include <pthread.h>未必要求链接/usr某处的pthread
05:46: cleamoon__: 特殊情况有指令呀
05:46: cleamoon__: 大部分人会用pthread呀
05:46: alpazuma: 我觉得这只是设计者残了
05:46: alpazuma: c系的依赖不用拯救，没法救
05:46: alpazuma: 库的位置、版本、存在情况、使用形式都没法说
05:46: cleamoon__: 我觉得连编译都这么麻烦实在没法说
05:47: alpazuma: 本身把符号和编译单元分开就容易出这种问题
05:47: alpazuma: 接下来就是你是否打算走mikovm的老路了
05:47: cleamoon__: mikovm？
05:48: alpazuma: j
05:48: cleamoon__: ...这怎么变过去的
05:48: cleamoon__: qt编译简直痛苦
05:48: alpazuma: java吧的大吧神宫寺铃香被称为巫女巫女
05:49: alpazuma: 然后就这么变过来了
05:49: cleamoon__: .......
05:49: cleamoon__: 哦，miko，我以为neko呢...
05:50: alpazuma: 噗，兴奋的提督们开始赌俾斯麦，居然真出货了
05:52: cleamoon__: 啊啊，如果我这届世界杯赌球的话
05:52: cleamoon__: 我现在估计已经要搬家去桥底下了
05:53: xxxxxxxxx quit:Quit: Leaving...
05:53: alpazuma: 2333
05:54: alpazuma: 你不会赌巴西了吧
05:54: cleamoon__: 我肯定赌巴西呀...
05:54: alpazuma: 我嚓有个欧提在球场
05:54: cleamoon__: 所以不能读博
05:54: cleamoon__: 赌博......
05:55: lh_mouse: alpazuma, 求评价
05:55: lh_mouse: 这个东西 clang++ 应该也可以用
05:56: alpazuma: lh_mouse: 我一直不感冒你的DSL, 但看着确实比autocrap清爽太多
05:57: lh_mouse: 最近貌似没什么时间写  先坑着
05:57: lh_mouse: alpazuma, 没睡觉？
05:57: alpazuma: 没
05:58: alpazuma: 昨天时差没倒过来
05:59: cleamoon__: 昨天干什么了
05:59: alpazuma: 昨天收了会议的发票之后睡了一觉，睡过头了
06:00: cleamoon__: 和发票睡觉？
06:01: alpazuma: 电酱
06:01: cleamoon__: 那也就15s
06:01: alpazuma: 噗？
06:02: cleamoon__: 提督不都就15s
06:02: alpazuma: 那是志在岛风的提督
06:03: cleamoon__: 那你就只有3s了
06:03: alpazuma: 噗呼呼
06:03: cleamoon__: 多说2s你这么高兴呀
06:03: alpazuma: 我可是国足水准
06:03: cleamoon__: 进场前就软了？
06:03: cleamoon__: 那可是ed呀
06:03: alpazuma: 一个半小时不射
06:04: cleamoon__: 国足不是不射，是不进
06:04: alpazuma: 现在他们进步了啊
06:04: cleamoon__: 看来你确实听到过“你进去了？”
06:05: alpazuma: 岚月酱来试试吧
06:05: cleamoon__: 有猫了不需要
06:07: alpazuma: 猫什么颜色的
06:07: cleamoon__: 黑白
06:07: alpazuma: 鼻子软么
06:08: cleamoon__: 还好
06:08: alpazuma: 猫鼻子比肉垫之类的好玩多了
06:08: cleamoon__: 没觉得
06:08: alpazuma: ……鼻子爱好者太少
06:09: cleamoon__: 最好玩的是蹭头
06:10: alpazuma: 有个猫饿肚子之后会作揖
06:10: cleamoon__: 这个这猫不会
06:11: alpazuma: 给模鼻子就行
06:11: cleamoon__: 鼻子随便摸
06:11: cleamoon__: 她不太让摸菊花
06:11: alpazuma: 噗
06:12: alpazuma: 爆猫啊
06:12: cleamoon__: 爆猫
06:12: alpazuma: 尻部洗干净了？
06:12: lh_mouse: ⊙ω⊙
06:12: cleamoon__: 肯定没有
06:13: alpazuma: 噗
06:13: alpazuma: 岚月酱有便器爱好
06:14: cleamoon__: 我正在征集肉便器
06:14: alpazuma: 米库酱的群里不是有个药娘么
06:15: cleamoon__: 是miku？
06:15: alpazuma: 不是，还有一个
06:15: alpazuma: 据说已经开始买药
06:15: cleamoon__: 好的，给我来做肉便器吧
06:15: alpazuma: uccu, 钓你就上钩
06:16: alpazuma: 要不是我听了米库酱放出的那药娘唱歌怎么会推荐给你
06:16: cleamoon__: 上钩什么，我是要做头子的，不是要来啪啪啪的
06:16: alpazuma: 简直惨不忍睹有如药汉
06:16: cleamoon__: 噗
06:16: alpazuma: 这药娘似乎没认真学伪娘伪声教程
06:17: cleamoon__: 我可以变声唐老鸭，但是变不了娘了
06:18: cleamoon__: 那个很明显不管用吧...
06:18: alpazuma: 安一个米库替你说话好了
06:19: cleamoon__: 安一个miku好了
06:19: cleamoon__: miku出门卖，c酱归我
06:19: alpazuma: 瑞典卖器官的多么
06:20: cleamoon__: 木有
06:20: cleamoon__: 因为没什么正经市场
06:21: cleamoon__: 器官是默认全部捐献的，所以除了特殊的也不缺，特殊的也没几个卖的...
06:21: alpazuma: 我正考虑进口一点欧洲肝，造船运实在太差了
06:21: cleamoon__: 我可以给你寄一箱
06:21: alpazuma: 我猜是鱼罐头
06:21: cleamoon__: +
06:22: alpazuma: 简直发粪涂墙
06:22: cleamoon__: 发粪涂墙23333
06:22: cleamoon__: 寄那个挺麻烦的，似乎欧盟海关把那个列为生化武器
06:23: alpazuma: 我记得有不让运的
06:23: cleamoon__: 欧盟境内不允许进出口
06:23: cleamoon__: 外边不知道具体规则
06:24: cleamoon__: 所以会有喜欢猎奇的人来瑞典吃
06:24: cleamoon__: 然后他们就不喜欢猎奇了
06:25: alpazuma: 哈哈哈哈
06:25: alpazuma: 不如来中国吃臭豆腐，至少还能吃
06:25: cleamoon__: +
06:25: alpazuma: 我老母就好这口
06:26: cleamoon__: 老爸常吃臭豆腐，豆汁的物体，但是吃一口鱼吐了2天
06:26: alpazuma: 有次买来，我闻着也不甚臭，大概不是什么正宗方
06:26: cleamoon__: 不应该很臭
06:26: alpazuma: 不是该有重氨味么
06:26: cleamoon__: 正宗的不是大便做的吗
06:27: cleamoon__: 我没吃过
06:27: cleamoon__: 学校没买过
06:27: alpazuma: 学校居然有卖这个……
06:27: cleamoon__: 不是，是学校的午餐没进过这个...
06:27: cleamoon__: 怎么可能在学校卖生化武器...
06:28: alpazuma: H.B.Flankoi 简直茫然得不知道该干什么好。
06:28: alpazuma: ^ 揉道啊
06:29: cleamoon__: 去找她吧，这天70%+她会出门
06:29: alpazuma: 长春老大一地方……
06:29: cleamoon__: 公园呀
06:30: alpazuma: soga, 原来去公园啊
06:30: cleamoon__: 是呀
06:30: alpazuma: 去了之后怎么说呢
06:30: cleamoon__: 小区边上的那种，不大的，人们啪啪啪的地方
06:30: alpazuma: “恋恋我想舔腋请脱下上衣”
06:30: alpazuma: 这样的？
06:31: cleamoon__: “我来帮你抚平梅西的伤痛吧”
06:31: alpazuma: 太知音了
06:32: cleamoon__: 你那么说她只会往那里一躺，“你随便吧，就当我是充气娃娃好了”
06:32: alpazuma: 噗
06:32: alpazuma: 恋恋原来有这属性啊
06:32: alpazuma: 来源请求
06:32: cleamoon__: 恋恋不一直这样...
06:32: cleamoon__: 早了...
06:32: alpazuma: 不像是给艹类型啊……
06:33: cleamoon__: 有人向恋恋求婚，然后被恋恋无限嘲讽
06:33: alpazuma: 怎么求的
06:33: cleamoon__: 我怎么知道...
06:34: cleamoon__: 是网上的人，应该是发信吧
06:34: alpazuma: 他不会恰好长了两个肝想匀一个吧
06:34: cleamoon__: 那时恋恋还用旧肝
06:34: alpazuma: 我不求婚，我就求长期舔腋合作
06:35: cleamoon__: 恋恋是不在乎身体，只顾精神享受的倔强的傲娇
06:35: cleamoon__: 所以强上她都不会尝试跑
06:35: alpazuma: 哪里娇了？
06:36: alpazuma: 精神享受好办，朗诵一些Perl代码就可以了
06:36: cleamoon__: “我才不要你们担心我呢”，“送我礼品我一点都不高兴”
06:36: alpazuma: 噗
06:36: alpazuma: 教科书
06:36: cleamoon__: 然后让所有认识的人都知道她的手术日期和生日
06:37: cleamoon__: 还四处晒得到的礼物
06:37: alpazuma: 这是傲二
06:38: cleamoon__: ...那傲娇是什么
06:38: alpazuma: 念起来也方便，当手指被门夹的惨叫念出来就行了
06:38: alpazuma: 把晒礼物去掉
06:38: alpazuma: 教科书的傲娇都是偷着乐类型
06:39: cleamoon__: 她是想让人们都找那种根本没处买的东西，要不就给她钱
06:39: alpazuma: 她会放永夜返？
06:39: cleamoon__: 不是都晒，就晒她喜欢的，不喜欢的都不提得到了...
06:39: cleamoon__: 似乎不会
06:39: cleamoon__: 只会漂移
06:39: alpazuma: 那怎么能拿到没处买的东西
06:40: cleamoon__: 又不是她去买...
06:40: alpazuma: 车持皇子之类的也不是屁颠地跑去了……
06:42: cleamoon__: 经常犯病，“让所有人都讨厌我就好了”
06:42: cleamoon__: 听说某人送礼物，礼物放下后被哄出去了
06:42: alpazuma: 噗
06:43: cleamoon__: 真讨厌她的不少呢，比如我
06:43: alpazuma: 哈哈哈，一看德国赢了这帮人还在赌俾斯麦
06:43: cleamoon__: 噗
06:44: alpazuma: http://static.mengniang.org/common/2/2e/%E7MondayB%8B%E7JulyB%98_Bismarck_Zwei.png
06:44: alpazuma: ^ 这个样子的
06:45: cleamoon__: 这个不错
06:45: cleamoon__: 没裤子好评
06:46: alpazuma: 中破以上 http://static.mengniang.org/common/5/58/%E7MondayB%8B%E7JulyB%98_Bismarck_Zwei_%E7Monday0July4.png
06:47: alpazuma: 同画师画了尿凤
06:47: cleamoon__: 这个大好评
06:48: cleamoon__: 恋恋工作时是类似大胡子那种人，“我才掌握了世界的真理。此处不留爷，自有留爷处”
06:48: alpazuma: ...
06:51: alpazuma: 唉唉，下次出击应该能击破2-5，求给个大鲸
06:53: cleamoon__: 再找个不坑的网络挂机游戏吧...
06:53: cleamoon__: 修装备要钱太坑了
06:54: alpazuma: 你战网还卡么
06:54: cleamoon__: 比之前还卡
06:54: alpazuma: ...
06:54: alpazuma: 疼
06:57: cleamoon__: 对了，玩hacker.org的游戏吧
06:58: alpazuma: 那上面有什么？
06:58: alpazuma: 如果是编程游戏的话不如回去编程……
06:59: cleamoon__: challenge不错
06:59: cleamoon__: 确实是编程游戏...
06:59: alpazuma: 我还是自己写程序好了
07:01: cleamoon__: 比如：  Let's hear a whopper. Please calculate the 150000000th member of the Fibonacci sequence. Then take the natural log of that. Round your answer to three digits after the decimal point, please. (I.e., if you calc the log as 12345.4321212, then your answer would be 12345.432) 
07:01: alpazuma: http://tieba.baidu.com/p/3163590555
07:01: alpazuma: ...
07:02: alpazuma: 这种challenge类似的还有project euler
07:03: cleamoon__: 不光是这种
07:03: cleamoon__: project euler玩了一点
07:03: cleamoon__: 表示pe用c太坑了
07:04: cleamoon__: 还有这种： Challenge 'VIndicated' [Misc]
07:04: cleamoon__: it$aeihea siibea nahxpasriweA m2ao2aahielhxpanA114.
07:04: alpazuma: 解码……
07:09: cleamoon__: Challenge 'A Repeat of Pi' [Misc]
07:09: cleamoon__: In the first million digits, what's the longest repeated sequence? 
07:09: cleamoon__: 这该用什么算法...
07:11: alpazuma: 噗
07:12: alpazuma: IFS?
07:13: cleamoon__: 那是什么
07:13: alpazuma: Internet-First Search
07:13: cleamoon__: Challenge 'Latin Lesson' [Misc]
07:13: cleamoon__: lxxxivcicviiicviiixxxiicixcixxxiicxvicivcixxxiicxxcviicixcixxxiicxiciixxxiicxvicivcixxxiicixxcviicxxxxiicxixcivcxixxxiicxixcxivcxicxvicixxxiixxxivlxxxiicxicixxcviicxcvxxxiicvcxvicixxxiiccxicixcxviicixxxxivxxxiixlixxlviiixlviiixxxiicxvicvcixcicxvxlvi
07:14: cleamoon__: 那是毛...
07:14: alpazuma: cleamoon__: 上网搜……
07:15: cleamoon__: .......
07:15: alpazuma: 高中有个哥们做不出来题了，灵机一动提出了IFS算法
07:16: cleamoon__: 那总有算the longest repeated sequence的算法吧...
07:17: alpazuma: 后缀数组？
07:18: alpazuma: IFS: http://www.quora.com/Mathematics/In-the-extension-of-the-digits-of-pi-what-is-the-longest-known-and-theoretical-consecutively-repeated-substring-sequence-of-digits
07:19: alpazuma: 啊不对
07:19: alpazuma: 不重叠的不能用后缀数组
07:19: alpazuma: 得加工一下
07:20: alpazuma: 一百万位应该可以干
07:20: cleamoon__: 我看看相关资料
07:21: alpazuma: 单纯有限长度的串里找重叠或不重叠的重复子串都有现成算法
07:21: cleamoon__: c艹有吗...
07:22: alpazuma: 算法是现成的，我估计c艹没人给你实现……
07:23: cleamoon__: 好吧....
07:24: cleamoon__: perl呢
07:24: alpazuma: 不知道，CPAN上那些货做了东西我也不太敢信
07:25: cleamoon__: ...
07:25: alpazuma: AutoCurry, 这模组干脆是错的
07:26: alpazuma: TagParser, 这模组的某个方法有奇葩错误，对应的成员取值居然是对的
07:26: alpazuma: 还有宗汉酱编译不过的Perl 6移植
07:26: cleamoon__: ....
07:26: cleamoon__: 我还是c艹吧
07:32: cleamoon__: 每次打算弄点c艹都被耗子等的一堆没听过的术语吓尿
07:32: alpazuma: http://tieba.baidu.com/p/3163691458 # 喜感
07:32: alpazuma: cleamoon__: 那是c艹用户阶级斗争的结果
07:33: cleamoon__: 把c艹当成类型系统不那么弱，有namespace的c用大概可以吧
07:33: alpazuma: 可
07:34: cleamoon__: 各种细节实在不想都深究
07:43: lh_mouse: 有什么好深究的  砍掉重练就是
07:43: lh_mouse: 数组  弱类型 函数指针  
07:44: lh_mouse: 异常  new[] 
07:44: cleamoon__: 别弱类型呀...
07:44: cleamoon__: 其实也就用用class,operator这类的货
07:44: lh_mouse: 弱类型本来就坑好不好
07:44: lh_mouse: 所有二进制不一致的东西都不该隐式转换
07:45: lh_mouse: 比如 double -> int
07:45: cleamoon__: 是呀
07:45: lh_mouse: int -> unsigned long long
07:46: lh_mouse: 模板这种东西也应该砍掉重练
07:46: cleamoon__: 那就变成c了...
07:46: lh_mouse: 非得把函数模板和类模板捏一起好玩么
07:47: hope1 joined channel
07:47: cleamoon__: 而且c艹没提供砍掉重练模板的可能吧...
07:47: lh_mouse: 这年代不是流行发明语言么  咱也发明呗
07:47: hope1: alpazuma?
07:47: alpazuma: 弱类型和二进制一致放在一起谈哪里砍掉重练了
07:47: alpazuma: hope1: alpaca + inazuma
07:48: lh_mouse: 弱类型砍掉
07:48: alpazuma: 如果你谈二进制，就没必要太在意类型系统
07:48: lh_mouse: void *  -> const void * 这种可以保留
07:48: alpazuma: 在理论上开洞可以，那之后就不用管劳什子理论了
07:48: alpazuma: 横竖方便
07:48: lh_mouse: 完全无视实现谈语言不是坑爹么
07:48: alpazuma: 没错
07:48: lh_mouse: @lisp
07:49: cleamoon__: c艹其实可以写lisp那种风格的玩意
07:49: alpazuma: 但是同样无视理论不必谈理论
07:49: lh_mouse: 开洞啥啥的还得看实现脸色
07:49: alpazuma: 这就跟c艹用户说什么推导一样都是笑话
07:49: hope1: [](){}?
07:49: alpazuma: 你既然说二进制了，那就接着c, 选择保留特性算了
07:49: lh_mouse: 如果说完全禁用弱类型并非不可以
07:49: alpazuma: 语言应当在意实现不然容易坑死
07:50: lh_mouse: 连 const void * 这种坑都省了
07:50: cleamoon__: 用弱类型还要c艹毛用...
07:50: alpazuma: 我还是那个老话，c艹如果是jvm上的语言不至于那么多舔臭脚的
07:50: alpazuma: 编译器的寄生虫一堆
07:50: lh_mouse: cleamoon_, C 是弱类型的
07:50: alpazuma: c和c艹都是弱类型的
07:50: alpazuma: 这并不见得不便
07:50: lh_mouse: c艹算半个
07:51: alpazuma: 应该说我自己做了强类型之后我都烦了
07:51: cleamoon__: 咦
07:51: lh_mouse: 这种事情么  看情况
07:51: cleamoon__: why？
07:51: alpazuma: 太生硬了
07:51: lh_mouse: 比如  C艹可能觉得 int -> string 算很大开销
07:51: lh_mouse: 实际上你要真做个嵌入式啥的 double -> int 可能开销也不小
07:51: alpazuma: 如果你要考虑数据的二进制，弱类型更舒服
07:52: lh_mouse: 实际上gcc 确实有考虑这问题  因为有的体系结构 double 是软件模拟的
07:52: cleamoon__: ...
07:52: lh_mouse: 但是 ISO C 还规定浮点字面量没后缀是 double   gcc 会给性能警告
07:52: alpazuma: 另外我还是要嘲讽不存在下降算符->提供从单子M t下降到类型t
07:53: lh_mouse: 不是有 decltype 么
07:53: alpazuma: ?
07:53: lh_mouse: gcc 有扩展 typeof()
07:53: alpazuma: 似乎你我说的不是一个东西
07:53: alpazuma: 单纯的强类型和单子类型构造子只允许单子类型污染类型
07:53: hope1: 不是直接return?
07:53: cleamoon__: 强类型也不代表不能转换吧
07:54: alpazuma: 不能
07:54: cleamoon__: ...
07:54: cleamoon__: 设计成可以的不就好了
07:54: alpazuma: hope1: return不是干这个的
07:54: alpazuma: cleamoon__: 那就是弱类型
07:54: alpazuma: 我不倾向于划一个中间地带出来
07:54: cleamoon__: .....这种定义略坑
07:54: lh_mouse: 得用函数转换  
07:54: alpazuma: 原语和模板也都是偷换了
07:54: lh_mouse: 函数形式的*
07:55: alpazuma: lisp坑我倒觉得主要不是gc, 反正人们能忍受java
07:55: lh_mouse: 函数意味着需要借助额外手段  可能会有很大开销
07:55: alpazuma: 大量引入原语就是坑
07:55: cleamoon__: 我觉得弱类型应该是c那种，只有基本类型，一切都是组合而已
07:55: alpazuma: 一方面语义残缺，一方面未必能快速地实现原语
07:55: lh_mouse: c 弱类型坑爹不打草稿
07:55: alpazuma: cleamoon__: 那是类型的基本
07:55: cleamoon__: 但是要能自己引入类型呀...
07:55: alpazuma: 由单类型构造出复类型是类型系统的基本啊
07:56: cleamoon__: 但是也不能只支持这个呀...
07:56: lh_mouse: 要看你怎么定义“类型”
07:56: alpazuma: 完全开放的符号化的类型系统其实可以归约回去
07:56: lh_mouse: C 类型和 C++ 类型就完全不是一类东西
07:56: cleamoon__: +
07:56: alpazuma: 23333
07:56: hope1: 是不是弱类型和怎么组合无关吧？
07:56: lh_mouse: 我之前说 C 类型基本就是内存布局的同义词
07:56: alpazuma: 所以说你直接跳过了语义
07:56: lh_mouse: 但是 c++ 有 type_tratis 这种东西
07:57: hope1: 不是看类型转换的限制？
07:57: alpazuma: 为什么那么着急把事情混在一起呢
07:57: alpazuma: 其一是何谓类型，其二是如何实现类型，只不过c用户懒得管第一点
07:57: lh_mouse: hope1, c 里面不同类型指针是可以胡乱隐式转换的
07:57: lh_mouse: 而且根本不是 error
07:57: alpazuma: lh_mouse: 有强别名
07:57: cleamoon__: 类型不就是个标识物吗
07:58: cleamoon__: 实现就不说了，不会
07:58: lh_mouse: 哪有那么简单
07:58: alpazuma: 我就笑笑
07:58: alpazuma: c艹这种属于一部分类型论背景还算明确，但用户自己忽悠自己的情况
07:59: alpazuma: 结果就是模板半吊子
07:59: alpazuma: 模板实际上也没更好的解决方法
07:59: alpazuma: 单纯就类型来说，上模板就可以造k-阶多态
07:59: lh_mouse: 模板是挖坑填坑
07:59: alpazuma: 这个在k>2的时候静态类型不能推导
08:00: lh_mouse: 模板参数不参与 name lookup 就是明证
08:00: alpazuma: 当然不少模板直接是参数化多态
08:00: alpazuma: 这时候c艹用户拿着ad hoc说什么推导简直2333
08:00: lh_mouse: 这已经很明显了  类模板不是类型
08:00: alpazuma: 是
08:01: alpazuma: 类模板形成一个k-阶多态，特别地，在1-阶多态的时候直接认定是参数化多态
08:01: alpazuma: 当然你实现怎么做随意，ad hoc比较快
08:01: alpazuma: 真做模式匹配就输了
08:01: cleamoon__: 模式匹配不行？
08:01: alpazuma: 慢
08:01: cleamoon__: soga
08:02: alpazuma: 别在运行时搞什么模式匹配，除非你不打算让这个语言跟c艹竞争
08:02: lh_mouse: alpazuma, 
08:02: lh_mouse: 3 An entity is a value, object, reference, function, enumerator, type, class member, template, template specialization,
08:02: lh_mouse: namespace, parameter pack, or this.
08:02: alpazuma: 爆个scala什么的倒行
08:02: lh_mouse: template 不是 type 
08:02: lh_mouse: C++ 里目前就是这样
08:02: lh_mouse: 所以 c++ 2B
08:02: alpazuma: lh_mouse: c艹语义的话确实如此
08:03: lh_mouse: 本来 class template 应该算 type
08:03: alpazuma: 实际上模板是System F助记符的扩展
08:03: lh_mouse: 至于说 function template 我认了   可是为什么都叫 template
08:03: alpazuma: 这个扩展已经暧昧了，但只说class tmpl的话是类型无误
08:05: alpazuma: function tmpl这个其实是他们自己造的没法说
08:05: alpazuma: 混进了奇怪的东西，倒是好用，只不过开了个洞，教授们的东西尿了
08:06: lh_mouse: class template 和 function template 除了都是 template 之外没任何共同点
08:06: alpazuma: +
08:06: alpazuma: 一个是类型构造子，一个是多态类型
08:06: cleamoon__: 这类能自己造就好了
08:07: alpazuma: 造语言的麻烦还是得实用化
08:07: alpazuma: 必要的时候语义暧昧一点让编译器和ABI方便我觉得是更正确的
08:07: lh_mouse: template 这东西估计最初设计时候就是想造个宏替换
08:07: alpazuma: 毕竟理论还是贫弱
08:07: lh_mouse: 所以都叫 template 了
08:07: lh_mouse: 但是后来出了个麻烦事
08:07: alpazuma: 可能
08:07: cleamoon__: 暧昧了不是更麻烦？
08:08: alpazuma: 理论那些烂摊子谁收拾啊
08:08: lh_mouse: foo<int>::bar  // bar 是什么
08:08: lh_mouse: 到底是类型还是成员变量
08:08: alpazuma: 一个一个表示不能停机不能的，我宁可关照点别的
08:08: lh_mouse: 所以后来就约定这样写是变量
08:08: lh_mouse: 如果指 type 得加个 typename
08:09: lh_mouse: 但是坑没填完呢  还有个   extern int x;  {  foo<1, 2> x;  }  怎么算
08:09: condy joined channel
08:09: lh_mouse: g++ 4.8 里我记得这个是有问题的
08:10: alpazuma: 怎么搞的
08:10: lh_mouse: template foo<1, 2> x;
08:11: lh_mouse: 这地方问题就是那个东西到底是一个模板类的实例的定义还是一个普通的逗号表达式语句
08:11: alpazuma: 哈
08:11: alpazuma: 现在处理成什么
08:11: lh_mouse: 于是又扯到语法上去了
08:11: alpazuma: 语法这里干脆歧义
08:11: lh_mouse: alpazuma, 不太清楚 没细看这里
08:12: alpazuma: soga
08:12: lh_mouse: foo 如果是模板应该就算模板类了
08:12: lh_mouse: 然后还有匹配失败怎么办  如何回退
08:12: alpazuma: 麻烦是如何知道它是模板还有失败
08:12: lh_mouse: 至于什么特化  如何叫“最匹配”
08:12: lh_mouse: 各种破事  这语法还不如改了
08:13: lh_mouse: javascript 那种定义变量得加 var  定义函数得加 function  多好
08:13: alpazuma: “foo 如果是模板应该就算模板类了”这个陈述就很麻烦
08:13: lh_mouse: foo 得是模板  而且还得匹配成功
08:14: alpazuma: 所以这地方会有语义检查
08:14: alpazuma: 惨烈不堪
08:14: cleamoon__: 我觉得如果语言真的做的很不坑的话，肯定会有人用的...
08:14: lh_mouse: geordi, { test(); } static constexpr int foo = 1, bar = 2; void test(){ foo<1, 2> bar; cout <<bar; }
08:14: geordi: warning: right operand of comma operator has no effect
08:14: lh_mouse: geordi, -w { test(); } static constexpr int foo = 1, bar = 2; void test(){ foo<1, 2> bar; cout <<bar; }
08:14: geordi: 2
08:15: alpazuma: cleamoon__: 我觉得另一种说法是有一个不太坑的编译器就有人用
08:15: alpazuma: 形式语义残缺的话没法要求语言能被很好地定义出来
08:15: alpazuma: 目前还是求实现吧
08:16: cleamoon__: 这两个相辅相成... 太坑的语言编译器就极难实现
08:16: lh_mouse: geordi, -w { test(); } constexpr int foo = 1, bar = 2; namespace { template<int, int> struct foo { }; template<int M, int N> ostream &operator<<(ostream &os, foo<M, N>){ return os <<"meow"; } } void test(){ foo<1, 2> bar; cout <<bar; }
08:16: geordi: error: reference to 'foo' is ambiguous
08:16: cleamoon__: 虽然不坑的也不代表就好实现...
08:16: alpazuma: 语义漂亮的也未必好实现
08:16: alpazuma: 反倒是那些跟ABI不干不净的做起来在方向性上倾向于容易
08:17: alpazuma: 因为破罐子破摔往下的路子有先河……
08:17: lh_mouse: geordi, prepend template  before last foo
08:17: geordi: error: expected primary-expression before 'template'
08:17: lh_mouse: geordi, show
08:17: geordi: -w { test(); } constexpr int foo = 1, bar = 2; namespace { template<int, int> struct foo { }; template<int M, int N> ostream &operator<<(ostream &os, foo<M, N>){ return os <<"meow"; } } void test(){ template foo<1, 2> bar; cout <<bar; }
08:17: lh_mouse: 哦艹  我又忘了怎么写了
08:17: alpazuma: 呜，费油费桶打通了2-5，还是没有大鲸
08:18: lh_mouse: -w { test(); } template<int, int> struct foo { }; template<int M, int N> ostream &operator<<(ostream &os, foo<M, N>){ return os <<"meow"; } void test(){ constexpr int foo = 1, bar = 2; template foo<1, 2> bar; cout <<bar; }
08:18: alpazuma: 只得了一百点战果和一个勋章
08:18: lh_mouse: geordi, -w { test(); } template<int, int> struct foo { }; template<int M, int N> ostream &operator<<(ostream &os, foo<M, N>){ return os <<"meow"; } void test(){ constexpr int foo = 1, bar = 2; template foo<1, 2> bar; cout <<bar; }
08:18: geordi: error: expected primary-expression before 'template'
08:18: cleamoon__: 所以坑在编译器了？
08:18: lh_mouse: 放弃   坑货
08:25: lh_mouse: 这种东西嘛   用它的原因是“别人都在用”
08:25: lh_mouse: 事实是别人也在这么想
08:26: cleamoon__: +
08:26: lh_mouse: 所以不管语言做得多烂只要把用户数量吹上去就会有人用
08:27: lh_mouse: 而且用户会自己糊弄自己的   语言就像毒品一样  沾上之后自然会说这语言好  因为没人会自己打自己脸
08:28: alpazuma: 没人自打脸-
08:29: alpazuma: 不好不代表不用，有时候只好肿脸上
08:29: lh_mouse: 造语言造出来也没人用
08:29: alpazuma: +
08:29: lh_mouse: cmake 照样干不过 autocrap
08:30: alpazuma: 造脚本还稍微行点，通用语言坑死
08:30: lh_mouse: 让路西法去造通用语言吧
08:30: lh_mouse: 走了
08:34: cleamoon__: yinwang会说lisp就好了
08:39: hope1 quit:Ping timeout: 240 seconds
08:40: hope1 joined channel
08:42: cleamoon__: 我期待着yinwang的编译器
08:42: alpazuma: hope1: 我们有点想弃wod了
08:42: alpazuma: cleamoon__: 我一直认为yinwang不会做后端
08:42: cleamoon__: 万一呢...
08:43: cleamoon__: 或者万一他认识做后端的呢
08:43: alpazuma: 没万一，你看他管过后端么……
08:43: alpazuma: 他认识不算
08:44: cleamoon__: 只有前端不能算编译器呀...
08:44: alpazuma: 对啊
08:44: alpazuma: 现在的lisp哪里值得人那么执念了
08:45: condy: geordi: { foo("hi", "world"); } template<typename T> T foo(const T& a, const T& b) {BARK;} template<> const char* foo(const char* const& a, const char* const& b) { BARK; }
08:45: geordi: error: no matching function for call to 'foo(const char [3], const char [6])'
08:45: cleamoon__: 完全不知道淫语言的设计是什么样
08:46: alpazuma: 最后一次看起来还像是lisp
08:47: cleamoon__: 现在还那模样呢
08:47: alpazuma: ...
08:47: sismvg joined channel
08:47: condy: geordi: { foo("hi", "world"); } template<typename Tx, size_t N1, typename Ty, size_t N2> void foo(const char (&a)[N1], const char (&b)[N2]) { BARK; }
08:47: geordi: Same error.
08:47: iyzsong joined channel
08:48: iyzsong: 早~
08:48: alpazuma: iyzsong: 爆～
08:51: condy: geordi: replace first const char with Tx and replace second const char with Ty
08:51: geordi: foo(const char; long unsigned int N1 = 3ul; Ty = const char; long unsigned int N2 = 6ul (&)[N1], Ty (&)[N2])
08:51: FrankHB: In a strongly typed language each data area will have a distinct type and each process will state its communication requirements in terms of these types.
08:54: alpazuma: FrankHB: 恥球今天什么颜色的
08:54: FrankHB: cleamoon__: 怎么可能做的不坑。至少看不懂的大妈就会评论为坑。
08:55: alpazuma: 谁愿意做个语言被人叫中老年妇女之友啊
08:55: FrankHB: alpazuma: yinwang撸过生成x86_64的Scheme实现，不过github删了貌似没恢复。
08:56: alpazuma: FrankHB: 那个三千多行的么……
08:57: alpazuma: 但是我翻了一顿没看到体系相关优化啊
08:57: FrankHB: 从功能上来说没优化照样也是后端……
08:57: alpazuma: 果然
08:58: condy quit:Ping timeout: 260 seconds
08:59: alpazuma: http://imgsrc.baidu.com/forum/w%3D580%3B/sign=c9faedec952bd40742c7d3f54bb29c51/f703738da977391273c5f6a5fa198618377ae217.jpg
08:59: alpazuma: 左至右
09:00: lh_mouse: mcfbuild.mcfproj 用 \0\ 分隔命令啊哈哈我果然是个天才
09:00: alpazuma: 大凤 苍龙 加贺 瑞鹤 赤城 飞龙 翔鹤
09:00: alpazuma: 噗
09:00: alpazuma: 你就是个啮齿类……
09:01: condy joined channel
09:01: lh_mouse: \0\ 不是很合理嘛 谁较操蛋的 API 满地 C 风格字符串
09:01: lh_mouse: 而且这东西专门设计放在行尾的
09:01: lh_mouse: echo meow \0\
09:01: lh_mouse: echo bar \0\
09:02: FrankHB: \0/
09:02: FrankHB: 看着怎么像颜文字……
09:03: lh_mouse: 现在的生成规则是正则表达式   而且由于加入了稳定排序的支持终于可以从上往下逐个匹配了
09:04: lh_mouse: 生成预编译头：
09:04: lh_mouse: 		Command		= $CXX -x c++-header $CompilerConfig $CXXFlags -o $@.gch $<	\0\
09:04: lh_mouse: 						echo #warning Failed to load precompiled header "$%.gch". > $@	\0\
09:04: lh_mouse: 						echo #include $< >> $@
09:11: sismvg quit:Quit: ChatZilla 0.9.90.1 [Firefox 28.0/20140314220517]
09:21: alpazuma: 日常的木耳看片卡得网上不去节奏开始了
09:24: alpazuma: 衮了
09:28: alpazuma quit:Quit: leaving
09:30: whatofor joined channel
09:45: sismvg joined channel
09:46: sismvg: 谁来拆了德国战车
09:51: liuzhoou joined channel
09:58: liuzhoou quit:Quit: Leaving...
10:06: xxxxxxxx joined channel
10:35: biergaizi_ quit:Ping timeout: 240 seconds
11:04: sismvg: http://www.bilibili.com/video/av1284463/ 
11:04: sismvg: 如何模拟和9啪啪啪
11:04: sismvg: ⑨+
11:08: xxxxxxxx: M?
11:10: condy: ⑤！
11:14: condy: ⑨！
11:14: condy: 小5小9分不清楚！！！！
11:16: sismvg: ⑨是冰的
11:27: Plough joined channel
12:05: kong joined channel
12:08: kong quit:Client Quit
12:54: sismvg_ joined channel
12:56: sismvg quit:Ping timeout: 264 seconds
13:13: khysw: 我是学渣...
13:44: GODDOG joined channel
13:57: hope1 quit:Remote host closed the connection
14:04: sismvg: 有什么比学霸装学渣更加令人痛心的
14:05: lh_mouse: khysw, 您那代理不给力啊  为何总超时
14:06: khysw: lh_mouse: 天知道...
14:13: condy: khysw: 总是connection reset by peer....
14:13: khysw: 大概是GFW的货色...
14:14: GODDOG: 上不了网
14:14: Plough: 用shadowsocks吧
14:16: khysw: Plough: 加密连接什么的直接ssh不久完事了...
14:16: Xilzzerts joined channel
14:19: Plough: ssh貌似有可能被干掉
14:19: Plough: 不知道GFW用了什么黑科技
14:19: khysw: 其实是加密数据流比较容易被消灭掉...
14:20: Plough: Shadowsocks到现在没问题
14:20: Plough: 据说ssh是被流量统计灭掉了
14:21: khysw: ...
14:23: sismvg: GFW没有用黑科技。。只是人家运算能力NB。。
14:25: khysw: 回头研究一下能不能用UDP来处理问题...
14:34: sismvg: 红警3和红警2的游戏性差别太大了
14:48: GODDOG quit:Quit: Lost terminal
15:03: JQK joined channel
15:06: condy: geordi: { char a[]="hi", b[]="world"; foo(a, b); } template<typename T, typename U> void foo(T, U) { BARK; }
15:06: geordi: foo(char*; U = char*, U)
15:13: sismvg: 					case 3:
15:13: sismvg: 						neuron_sum += fann_mult(weights[2], neurons[2].value);
15:13: sismvg: 					case 2:
15:13: sismvg: 						neuron_sum += fann_mult(weights[1], neurons[1].value);
15:13: sismvg: 					case 1:
15:13: sismvg: 						neuron_sum += fann_mult(weights[0], neurons[0].value);
15:13: sismvg: 					case 0:
15:13: sismvg: 写这个代码的人一定写的时候在啪啪啪
15:17: condy: ...
15:18: condy: geordi: { foo(0, 0); } template<typename T> void foo(const T&, const T&) {BARK;} void foo(const char*, const char*){BARK;}
15:18: geordi: foo(const int&, const int&)
15:18: condy: geordi: replace all 0 with nullptr
15:18: geordi: foo(const nullptr_t&, const nullptr_t&)
15:19: Plough quit:Ping timeout: 240 seconds
15:22: Plough joined channel
15:22: condy: geordi: { foo(1.2, 2.3); } template<typename T> void foo(T, T) { BARK; } void foo(double, double) {BARK;} template<> void foo<double>(double, double) {BARK;}
15:22: geordi: foo(double, double)
15:22: condy: geordi: replace second void with int
15:22: geordi: warning: no return statement in function returning non-void
15:22: condy: geordi: prepend -w
15:22: geordi: foo(double, double)
15:22: condy: geordi: show
15:22: geordi: -w { foo(1.2, 2.3); } template<typename T> void foo(T, T) { BARK; } int foo(double, double) {BARK;} template<> void foo<double>(double, double) {BARK;}
15:23: condy: geordi: replace first double with int
15:23: geordi: [with T = double]
15:23: condy: geordi: show
15:23: geordi: -w { foo(1.2, 2.3); } template<typename T> void foo(T, T) { BARK; } int foo(int, double) {BARK;} template<> void foo<double>(double, double) {BARK;}
15:25: sismvg: fann_mult...看了半天不理解什么意思，结果看了下代码。。TMA就是个乘法啊。。
15:25: condy: 233
15:30: sismvg: C有内联函数嘛？
15:31: condy: 有。
15:32: sismvg: 那为什么还要宏函数。。
15:32: sismvg: 看到了一个长40行的宏。。
15:32: Plough: 兼容性？
15:34: sismvg: 现在还要考虑吗。。
15:34: Plough: 或者是历史原因
15:35: condy: 。。。
15:46: lh_mouse: 内联函数是 c99 才有的
15:47: kong joined channel
15:52: iyzsong quit:Ping timeout: 256 seconds
15:58: sismvg: 脑子卡住了。。
15:58: sismvg: 多层神经元网络怎么计算给一下层的输出..
16:14: biergaizi_ joined channel
16:19: iyzsong joined channel
16:27: sismvg: 擦。。谷歌学术也上不去了。。
16:28: sismvg: 换了IE又好了。。
16:32: sismvg: 贴吧视频互动升级了，现在70%的贴吧的头像头上都有..
16:38: whatofor: python处理excel的速度真慢。 不知道是 python的问题还是 exce接口的问题
17:05: Plough quit:Ping timeout: 256 seconds
17:05: kong quit:Remote host closed the connection
17:07: Plough joined channel
17:08: condy: geordi: { string numbers[] = {"one", "two", "three"}; auto result=get_temporary_buffer<string>(3); uninitialized_copy(numbers, numbers+result.second, result.first); for(auto& i: result.first) cout << i << " "; }
17:08: geordi: error: no matching function for call to 'begin(string*&)'
17:09: condy: geordi: { string numbers[] = {"one", "two", "three"}; auto result=get_temporary_buffer<string>(3); uninitialized_copy(numbers, numbers+result.second, result.first); for(int i=0;i<result.second;++i)cout<<result.first[i] <<" "; }
17:09: geordi: one two three 
17:11: lh_mouse: geordi, << noexcept(string(string()));
17:11: geordi: false
17:11: lh_mouse: geordi, << noexcept(string(s)); string s;
17:11: geordi: false
17:11: lh_mouse: geordi, replace (s) with (move(s))
17:11: geordi: true
17:11: lh_mouse: geordi, undo and erase second s
17:11: geordi: false
17:12: lh_mouse: geordi, show
17:12: geordi: << noexcept(string()); string s;
17:18: FrankHB quit:Read error: Connection reset by peer
17:31: Plough quit:Ping timeout: 240 seconds
17:34: Plough joined channel
17:38: sismvg: java的漏洞就和爪哇岛上的咖啡豆一样多
17:57: Plough quit:Remote host closed the connection
17:58: Plough joined channel
18:02: cleamoon__: 7月13日，尽管中国没能打进世界杯，但是在世界杯决赛场上还是有中国人的身影，不少来自中国的球迷挥舞着五星红旗。退场后，来自中国的球迷们也宣泄着自己的心情，他们高喊“中国加油”，“国足加油”“共产党万岁”的口号。自从2002年中国队首次登上世界杯舞台后，中国足球已经在泥潭中沉沦的太久。
18:15: iyzsong quit:Quit: poweroff
18:16: Plough quit:Ping timeout: 240 seconds
18:18: Plough joined channel
18:24: condy: geordi: << noexcept(vector(1, 0)[2])
18:24: geordi: error: missing template arguments before '(' token
18:25: condy: geordi: << noexcept(vector<int>(1, 0)[2])
18:25: geordi: false
18:25: condy: geordi: << noexcept(vector<int>(1, 0)[0])
18:25: geordi: false
18:26: Plough quit:Ping timeout: 240 seconds
18:29: Plough joined channel
18:39: Xilzzerts quit:Read error: Connection reset by peer
18:48: boosure quit:Ping timeout: 240 seconds
18:48: sismvg: 吐槽java写的东西漏洞多
19:32: hope1 joined channel
19:34: xxxxxxxx: http://tieba.baidu.com/p/3164899008 拍照狂魔
19:35: Plough: 我操
19:35: Plough: 竞价沙发是个什么狗屁玩意
19:36: xxxxxxxx: 新功能呗
19:36: hope1 quit:Ping timeout: 240 seconds
19:37: sismvg: 小写宏不注意就麻烦大了
19:37: Plough: 逗死我了
19:37: sismvg: 宏函数又基本是小写。。
19:41: sismvg: 中国产，中国货等等类似的东西叫做效应来着
19:42: Plough: し到底是shi还是si啊0 0
19:43: Plough: anthy两个都能打出来
19:44: lh_mouse: Plough, 平文式 shi  训令式 si
19:50: endle joined channel
19:58: hope1 joined channel
20:15: xxxxxxxx: 话说最后还有人打算玩WOD么?
20:21: Plough: 我今天还上去了几次
20:21: Plough: 看看羊驼子吧
20:21: Plough: 没人玩我就撤了
20:22: Plough: 是有点来着
20:22: Plough: 主要是维修太坑了
20:22: cleamoon__: wod修需要30钻石
20:23: sismvg: 。。反向传播好难弄
20:25: xxxxxxxx: shoot first挺好玩的
20:25: sismvg: 比i wanna好？
20:26: xxxxxxxx: sismvg: 你说那个是游戏?
20:26: Plough: 那个是情趣玩具
20:27: sismvg: 调教工具？
20:28: condy: geordi: { int* a = static_cast<int*>(operator new[](sizeof(int) * 10); for (int i=0;i<10;++i) a[i]=i; random_shuffle(a,a+10); for(int i=0;i<10;++i)cout <<a[i]<< " "; }
20:28: geordi: error: Unexpected `}` after `<< " "; `. Expected ')', '/', or balanced code.
20:28: condy: geordi: { int* a = static_cast<int*>(operator new[](sizeof(int) * 10)); for (int i=0;i<10;++i) a[i]=i; random_shuffle(a,a+10); for(int i=0;i<10;++i)cout <<a[i]<< " "; }
20:28: geordi: 4 3 7 8 0 5 2 1 6 9 
20:28: condy: geordi: { int* a = static_cast<int*>(operator new[](sizeof(int) * 10)); for (int i=0;i<10;++i) a[i]=i; random_shuffle(a,a+10); for(int i=0;i<10;++i)cout <<a[i]<< " "; operator delete[](a);}
20:28: geordi: 4 3 7 8 0 5 2 1 6 9 
20:29: lh_mouse: 洗澡澡去
20:32: condy: geordi: { int* p = new int; new(p) int(10); cout<<*p;}
20:32: geordi: 10
20:33: condy: geordi: { char* p = new int; new(p) int(97); cout<<*p;}
20:33: geordi: error: cannot convert 'int*' to 'char*' in initialization
20:33: condy: geordi: replace first int with char
20:33: geordi: a
20:35: condy: geordi: { char* p = new char[10]; new(p) char('h', 'e', 'l', 'l', 'o', '\0'); cout << p; }
20:35: geordi: error: new initializer expression list treated as compound expression
20:37: condy: geordi: { allocator<string> alloc; string* sp = alloc.allocate(2); new(sp) string("abc", "def"); }
20:37: geordi: terminated by length_error: basic_string::_S_create
20:38: condy: geordi: { const char* s = "hello"; char* b=s; char* e=s+6; char* p = new char[10]; new(p) char(b,e); cout << p; } 
20:38: geordi: error: invalid conversion from 'const char*' to 'char*'
20:38: condy: geordi: { char* s = "hello"; char* b=s; char* e=s+6; char* p = new char[10]; new(p) char(b,e); cout << p; } 
20:38: geordi: error: new initializer expression list treated as compound expression
20:40: condy: geordi: { string s="hello"; allocator<string> alloc; string* sp = alloc.allocate(2); new(sp) string(s.begin(), s.end()); }
20:40: geordi: <no output>
20:41: condy: geordi: { string s="hello"; allocator<string> alloc; string* sp = alloc.allocate(2); new(sp) string(s.begin(), s.end()); cout<<*sp;}
20:41: geordi: hello
20:46: condy: geordi: { void* p = malloc(sizeof(int)); new(p) int(100); cout<<*(int*)p; }
20:46: geordi: 100
20:50: condy: geordi: { string s="hello"; string* sp=new string(s.begin(), s.end()); sp->~string(); *sp = "fuck"; cout << *sp; }
20:50: geordi: fuck
20:53: candy76041820 joined channel
20:53: candy76041820 left channel:
20:54: sismvg: 谁能上得了google..
20:54: condy quit:Ping timeout: 240 seconds
20:54: lh_mouse: me
20:55: condy joined channel
20:56: condy: geordi: { string s="hello"; string* sp=new string(s.begin(), s.end()); sp->~string(); new(sp) string(s.begin(), s.end()); cout<< *sp;}
20:56: geordi: hello
20:56: condy: geordi: { string s="hello, world"; s.~string(); s="world"; cout << s; }
20:57: geordi: world error: tried to delete already deleted pointer. Aborted
20:58: hoxily: geordi: { string a = string("a string"); cout << a.length; }
20:58: geordi: error: invalid use of non-static member function
20:59: condy: geordi: insert () after length
20:59: geordi: 8
20:59: candy76041820 joined channel
20:59: candy76041820 left channel:
20:59: hoxily: geordi: { string a = "a string"; cout << a.length; }
20:59: geordi: error: invalid use of non-static member function
20:59: hoxily: geordi: { string a = "a string"; cout << a.length(); }
20:59: geordi: 8
21:00: hoxily: geordi: { string a = "0123456789"; cout << a.length(); }
21:00: geordi: 10
21:00: hoxily: geordi: { string a = string("0123456789"); cout << a.length(); }
21:00: geordi: 10
21:00: hoxily: geordi: { string a = string("0123456789"); cout << a.c_str(); }
21:00: geordi: 0123456789
21:00: endle: geordi 是 bot？
21:00: hoxily: endle: 是。
21:01: endle: 今天才发现。。。哭了。。。
21:01: hoxily: endle: /topic
21:01: lh_mouse: geordi, << " I am not!"
21:01: geordi:  I am not!
21:01: sismvg: 可怜的endle,这是他第666次失恋
21:02: condy: geordi: { string s="hello"; string* sp=new string(s.begin(), s.end()); sp->~string(); new(sp) string(s.begin(), s.end()); cout<< *sp; delete sp; }
21:02: geordi: hello
21:02: sismvg: geordi, <<"Do not love me ! you need 3d gril";
21:02: geordi: Do not love me ! you need 3d gril
21:02: sismvg: 打错了。。
21:02: lh_mouse: 没数词  有个单词拼错了
21:04: sismvg: 百度想要找个关于线性单元的东西都找不到。。
21:04: condy: geordi: { string s="hello"; string* sp=new string(s.begin(), s.end()); sp->~string(); cout<<*sp;}
21:04: geordi: hello
21:04: sismvg: 跑出来一堆机械专利。。
21:05: condy: geordi: { string s="hello"; string* sp=new string(s.begin(), s.end()); sp->~string(); cout<<*sp; delete sp; delete sp; delete sp; }
21:05: geordi: hello error: tried to delete already deleted pointer. Aborted
21:05: condy: geordi: { string s="hello"; string* sp=new string(s.begin(), s.end()); sp->~string(); cout<<sp->size();}
21:05: geordi: 5
21:07: condy: geordi: { string s="hello"; string* sp=new string; new(sp) string(s.begin(), s.end()); sp->~string(); cout<<sp->size();}
21:07: geordi: 5
21:09: sismvg: 2天13封垃圾邮件。。全是sina的。。
21:19: sismvg: 真岛浩画的妹子的大腿都太奇葩了
21:22: Plough quit:Quit: Lost terminal
21:30: Plough joined channel
21:35: sismvg: 自(不)己(告)google(诉)去(你)
21:46: cleamoon_ quit:Read error: Connection reset by peer
21:48: cleamoon_ joined channel
21:50: sismvg quit:Quit: ChatZilla 0.9.90.1 [Firefox 28.0/20140314220517]
21:52: JQK quit:Remote host closed the connection
21:59: lh_mouse quit:Read error: Connection reset by peer
22:11: condy quit:Quit: WeeChat 0.4.3
22:25: whatofor quit:Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/
22:28: Plough quit:Quit: Lost terminal
22:46: endle quit:Quit: Leaving
23:07: hoxily quit:Quit: WeeChat 0.4.3
