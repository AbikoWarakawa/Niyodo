00:03 lhanjian quit:Quit: Connection closed for inactivity
00:05 Dove quit:Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/
00:05 miao233_ quit:Quit: Leaving.
00:07 Youmu quit:Quit: Connection closed for inactivity
00:08 lhanjian joined channel
00:16 hope1: cleamoon, 啊啊，说得对
00:19 cleamoon: hope1, 果然海棠姬打算肉身翻墙后出道下海
00:20 lh_mouse: at stage 2.
00:30 lhanjian: 老司机车毁人亡
00:35 lh_mouse: ../../../gcc/libgcc/libgcc2.c:1912:26: internal compiler error: Segmentation fault
00:35 lh_mouse:  #define COPYSIGN CONCAT2(__builtin_copysign, CEXT)
00:37 cleamoon: 什么鬼.....
00:37 condy: geordi: << STR(CEXT); \#define STR(x) _STR(x) \#define _STR(x) #x
00:37 geordi: CEXT
00:39 condy: geordi: << CEXT
00:39 geordi: error: 'CEXT' was not declared in this scope
00:39 condy: -.-
00:39 cleamoon: condy 怎么这么熟练呀，到底吐核了几次呀
00:39 condy: cleamoon: 怎么跟 iyzsong 一样
00:40 condy: 他的铃声就是届かない恋'13
00:40 condy: 有点厉害啊
00:40 lhanjian: 谁？
00:40 condy: iyzsong 的
00:41 lhanjian: 人家换个after all
00:41 cleamoon: 我不是白学家
00:42 cleamoon: 我是伪白膜法师，专业玩梗
00:43 lhanjian: 辣鸡绅士幼女
00:43 lhanjian: condy: -.-
00:44 condy: OuO
00:45 lhanjian: 0.0
00:45 lhanjian: 现充
00:46 condy: _(:з」∠)_
00:48 cleamoon: 现充
00:48 cleamoon: lhanjian, 看了几页华尔街作死专家，感觉和我三关太不合了
00:48 lhanjian: 华尔街作死专家？
00:50 cleamoon: lhanjian, 那个什么华尔街大作手
00:51 lhanjian: 哦
00:52 cleamoon: 我完全不信股市可以预测
00:58 xxxxxxxx: 怎样看待 papi 酱遭广电总局下架整改？ <- 线虫之间的斗争
01:01 T-J-M joined channel
01:10 f00x quit:Quit: 离开
01:14 T-J-M quit:Quit: 重启去了
01:15 whocares_2_ joined channel
01:16 T-J-M joined channel
01:17 whocares_2 quit:Ping timeout: 276 seconds
01:21 cleamoon quit:Ping timeout: 268 seconds
01:46 lh_mouse quit:Ping timeout: 276 seconds
02:03 lh_mouse joined channel
03:03 lhanjian quit:Quit: Connection closed for inactivity
03:07 xxxxxxxx quit:Quit: Leaving...
03:25 Youmu joined channel
03:30 Stevearzh quit:Remote host closed the connection
03:32 Stevearzh joined channel
03:38 Stevearzh quit:Remote host closed the connection
03:39 Stevearzh joined channel
06:27 Youmu quit:Quit: Connection closed for inactivity
06:30 cleamoon joined channel
07:42 CyrusYzGTt joined channel
08:02 CyrusYzGTt quit:Ping timeout: 252 seconds
08:45 cc joined channel
08:51 lhanjian joined channel
08:57 Stevearzh quit:Remote host closed the connection
08:58 Stevearzh joined channel
09:25 tutu_wind joined channel
10:36 Youmu joined channel
11:19 whatofor quit:Ping timeout: 260 seconds
11:19 whatofor joined channel
11:26 whatofor_1 joined channel
11:27 whatofor quit:Ping timeout: 250 seconds
11:50 cc: 好安静啊。。
11:50 cc: 这不科学
11:51 cc: 一上午没人说话...
11:51 lhanjian: 要来一段喷薄的负能量么
11:56 iyzsong: = =
12:18 CyrusYzGTt joined channel
12:27 varna joined channel
12:30 varna: (｡･ω･)ﾉ
12:33 lhanjian: 老司机来了
12:33 lhanjian: 不对
12:34 lhanjian: 线充来了
12:37 lhanjian: varna: 爆炸
12:42 varna: (｡･ω･)ﾉ这现充居然说我！
12:42 varna: 爆炸爆炸，收拾下吃饭去
13:30 CyrusYzGTt quit:Ping timeout: 240 seconds
13:47 CyrusYzGTt joined channel
13:52 CyrusYzGTt quit:Ping timeout: 250 seconds
13:53 varna: 撸撸撸撸
13:56 Stevearzh quit:Quit: ZZZzzz…
14:27 lhanjian: varna: 这线虫
14:28 varna: lhanjian: 完全不现充，没有妹子，求介绍妹子
14:28 lhanjian: varna: 求介绍妹子
14:28 lhanjian: 我去原来隔了这么久
14:28 varna: 只会介绍舰娘
14:34 cc: ...
14:40 varna_ joined channel
14:40 varna quit:Disconnected by services
14:40 varna_ is now known as varna
14:42 cc: 中午好困=_=
14:42 cc: _(:зゝ∠)_
14:46 lhanjian: cc: 不上班就卜困啦
14:48 cc: 不上班也困
14:49 lhanjian: 那就困呗
14:59 varna: cc: 要不要我教你念一篇让人不困的经
14:59 cc: 号啊
15:00 cc: 好啊
15:00 cc: varna: 什么经
15:00 varna: cc: https://pastebin.mozilla.org/8868185
15:01 cc: 三个代表。。。。
15:01 lhanjian: varna: 膜肛经？
15:01 varna: +
15:02 lhanjian: varna: 乃衣吾！
15:03 varna: Big Problem!
15:03 varna: 念了经我还是有点困，等会儿迷糊一下重写一点IPC的部分
15:05 lhanjian: 还是叫膜法心经比较好
15:14 lhanjian: varna: https://github.com/openresty/sregex 羊驼子看看这个
15:17 tutu_wind is now known as tutu_leave
15:24 varna: lhanjian: 咦，这个看着很厉害？
15:24 varna: 不过非回退NFA不是看点，我看看他接口
15:24 Youmu: 会Perl的都是膜法师，膜拜＊
15:24 lhanjian: Youmu: 那就先把你+1s
15:25 Youmu: lhanjian: http://cirno.xyz/+1s
15:25 Youmu: 请点击
15:25 varna: 这个提供多正则匹配啊
15:26 varna: 然而……" These regexes are logically connected via the alternative regex operator (|), so the order of these regexes determine their relative precedence in a tie."
15:26 varna: 我听说多模式匹配有更好的算法
15:27 varna: 先把这库拖下来
15:27 lhanjian: ORZ
15:28 Youmu: Or2
15:33 AaronLi joined channel
15:41 lhanjian: Youmu: 为什么会有这么多秒啊，你到底续过多少次了
15:41 Youmu: lhanjian: 1万秒
15:42 lhanjian: Youmu:  O.O
15:45 tutu_leave is now known as tutu_wind
15:58 lh_mouse: http://paste.ubuntu.com/15925829/
16:10 varna: (｡･ω･)ﾉ
16:12 iyzsong: orz
16:30 iyzsong: -.-
16:41 lhanjian: 小耗写的线程库会爆炸吗？
16:41 lh_mouse: lhanjian, 你试试。
16:42 lhanjian: 暂不
16:42 lh_mouse: https://github.com/lhmouse/mcfgthread 求 star 。
16:42 lhanjian: Stared
16:43 lh_mouse: thanks.
16:43 lhanjian: starred
16:46 lh_mouse: Thread model: mcf 
16:48 lhanjian: 注意到了
16:54 varna: Starred
16:54 lhanjian: 为什么这么熟练！
16:54 varna: 身经百战舰得多！
16:57 AaronLi quit:Ping timeout: 246 seconds
17:02 iyzsong: 0 0
17:03 Dove joined channel
17:04 tutu_wind quit:Quit: WeeChat 1.2
17:15 Matsune joined channel
17:36 cleamoon: 【深圳8名女大学生为赚取代工费帮水客头带货，被罗湖海关截获】4月11日傍晚5点半至7点半，在短短两个小时里，罗湖海关在8名旅客行李内各查获未向海关申报的PS4游戏碟20张，共计160张。这8人均是年轻的女大学生，均未携带大件行李，只随身携带书包或挎包，行李简单。
17:40 tutu_wind joined channel
17:41 varna: 所以这些女大学生后来适当地道歉了？
17:41 varna: s/适当/常识/
17:41 lhanjian:  varna 交由海关缉私局处理了，目测要当典型了。
17:41 lhanjian: 不过额度不算很大。大概在5000RMB左右
17:42 varna: lhanjian: 不，我的意思是，道歉时候露出胸部是常识
17:44 cc quit:Remote host closed the connection
17:45 cleamoon: 《华尔街日报》援引业内人士的消息报道，在中国多家投资公司相继倒闭迫使政府官员采取紧急应对措施的情况下，中国监管部门正悄然暂停对投资类公司登记注册的审批。这些中国投资公司的倒闭导致数百万中小投资者面临潜在损失。据工商注册登记代理商、律师和顾问人员称，上海市工商行政管理局最近向该市的注册登记
17:45 cleamoon: 代理商表示，该局将不会批准那些看起来与投资相关的公司的注册登记。
17:47 lhanjian: cleamoon: 最近越来越扯淡了。党国30年来的财经纪律也已经完蛋了
17:49 lhanjian: 算了，懒得说了
17:49 lhanjian: 还不如多学点英语，早日肉翻
17:49 lhanjian: 我希望被打脸。
17:50 Matsune: 不太平
17:50 lhanjian: Matsune: 其实不是不太平。只是形势不好了，以前捂着的东西就逐渐开始散发出奇异的味道了
17:51 lh_mouse: mcfgthread 整进去有个好处。
17:51 cleamoon: 肉番和英语有什么关系，应该学日语
17:51 Matsune: lhanjian: 大家都扛着 有点看谁先GG的味道了
17:51 lh_mouse: 如果你只是用 mcfgthread 就必须动态链接。如果你用 MCFCRT 就可以把动态库扔掉改成静态链接。
17:52 cleamoon: 形势不对就换家 -- F91
17:52 lhanjian: Matsune: 是啊。要不是负利率，要不就是事实上负利率
17:52 lhanjian: cleamoon: 瑞典的利率是多少？
17:52 lhanjian: 哦，也是-0.5%
17:52 lhanjian: 海盗国也不行了
17:52 Matsune: 说起来这周内环太平洋爆发了四次强地震
17:53 lhanjian: Matsune: 是啊
17:53 cleamoon: 什么利率？央行吗？
17:54 lhanjian: cleamoon: 对啊
17:54 lhanjian: cleamoon: 　　FX168讯 周五（4月15日）公布的路透调查显示，瑞典央行（Sveriges Riksbank）将维持指标利率在负0.5%的纪录低点不变。随着经济好转且通胀上升，宽松周期渐进尾声。
17:54 lhanjian: 不过意外地有好消息？
17:54 cleamoon: 通胀上升？有吗？没感觉
17:55 lhanjian: cleamoon: 瑞典的PPI/CPI怎么样？
17:55 cleamoon: 除了几样东西拼命涨钱以外，其他还好
17:56 lhanjian: cleamoon: 哪几样？
17:56 cleamoon: 冰棍，车票和有些泡沫的房产
17:57 Dove: 有个猎头让我帮忙推荐这个职位，要求正式毕业的，1年以上linux C/C艹工作经验。 https://a.liepin.com/recommend/showrecommendhjob/?hjob_id=7811441&hmsg_id=440175910 
17:57 Dove: 好了我的任务完成了。
17:58 cleamoon: 抱歉， 您访问的页面不存在或已删除
17:58 lhanjian: 抱歉， 您访问的页面不存在或已删除
17:58 Dove: 嵌入式 车载开发 10-25万 上海
17:59 cleamoon: 4月15日，武汉首个城管武装部在汉阳区城管局成立，首批40名城管工作人员加入民兵队伍，参与正规军事化训练。据汉阳区人武部相关负责人介绍，政府职能部门成立武装部在全市并不多见，城管系统内更属首例。与街道、社区民兵相比，城管执法人员相对比较年轻，能为民兵队伍注入更多活力。加入民兵组织、参与正规军事化
17:59 cleamoon: 训练，也有助于城管执法人员提升自身形象，改善执法水平。
18:01 cleamoon: @美嘉.rar 职场定理第一条：不管你多棒，总有人能替代你。 一再挽留你，仅仅是因为你是其中最廉价的。#我怎么觉得不靠谱
18:01 varna: 替代品挺多的
18:01 varna: 这是实话
18:02 lhanjian: cleamoon: 公司的目标是“员工可替代”，但不是什么时候都能做到。
18:02 Dove: 好吧，那个推荐是个外包公司，东软，诸君无视就可以了。
18:03 cleamoon: http://photo1.fanfou.com/v1/mss_3d027b52ec5a4d589e68050845611e68/ff/n0/0c/gr/ms_490910.jpg@596w_1l.jpg
18:03 Dove: 我TM都跟猎头打成一片了，然而还是要等7月份才能去实习。
18:03 lh_mouse: 等 x64 的 gcc 编译完ヲ打个包发出去。
18:04 cleamoon: 雇个码农写一堆辣鸡，然后替代另一个码农处理，处理成了两堆辣鸡
18:04 lhanjian: cleamoon: 是的。因为员工的目标有时候就是不可替代性
18:05 * varna 成功把别人的服务器变成了一坨没人敢强行维护的垃圾
18:06 lh_mouse: 半个小时以内就可以发布了。
18:06 lh_mouse: 现在已经是 stage 3 了。
18:07 CyrusYzGTt joined channel
18:07 cleamoon: 整个服务器是从 c 里调用 perl 的c艹 ff写的？
18:07 varna: cleamoon: 是C, 但它是p7写的
18:07 cleamoon: 哦，那应该没事
18:10 cleamoon: 看来应该趁在学校自己撸一个语言，然后工作时用这个，这样就没法开除了
18:10 cleamoon: 除非所有代码都不想要了
18:12 Dove: cleamoon: 图样，我电话面试了一家，他连C艹都不让用，非要让我转java，于是我不干了。
18:12 cleamoon: 为什么偏要写c艹
18:12 Dove: 因为逼格高。
18:13 iyzsong: orz
18:13 cleamoon: 那你用 haskell 吧
18:13 lh_mouse: ヲ说个笑话，郭敬明过河。
18:13 Dove: 没有C艹逼格高。
18:13 varna: Dove: 请帮我省点口水
18:13 Dove: 而且应用范围不广。
18:13 Dove: varna: 好的。
18:13 lh_mouse: 笑看应用范围不广。
18:13 lh_mouse: 黑 java 能带脑子么。
18:14 Dove: 我说haskell
18:14 cleamoon: 原来 haskell 不是图灵完全，我受教了
18:14 lh_mouse: C 也是图灵完全呢。
18:14 Dove: C的宏也是我记得。
18:14 lh_mouse: 宏显然不是。
18:14 Dove: C艹的模板也是反正。
18:14 lh_mouse: 没有 #include 就不是。
18:15 lh_mouse: 模板是。自己想想为什么。
18:16 varna: 大家让T2说说图灵完全有什么意义
18:17 cleamoon: 治肾亏不含糖
18:17 Dove: 为什么要让我说呢。
18:17 varna: 既然你强调过逼格……
18:17 Dove: 我开个玩笑不行么。
18:17 Dove: 我就是不喜欢JAVA不行么。
18:18 varna: 我比较喜欢对不好笑的玩笑进行二次创作
18:18 varna: 尤其是对比hs跟C艹
18:18 varna: 那段我喷过太多相同的口水了，这次下定决心省下来
18:19 Dove: 多谢
18:19 cleamoon: 我觉得吧，c艹除非撸到小蚝的程度，而且有项目证明有小蚝的程度，才是有逼格的，否则一般业务逻辑还不一定比直接用 java 强呢
18:19 cleamoon: 毕竟，好看的不会写呀
18:19 Dove: cleamoon: 这说明C艹有发展空间啊。
18:19 cleamoon: 省下来变地刺
18:20 Dove: 撸java多没追求，今天用个库，明天换一个。
18:20 varna: Java的不少东西库多，上线快
18:20 varna: 你要追求可以，但我从来没看到你能按小时安排自己的task...
18:21 cleamoon: 我记得大多数 java 的工作要求里没写要求 这辈子不许再用c艹
18:21 Dove: 我是得学着安排一下时间
18:21 varna: 不是“安排时间”
18:21 cleamoon: 我的经验是 提前按小时安排肯定捉急，不如按天安排，然后每天早上安排当天的
18:22 varna: 而是快速写出一坨难看但勉强能动能重构的东西
18:22 varna: 如果你说你的追求是半天憋不出一堆能测试的玩意，不如去写Java
18:23 Dove: 嗯，我先撸着看，要是明年还这么拙计我再转java。
18:23 varna: 这说法太6
18:23 cleamoon: 太6
18:24 varna: 渣代码转身就可以写的
18:24 Dove: 所以我撸着看撒。
18:24 varna: 不不，我给你举个真实的例子
18:24 lh_mouse: Comparing stages 2 and 3
18:24 lh_mouse: warning: gcc/cc1-checksum.o differs
18:24 lh_mouse: warning: gcc/cc1plus-checksum.o differs
18:24 Dove: 啥例子
18:24 lh_mouse: 这什么鬼。
18:24 varna: 之前你尝试在数小时之内搞出个粗糙的epoll-based server, 然后没下文了
18:25 varna: 这就是个例子
18:25 cleamoon: 怎么编译个gcc这么多事.....
18:25 Dove: 那个我写出来了，线程池并发那个我没写。
18:25 varna: Dove: 你打算怎么用线程池
18:25 lh_mouse: ヲ之前跟别人说过一个事情。
18:25 Dove: 我想把那一章APUE先看完。
18:26 lh_mouse: 为什么需要软件工程，因为一旦我觉得你写的有问题我就可以把你写的都怪你西干掉重做一个，接口外面完全不知道。
18:26 lh_mouse: s/都怪你西//东西
18:26 lh_mouse: fxxk
18:27 lh_mouse: ヲ觉得没这种意识的人写不了什么框架。
18:28 Dove: varna: 先开一个线程池全部挂起，有东西进来就挂链表上，然后试着唤醒一个线程去链表上取东西。线程作业完毕就挂起。
18:29 Dove: 没仔细想，大概是这么打算的。
18:29 varna: Dove: 没仔细想跟没想一样
18:29 lh_mouse: Dove, 你这个想法的方向就有问题。
18:30 Dove: 求指教
18:30 lh_mouse: 你所说的东西用一个 cv + mutex 很容易就可以实现。
18:30 lh_mouse: 你并未能看到真正需要［你］去解决的问题。
18:30 lh_mouse: 你看到的问题都是别人解决过的。
18:30 varna: 有关小耗这个，我举个例子
18:30 lh_mouse: 对于老板来讲，恕我直言，你这样的就是无价值的。
18:31 lh_mouse: 你没法证明自己有用。
18:31 varna: 你看libevent的定时器事件，一个字：坑
18:31 iyzsong: 同不清楚.. 线程池怎么用?  像python一样搞个ThreadPoolExecutor?  用到耗CPU时间长的任务上?
18:32 varna: iyzsong: 如果你不明白为何要用线程池，尽量别用
18:32 varna: 微机上真并行的东西挺少的
18:32 iyzsong: 噢噢
18:33 varna: 不过我倒觉得，绝大部分问题都被别人解决过，只是很多人解决得过分愚蠢了
18:33 lh_mouse: 说点个人理解，线程池适合对等的多线程。但是多线程未必是对等的。poseidon 的多线程就是不对等的。
18:33 Dove: 高深了，听不懂。
18:34 varna: Dove: 简单来说，你的不同线程是否担任同样的工作？
18:34 Dove: 是的
18:34 lh_mouse: 对等和不对等只是字面意思。
18:34 varna: 如果是，你为何选择开池而非L-F风格的框架
18:34 cleamoon: 线程池不是为了高效的处理大量的线程创建吗？
18:34 varna: cleamoon: 大量的线程是低效的
18:34 lh_mouse: 所以还是对等的。
18:34 Dove: 我没什么见识，不知道框架。
18:35 cleamoon: 如果网络慢，一堆人一进，然后创造一堆线程，然后挂了
18:35 varna: 本来就不该有一大堆线程
18:35 Dove: 只是单纯地想让它并发一下试试看。
18:35 cleamoon: soga
18:35 varna: 有少数的一些就行了
18:35 cleamoon: L-F 风格是什么
18:35 varna: Leader-Follower
18:35 varna: 不太常见，但也算经典的一个风格
18:36 varna: 一个Leader持有多路复用器，接受工作之后变成worker; worker完成工作之后变成follower; leader在转变成worker之后挑选一个follower变成leader
18:36 * lh_mouse stfw 去了。
18:36 cleamoon: 哦
18:36 varna: 更多人喜欢HS/HA样式的东西，L-F的声望相对没那么高
18:36 cleamoon: 食堂反胃？
18:37 varna: 半同步-半异步
18:37 lh_mouse: ==> Starting package_mingw-w64-x86_64-gcc-git()...
18:37 cleamoon: 这个比 worker pool 那类的好在哪？
18:37 Mokou joined channel
18:37 Dove: 我连多线程那章书都还没看，有几个API我都不知道。
18:38 varna: worker pool很多时候需要一个队列层
18:38 varna: 当然我觉得L-F并不那么彻底
18:39 varna: 实际上我希望p7这类actor-like并发解决的问题，就是“付出一定的性能代价，顺序地编写多数工人对等的并发程序”
18:39 tutu_wind: +
18:39 cleamoon: 哦，听起来不错
18:40 tutu_wind: varna: L-F在哪里用的多呢？
18:40 varna: tutu_wind: 我只听说过有人拿这个做了支付中间件，我不觉得它适合并发量大的前端
18:41 iyzsong: 话说go里处理signal都不用回调 要开个goroutinue在那里等个chan - -b
18:41 varna: iyzsong: 回调很难看
18:41 varna: p7典型的并发场景是一个upstream router和一大堆对等worker
18:41 iyzsong: 但是这样感觉也是有点奇怪
18:41 varna: 不
18:42 varna: 你先入为主地认为异步到达的东西不该同步书写，因为要等
18:42 iyzsong: 大概是被回调洗脑了..
18:42 varna: 然而我觉得一条独立的控制流等待一个事件发生是正当的
18:42 iyzsong: 嗯嗯 = =
18:42 varna: 至于所有这些控制流如何并发，交给适当的运行时去实现
18:42 tutu_wind: +
18:43 varna: 顺序书写这样的控制流有一个好处：你不必用额外的状态机对象维护状态
18:43 varna: 你所写下的调用，就构成了你的状态变迁
18:43 tutu_wind: 这个算是CSP的思想吧
18:43 varna: 这只是CSP中的S
18:44 tutu_wind: 哦哦
18:44 Youmu: :o
18:44 varna: 也即，你应当能够确定并发控制流中哪里是顺序的
18:44 varna: Hoare在CSP那本著作里大量地用trace分析，就是这个道理
18:44 varna: 但如同我刚才说的，如果你放弃了事件驱动框架，那么没人来帮你分拣异步事件了
18:44 varna: 你需要廉价IPC
18:45 tutu_wind: 额，这个，不知道了
18:45 varna: 所以我对p7的定位是很多时候需要有upstream router
18:45 varna: 举例来说，有一个coro负责收集其他所有workers对上游业务的请求，把它们中转到上游，然后把响应发给对应的worker
18:46 lh_mouse: poseidon 的解决方案同样是 fiber 不过照样会踩进 interleaving 的坑。
18:46 varna: 那么这样的并发实现应当提供通信机制
18:46 varna: 目前p7的坑是一coro的阻塞限于自身为目的的一切IPC+一描述符
18:47 varna: 如果你要做全双工连接，就得用两个coro
18:47 varna: 当然也有稍好的情况，比如 upstream <-> coro <-> remote_client
18:47 tutu_wind: 还可以这样
18:47 varna: coro <-> remote_client这里如果明显比upstream <-> coro慢，那么你可以手工控制
18:47 lh_mouse: poseidon 的 fiber 不负责 IO 所以 O 并不需要 fiber，无脑写就可以了。但是 I 只能被动等回调。
18:48 varna: p7不强求一定走它提供的iowrap（这个iowrap把fd挂上本地调度器的epoll）
18:48 varna: 但如果不用的话，情况需要限定得比较严格
18:49 varna: 小耗那个fiber在poseidon中的地位应该不那么高
18:49 varna: 像是个小工具
18:49 tutu_wind: 恩，有看到过
18:50 varna: 但我说个自己的感受啊
18:50 varna: 多数时候，我觉得事件驱动框架更可信些
18:50 varna: 但我觉得现行某些面向网络的事件驱动框架，在事件的触发-响应上做得不必要地正交
18:51 tutu_wind: 怎么讲呢？
18:51 varna: 提一个可能的场景：客户端的连接被接受下来了，现在我们要等连接可读；然而如果连接长时间不可读，就触发超时把它杀了
18:52 varna: 在设计框架的时候，如果你单独按顺序触发超时事件和IO事件，这里必须有约定
18:52 varna: 不然如果每个事件都有单独的钩子，用户就得费力气考虑对象的合法性
18:52 Youmu: :o 这个好
18:53 Mokou: 去吔饭
18:53 tutu_wind: 听得有些云里雾里啊
18:53 tutu_wind: 还是修炼不够啊
18:53 tutu_wind: varna: 羊驼酱这里的用户是指使用框架的开发者么？
18:53 varna: 这里的角度在于，你考虑的事件是“按触发条件分类”，还是“按所依托会话的生存情况分类”
18:53 varna: tutu_wind: 是
18:53 varna: 这里我说的用户都是库的用户，最终用户是客户端
18:54 CyrusYzGTt quit:Ping timeout: 276 seconds
18:54 CyrusYzGTt joined channel
18:55 varna: 而我们反过来说一嘴，假如并发框架是CSP/Actor的，可能你在这条连接上就只会缺大脑地写一句 recv on some_fd until timed out
18:55 tutu_wind: 哦，我目前还是是这样。。。
18:55 varna: 不，我是说这样就足够了
18:56 varna: 因为运行时接管了一部分细节
18:56 tutu_wind: 恩，这样啊
18:57 varna: int status = p7_iowrap_timed(fd, P7_IOMODE_READ, recv, some_buffer, some_size_limit, some_flag, timeout_in_ms); // 我自己就类似这么写
18:58 tutu_wind: 然后判断status返回值？
18:58 varna: 假定有合适的返回值
18:58 varna: p7_iowrap_timed这个东西只适合recv/read这样的函数
18:59 varna: 我开放了定时器创建-关联的函数，万一这些不合适，可以就地写一个wrapper
18:59 varna: recv send read write这样的函数返回值都是非负或者-1
18:59 tutu_wind: soga
19:00 varna: 所以我把p7_iowrap_timed当作一个粗糙的demo来用，它在超时的时候实际上会给出-2
19:00 varna: 但这不是必要的
19:00 tutu_wind: varna: 因为有wrapper？
19:01 varna: 不；定时器创建-关联，IO挂起，控制流切返，这三件事情是库的用户也可以知道的
19:01 varna: 而p7实际上没有提供*任何*IO完成动作
19:02 tutu_wind: 喔喔
19:02 varna: 完成这样一个带超时的监听，需要用户做三件事：1) 创建一个关联到本coro的定时器； 2) 按fd和读写模式执行挂起； 3) 等待返回
19:03 varna: 返回后他们可以通过别的函数了解自己获得控制权的原因是否包括一个超时
19:04 tutu_wind: wow
19:05 tutu_wind: 感觉内部细节实现好深啊。
19:05 varna: 不深，因为这件事情很危险
19:05 tutu_wind: 一时半会想不到
19:05 tutu_wind: 阿勒
19:05 Dove: 听不懂，先mark，撸我的基础书去了。
19:05 varna: 你可能会察觉到，这个timer和IO等待是强耦合的
19:05 tutu_wind: 对啊
19:06 varna: 多说细节污染视听，但如果你看p7的调度器实现，会发现timed out跟IO就绪这两种事情的处理方式，沿用了某些事件驱动实现里的规矩
19:06 varna: 在一趟resched中，一定先处理超时，再处理IO
19:07 varna: 但timer并*不*真正挂起一个coro
19:07 varna: 这里是极其恶劣的强耦合
19:08 varna: 因为它强迫自行组织API的用户了解这种程度的细节
19:09 varna: 糖果经常嘲笑我提“库的用户”的时候说的都是我自己，一点都不错
19:09 Dove: 别人看不懂你那坨东西
19:09 varna: 这里如果用包装好的接口则不会有问题，否则作死就会死
19:09 tutu_wind: varna: 糖果？
19:09 varna: tutu_wind: 一个朋友
19:10 varna: Dove: 我给别人写的程序大多都是一行一行的
19:10 Dove: 2333
19:11 cleamoon: 只有一个人用的库，也不错呀
19:11 varna: 而且不太会用脏话一样的缩写
19:11 cleamoon: 而是全用 poi 这种缩写
19:11 tutu_wind: 哦哦，恩，感觉今天从羊驼酱这里又学到东西了
19:12 varna: p7基本是失败品，不过好歹从p7的失败中能获得一点教益
19:13 varna: 另外提一嘴
19:14 cc joined channel
19:14 varna: 做IPC可能会涉及到这样的步骤：创建一个报文对象，把它投递给别的并发成分；等一个报文对象，把它从某处取出来
19:15 varna: 这里你如何处理报文对象的生存期，对C用户来说是个异常坑爹的问题
19:15 tutu_wind: 啊，这个和消息处理也是一个问题
19:15 varna: p7的做法是要求实现一个侵入式接口，这迫使传递对象=传递对象本身
19:15 varna: 这个被传递的对象可能需要有更长的生存期
19:16 varna: 而给对象续命这件事，C极不擅长
19:17 tutu_wind: varna: 不理解给对象续命
19:17 cleamoon: 因为叫 c++ 所以擅长 +1s？
19:17 varna: 你在一条控制流A所走过的作用域S上创建了一个对象o
19:18 varna: 然后在S中把它通过某种IPC接口传递给了另一条控制流B, B将在作用域S'里收到它
19:18 varna: 那么第一个问题：B收到的是S中的o么
19:19 varna: 如果是，如何保证o在A离开S之后生存
19:19 varna: 如果不是，如何保证收到的o'是正确的
19:19 varna: 这件事对C来说很困难
19:19 tutu_wind: 哦，这样说来，是
19:19 varna: 当然如果你是大事小事都一个malloc解决的C厨就当我没说
19:20 cleamoon: 没有多少内存是一个 malloc 没法解决的，如果有，就来两个
19:20 Dove: 只能一个malloc解决的躺枪。
19:21 varna: Dove: 所以说你为何执念C或者C艹……
19:21 varna: 横竖都是一个new, 你自己不管内存的话JVM会替你管的
19:21 Dove: 我喜欢手动free/delete
19:22 Dove: orz
19:22 varna: Dove: C艹程序比起C的改进之一就是不少时候不用傻乎乎地去手写free
19:23 varna: 手工在每个可能需要摧毁对象的地方写一个destroy, 你不觉得污染环境么
19:24 cleamoon: 我超讨厌 debug 半天发现没 free
19:24 varna: cleamoon: valgrind
19:24 cleamoon: varna, 不会用
19:24 varna: 开-g保证你有调试信息
19:24 Dove: 我就先学一下C和C艹怎么搞嘛，不行再java。
19:24 varna: 然后看他的报告
19:24 cleamoon: 我哪天试试
19:25 varna: 如果有错误，它会提示你用--leak-check=full看细节报告
19:25 Mokou: 我居然没找到台北的GDP数据……
19:25 varna: 有调试信息的程序可以精确到调用栈上
19:25 varna: 对很多小测试很好用
19:26 varna: Dove: 我没提出建议，只是让你看看你自己的矛盾之处
19:27 cleamoon: soga
19:27 cleamoon: 那似乎不错
19:27 varna: valgrind的速度不错，但本身这种内存检查技术对debugee的速度危害极大，不适合调并发的错误
19:27 cleamoon: 听起来的感觉就是羊驼子给了太多建议经常被喷.....
19:28 cleamoon: 哦，并发的再说吧
19:28 varna: 这里多数都是成年人，哪有一听就信的……大丈夫
19:28 cleamoon: 反正我用的并发的东西一般结构都很简单
19:30 tutu_wind: 结构简单有时未必是坏事
19:30 tutu_wind: 还是看场景吧
19:31 varna: 并发的事情没什么特殊爱好的话尽量用现成的吧
19:31 varna: 不然太操心了
19:32 cleamoon: 特殊爱好：极限速度
19:32 cleamoon: 结构简单一般都是好事吧.....
19:33 varna: 自己写的东西都欠摔，速度没法说
19:35 Mokou: 噫
19:35 Mokou: 不知不觉鹿岛都Lv93了……
19:36 varna: ^ 肝帝
19:36 Mokou: ^ 肝帝
19:36 varna: 你看我哪里肝了
19:36 Mokou: 你后宫佳丽三千
19:36 varna: 最近我家保持升级势头的也就稀欧一
19:36 Mokou: 你看稀欧一都在升级
19:38 cleamoon: 我一直在升级的只有潜艇
19:38 varna: 稀欧一就是潜艇
19:38 varna: 401
19:39 varna: 现在稀欧一还差13k+经验就125了
19:39 Mokou: OTL
19:39 Mokou: 125，何等可怕
19:39 Mokou: 我大和才124
19:40 varna: 壕也不用大和刷2-3的
19:40 cleamoon: orz
19:40 Mokou: 这肝帝居然去2-3
19:40 varna: 我缺桶
19:40 cleamoon: 401只有 42级
19:40 Mokou: 你桶比我多
19:40 varna: 昨晚我甚至在2-4沟里捞了一个桶
19:41 varna: 咱俩不用比，那桶数能不能过关都是问题……
19:41 Mokou: _(:з」∠)_
19:41 cleamoon: 2-3有桶？
19:41 varna: 2-4
19:41 Mokou: 咸吧
19:41 varna: 上路西沟有桶
19:41 cleamoon: orz
19:41 Dove: 啊，明年这个时候我一定不会还这么渣了。
19:41 varna: ^ ...
19:42 Mokou: 啊，明年的这个时候我大概在家里蹲
19:42 varna: 啊，明年的这个时候我应该也没有女朋友
19:42 Mokou: ^ 机智的FLAG
19:42 varna: 诸君行个方便，帮我介绍一个呗
19:42 Mokou: 明年这个时候羊驼子就不是处男了
19:42 Dove: 你有女炮友就够了，要女朋友干嘛。
19:42 cleamoon: 啊，明年的这个时候我大概在撸管
19:43 Dove: 话说阿里的美女很多是真的。
19:43 Dove: 你可以考虑开个后宫
19:43 * varna 一脸懵比
19:43 Mokou: “何不食肉糜？”
19:44 Mokou: 虽说惠帝到没恶意
19:44 varna: “何不用火箭弹？”
19:44 cleamoon: 我日，chrome 不支持 32 位系统了
19:44 varna: cleamoon: linux就别32位了啊……
19:44 Mokou: “何不配CI？”
19:44 Dove: 我的chorme用得好好的。
19:44 cleamoon: varna, 我的电脑就是32位的呀...... 1G内存.......
19:44 Mokou: 你的是Chorme
19:45 varna: cleamoon: puuuu?
19:45 Mokou: cleamoon: 上古CPU？
19:45 Dove: chrome
19:45 varna: Mokou: 233333
19:45 cleamoon: intel atom z520
19:45 cleamoon: 石器时代的人们用的cpu
19:46 Mokou: 噗
19:46 Mokou: 你在用什么
19:46 varna: 换个吧，你算东西不蛋疼么……
19:46 Dove: 绅士要哭穷了。
19:46 cleamoon: 哦，我有个当成台式机在用的笔记本
19:46 varna: 多一些内存可能就多一个进内存的散列表，能节省不少时间
19:46 Dove: 不是，幼女要求包养了。
19:46 cleamoon: i5 的 cpu
19:46 varna: i5挺好啊
19:46 varna: 我这个才i3呢
19:47 cleamoon: 很多算法内存大一倍速度就能大一倍
19:47 cleamoon: 平时撸码打算用这个 atom 的
19:47 Dove: 这是什么原理。
19:47 cleamoon: 什么都还好，就是上网捉急....
19:47 xxxxxxxx joined channel
19:48 cleamoon: 比如最基础的 monte carlo
19:49 varna: 吃东西去
19:49 guowang joined channel
19:49 varna: 晚上回来给buffer chain加点料
19:50 guowang: varna: 大神我写了一个简单的kernel(目前只有两个内核线程,轮训调度), 我想要支持多线程,不知道该怎么做.
19:50 varna: guowang: 你为何没有轮转式的调度队列？还是你没写创建进程的API?
19:50 guowang: varna:起码以后能支持, 我想知道 如何找这方面的拓展材料,我见你写过一个用户态线程库
19:51 varna: 内核态我也写过，但我不知道你哪里出了问题
19:51 varna: 能否再仔细地说一下
19:51 cleamoon: 怎么这么多喜欢写内核的
19:51 varna: 你的内核线程是怎么创建的，它们仅仅是共享地址空间的不同的上下文？
19:52 guowang: varna:不同上下文
19:52 guowang: varna:我还没有做内核态多线程呢...  
19:53 varna: guowang: 也许你在osdev forum (http://forum.osdev.org/index.php) 和相关的维基上能找到点东西，不过我以前有个学别人教程的旧物也许你可以试着参考（ https://sourceforge.net/projects/viperix/ ）
19:53 varna: 当时我弄了个fork
19:53 Mokou: 然后被我抄走了
19:53 varna: 搞多进程，基本上你需要做好几件事情的准备
19:53 varna: 第一，准备上下文切换的代码（你肯定有了）
19:53 guowang: osdev 我看了, 不过看的有雾水. = = 我还没有实现系统调用呢...
19:54 guowang: varna:对有了 
19:54 varna: 第二，写好irq调用的封装
19:54 varna: 因为你的重调度要在irq handler返回*之后*发生
19:54 guowang: varna:有这个接口 register irq
19:54 varna: 我以前那个写得差，这里小心
19:54 varna: 不止是接口
19:54 varna: irq可能引发重调度的，这个观点你可以在minix里找到
19:55 guowang: 啊 没有看过minix, 我准备看一下xv6
19:55 varna: 第三个要准备的事情就是地址空间布局
19:55 varna: 一定要明确你的内核空间在哪，不然你没法真实地创建具有不同地址空间的进程
19:55 guowang: 地址空间布局有什么特别的地方么?
19:55 Dove: 这个我就没搞懂，所以我就没写fork。
19:55 varna: 没什么特别的
19:55 varna: 只是你别搞乱
19:55 varna: 32位可以模仿3GB用户+1GB内核
19:55 Dove: 好，我不捣乱。
19:55 guowang: = = 我按照4G的布局 然后写死的
19:55 varna: 64位可以沿47位地址对半分
19:56 varna: 写死没关系
19:56 varna: 宏内核很多地方可以是写死的
19:56 guowang: 对 1G的内核, 3G的用户空间.
19:56 varna: 但你保证自己能拷贝页表就行
19:56 guowang: = = 你的小内核做到什么程度了?
19:56 varna: 这些都做好了应该可以直接开弄抢占式多进程了
19:57 guowang: 我想做的是unix like,不过posix定义的system call 还不知道怎么实现 = = 囧
19:57 varna: 我那个玩意做了0环3环切换，有个走syscall的fork, 还有个能在我当时的LAN下ping一下谷歌的网络demo
19:57 guowang: varna:我擦 有网络?!
19:57 varna: 不过我记得当时irq 7会瞎丁日fire
19:57 varna: 只有个残缺的NE2K网卡驱动
19:57 guowang: = = 驱动都支持!?
19:58 varna: ARP是废的，IP层没有，ICMP我手写的包
19:58 varna: 那只是个demo
19:58 varna: 不涉及任何正经的IO
19:58 guowang: 我是有这个打算实现一个小的tcp的... 可是目前小内核 连fs都没有.
19:58 Dove: fs OTL
19:58 varna: 你先试试做内核态的进程看，我觉得可能你就差一些拷页表什么的工作了
19:59 varna: 硬编码的内核线程能动挺说明问题的
19:59 Dove: 我也就差一些拷页表的工作了，然而脑子里一团浆糊。
19:59 guowang: Dove:需要拷贝页表?
19:59 varna: 进程要映射
20:00 varna: 如果你要创建进程，用户栈必须独立，内核栈必须单独创建（这你肯定做了）
20:00 guowang: 对啊
20:00 varna: 用户栈比如说在3G以下向低址生长
20:00 varna: 这个地方的页面是你必须从物理内存里拿出来的
20:00 guowang: varna:不对, 我还没有用户态
20:01 varna: 3GB以上的空间直接照搬物理地址
20:01 varna: 大丈夫
20:01 varna: 现在没有没事
20:01 varna: 你现在的进程线程肯定都用3GB以上的独立内核栈
20:01 guowang: = = 恩
20:01 varna: 每个分两个4KB页应该足够了
20:01 varna: 一页都行
20:02 cc quit:Quit: My Mac has gone to sleep. ZZZzzz…
20:02 varna: 所以说到头你就差点API, 建议查osdev forum和osdev wiki
20:02 varna: 那里应该能帮你找到些资料
20:02 varna: 但恐怕没法帮你走很远
20:02 guowang: osdev 里面的东西对目前的小内核都有点遥远...
20:03 varna: 那里有些基础的资料吧
20:03 varna: 我记得有些讲页表怎么弄、TSS怎么弄这样的东西，有这些可以了
20:03 varna: 你不是有两个能动的线程了么
20:03 guowang: = = 是的, 对
20:03 guowang: 进程
20:03 varna: 进程啊，那更好
20:04 varna: 写个fork吧
20:04 varna: 顺便整理一下你的物理内存管理器
20:04 varna: 保证它能抓物理页面出来，然后生成页表项什么的
20:04 Dove: 哦，那你比我更进一步了，我晕死在不同的地址空间上了。
20:04 guowang: = = 你们都写过kernel啊
20:05 * Mokou 只写过半个
20:05 Dove: 我只是抄过前面一点工作
20:05 varna: 不过我看你一开始问了两个问题，第一个是你要支持多线程，第二个是你想知道什么地方能找资料，我不知道我跑题跑了多远
20:05 Dove: 后面的根本没懂就没抄。
20:05 guowang: varna:好的 我去理清一下fork过程,整理一下代码.
20:05 varna: ok那我先吃饭去了
20:05 varna: 武运
20:07 guowang: 还是要看 系统调用 怎么实现哎 
20:08 varna: 哦对，物理内存方面，我本科时候写过一个邪物，也许你可以胡乱当个笑话看
20:09 varna: 链接: http://pan.baidu.com/s/1geUY37t 密码: dak8
20:09 varna: 邪门外道，非宏内核，仅供参考
20:12 iyzsong: orz 膜拜熟练的人们
20:12 cleamoon: 都好熟练呀
20:15 cleamoon: 日，又下冰雹了
20:17 Dove: iyzsong: 你的面试咋样了。
20:17 iyzsong: 等通知 明天还有一家 = =
20:17 Dove: 啊啊啊，我也想面试啊，我也想工作啊，可是我好菜啊。
20:18 Dove: 妹的，撸去了。
20:27 lhanjian: 一二一
20:27 lhanjian: 一二一
20:27 lhanjian: 一二一
20:27 cleamoon: 立定
20:28 lhanjian: cleamoon: 哎哎哎，果然绅士还是被天朝洗脑了
20:29 cleamoon: 我也是参加过军训的
20:30 lhanjian: cleamoon: 立正！
20:30 cleamoon: gay 们 辛苦啦
20:31 Dove: 为淫民服务
20:31 lhanjian: cleamoon: 为幼女服务！
20:32 cleamoon: 毫无违和感
20:33 lhanjian: cleamoon: uccu
20:41 cleamoon: 其实应该说一些更有现代气息的，比如“小弟们好”“老大好”，“小弟们辛苦啦”“为人民币服务”
20:48 Mokou: 结果主动送杂志也会被从房间里赶出来么
20:48 Mokou: 看了感觉真可怜
20:51 lhanjian: varna, http://zhihu.com/question/43556479/answer/95884989
20:51 varna: vczh...
20:53 tutu_wind quit:Quit: WeeChat 1.2
20:53 varna: lhanjian: 实际上我们可以换个说法： for( { initial } )( { blah; } )( { step; } )
20:54 varna: initial被绑定到blah, blah里有自由变量
20:54 lhanjian: initial 被绑定到 blah？
20:54 lhanjian: 这能行？
20:54 varna: 这么说吧
20:54 varna: 这要求语言能够容忍自由变量
20:55 varna: 当然不是无限的容忍：任意足够完整的表达式，应当是个closed term
20:55 varna: 如果在一个编译单元完成编译之后仍然能发现未束缚的自由变量，编译失败
20:59 varna: ok又是二十桶
20:59 Mokou: OTL
20:59 varna: 田中老贼骗我耗材，然而我继续不屈斗争
21:00 cleamoon: 对了，富奸老贼恢复连载了......
21:00 varna: 没事他总这样
21:00 Mokou: ……他打6-4了？
21:00 varna: 也许是6-4终于打崩，想画两周换换心情了
21:00 Mokou: 就是这个意思
21:00 varna: 不知道若木dalao身体状况如何（笑）
21:01 cleamoon: 干脆推荐校长玩舰女人吧
21:02 Mokou: 然后校长打了春活，之后倾尽全力搞出了机器学习封锁舰C
21:02 varna: 不会的
21:03 varna: 校长刚开始跑桶，就被病魔趁虚而入
21:03 varna: 我相信这病魔不至于怂到连个舰狗都搞不死
21:03 Mokou: 一 转 攻 势
21:08 Dove: lhanjian: 爆
21:09 Dove: 爆炸吧，现充们！
21:09 cleamoon quit:Ping timeout: 240 seconds
21:09 Dove: ^大绅士爆炸了。
21:21 iyzsong: m.m
21:23 Dove: iyzsong: 我只敢投月薪4k-6k的职位，6k-8k的看着投，8k以上的都要经验要不就是windows。
21:23 guowang: = = 写个二叉树遍历一半crash了 .. ..
21:23 guowang: https://paste.fedoraproject.org/357338/46107193/
21:24 guowang: = = 求指教 
21:24 iyzsong: Dove: orz
21:24 varna: guowang: 虽说我在点开链接之前推荐你无脑gdb run看炸点
21:25 Dove: guowang: C艹为什么不用模板。
21:25 varna: guowang: 为何你只查了左边
21:25 guowang: 左子数 遍历到最深然后炸了
21:25 varna: Dove: 做人为何要捣乱
21:25 Mokou: 23333333
21:25 Dove: varna: 我又哪里捣乱了。
21:26 guowang: Dove:模板对我这样人来说没有好处
21:26 Dove: guowang: 不懂
21:26 varna: guowang: 你确定是炸在最左了？调试器怎么说？
21:26 guowang: va
21:26 varna: Dove: 别人程序爆炸你来个模板，开什么玩笑
21:27 guowang: varna: 遍历出了一半了 然后往右边时候炸了
21:27 Mokou: “我打5-4又掉沟了”“上大和”
21:27 varna: guowang: 因为右边是NULL么
21:27 guowang: 应该是
21:28 varna: guowang: 我只在43行看到你检查左子树，你给我看的代码不是完整的吧
21:28 guowang: https://paste.fedoraproject.org/357339/10723111/
21:28 guowang: varna:这个是main
21:28 varna: 不，我是说你的数据结构操作
21:29 guowang: 那就是我没有写完整 = =
21:29 varna: 你没查右子树是否空就遍历进去了
21:29 varna: 它肯定会在某个右侧叶子上炸掉
21:30 guowang: if (node->left == NULL && node->right == NULL) {
21:30 guowang: va
21:30 iyzsong: 看不懂你这traverse.. 只查node就ok了 => https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_2
21:30 varna: 差远了
21:31 Dove: Traverse_Before是打算前序遍历？
21:31 guowang: 对啊
21:31 varna: void preorder(binary_tree_node *node, T (*operation)(binary_tree_node *)) { operation(node); node->left && preorder(node->left); node->right && preorder(node->right); }
21:31 guowang: 我也感觉死在遍历右边的过程中 因为遍历了一小半了
21:31 varna: ^
21:31 varna: 保证没空根的话就三个步骤啊
21:32 Dove: node->left == NULL >> node == NULL
21:32 varna: 你看我上面发那一行
21:33 varna: 访问结点；遍历非空左侧；遍历非空右侧
21:33 varna: 没了
21:33 varna: 哦手滑
21:33 varna: void preorder(binary_tree_node *node, T (*operation)(binary_tree_node *)) { operation(node); node->left && preorder(node->left, operation); node->right && preorder(node->right, operation); }
21:33 Mokou: 噫，这短路
21:33 Mokou: 我还是习惯写个if
21:33 varna: 其实这是错的
21:34 varna: 因为你短路不出void
21:34 Mokou: _(:з」∠)_
21:34 varna: ({ blah(); 1; }) // ok
21:34 Stevearzh joined channel
21:34 Dove: 检查节点是否非空 访问节点 递归左子节点 递归右子节点 完毕。
21:34 varna: guowang: 所以要不要给你就地写个能用的demo
21:34 varna: 还是你自己就ok
21:36 Dove: guowang:  Traverse_Before 里面的 if (node->left == NULL) 改成 if (node == NULL)
21:36 guowang: 修正好了
21:37 guowang: varna:其实就说左边没有判断NULL与否 , 非常感谢
21:37 varna: _(:з」∠)_
21:37 guowang: node->left && preorder(node->left, operation);
21:37 guowang:         node->right && preorder(node->right, operation); }
21:37 guowang: 这个写法很简洁
21:38 varna: 你选择节约读代码体力的方式来
21:38 varna: 如果你把C写成Perl, 回头会稍微难过一下
21:38 varna: 傻乎乎地if挺好的
21:38 guowang: = = 判断写前面很好懂啊 
21:39 guowang: 我回宿舍啦
21:39 varna: 滥用之后就未必了
21:40 varna: 现在我看p7的代码感觉就是一千多行骂人话
21:42 Dove: 好久没有看到我能看懂的C艹代码了，好鸡冻。
21:42 guowang` joined channel
21:44 guowang quit:Ping timeout: 240 seconds
21:45 guowang` quit:Client Quit
21:46 Mokou: 哦对，前几天我看到个表情
21:46 Mokou: http://picpaste.com/yPCsKeGs.jpg
21:47 iyzsong: (；´∀｀)
21:47 whatofor joined channel
21:49 whatofor_1 quit:Ping timeout: 268 seconds
21:49 Dove: 我这里picpaste在抽
21:50 Dove: 看到帽子了。
21:50 Dove: iyzsong: 捏
21:54 Youmu: iyzsong: O.O
21:54 iyzsong: Σ(´∀｀；)
21:54 Youmu: iyzsong: OuO
21:56 cc joined channel
22:08 hope1: 推荐一下Stephen Crane的诗，虽然估计并不会有太多人喜欢
22:08 hope1: http://public.wsu.edu/~campbelld/crane/cranepoems.htm
22:11 hope1: https://pastebin.mozilla.org/8868218
22:14 iyzsong: orz
22:15 Mokou: _(:з」∠)_我一直读不了外文诗
22:16 lh_mouse: 新编译的 mcf thread model 的 gcc 5.3.1 有没有人想玩玩。
22:17 * iyzsong 没有Windows ʕ•ٹ•ʔ
22:19 * varna 没有windows
22:19 * Mokou 没有windows
22:19 Dove: 我玩 made
22:20 Dove: hope1: 英文诗和现代诗都欣赏不能
22:21 hope1: Dove, 欣赏不来古代诗…… 可能我语文水平不行
22:22 Dove: hope1: 古代诗主要是押韵，不然我也欣赏不来，没那个细胞。
22:22 hope1: Mokou, Stephen Crane的特点就是没有韵律，乱读就好了…… 算是现代诗的开创者？
22:22 Mokou: 主要是押韵……
22:23 varna: HO棠发那首我还满喜欢的
22:23 Mokou: hope1: 不是韵律的问题，英文诗我读不出感觉来
22:23 varna: 不过英文诗我自认为不太擅长读
22:23 Dove: 英文我都不擅长读，别说诗。
22:23 Dove: orz
22:23 hope1: Mokou, 这种现代诗乱读好了。至于能读出感觉的诗，推荐爱伦坡的The Raven
22:24 hope1: wiki上的音频读的就不错
22:24 varna: Black Perl!
22:24 hope1: 找个阴暗的房间，带起耳机
22:24 Mokou: 也不是语调的问题，只是没法引起共鸣
22:24 Mokou: 大概还是语言隔阂了
22:24 iyzsong: (✽ ﾟдﾟ ✽)
22:24 Dove: iyzsong: 捏
22:27 iyzsong: Dove: 我也只敢要8k. 我同学都是1w5起(－－〆)
22:28 Dove: iyzsong: 8k orz，我写的期望薪酬是6k，实习不算。
22:29 lh_mouse: songer 是本科还是研究生呀。
22:29 iyzsong: 本科..
22:30 Dove: 北上广低于6k大概吃住都是问题了
22:30 lh_mouse: 现在应届生都 1w5 了？
22:30 varna: iyzsong: 学力呢？不论文凭
22:30 varna: lh_mouse: 今年开不出一万五
22:30 varna: 但去年真能开出来
22:30 varna: 泡沫巨大
22:31 varna: 简单来说就咱们本科毕业那年，不少怂逼进电商都能开八千
22:31 varna: 此后两年似乎也一路高歌
22:31 lh_mouse: 不懂你们本科的。
22:32 iyzsong: 不懂你们城里人( ；∀；)
22:33 hope1: Mokou, The Raven那个朗读真的超赞，可以配合文本大概感受下。这首是第一次让我对诗产生了什么感觉的
22:34 condy: iyzsong: O.O
22:34 Mokou: _(:з」∠)_等我取得白学学士学位以后去试试
22:34 hope1: 等下，本科生应届15k月薪？
22:35 Dove: nb的话是可以做到的吧。
22:36 Dove: Mokou: 你不读书么？
22:36 Mokou: Dove: 读
22:36 Dove: soga
22:37 hope1: 平均情况呢
22:37 lh_mouse: 怎么平均。
22:37 hope1: 中位数？
22:37 lh_mouse: 一个本科生年薪千万，九个无业，于是你懂的。
22:38 Dove: 比我还渣的都去考公务员了。
22:38 Dove: 没有参考价值。
22:38 hope1: 感觉上其他行业的薪资完全不在一个数量级上？
22:38 varna: hope1: 你看看其他行业的人几点下班
22:39 Dove: IT金融是稍微泡沫了点
22:39 Mokou: 再看看舰C啥时候维护
22:39 Dove: 其他行业也有累的但是工资不高的。
22:39 varna: 日本盛产奇葩程序员
22:39 varna: 蝗国没救的
22:39 Mokou: 先抢走你的巧克力
22:39 hope1: varna, 考虑生物
22:39 Dove: 然而经济不景气，泡沫不起来。
22:39 Mokou: 再给你几百个小钢炮压压惊
22:40 varna: 你对比下维护时间就行
22:40 varna: DMM的运维是半夜和凌晨维护
22:40 varna: 舰C的运维是白天维护
22:40 Dove: 我在想TM努力一年能冲个BAT不？然而我这儿没有BAT的校招。
22:40 Mokou: 国际化（迫真）
22:40 varna: 别只盯着BAT
22:41 Dove: 嗯
22:42 varna: 我说个实话，你不如盯着poseidon看两眼，还踏实点
22:42 Dove: 好的
22:42 varna: 哪儿都有渣人，强行充门面的都是lowb
22:43 Dove: 嗯
22:44 varna: 当然另外说个体感：当你觉得你可以努力一段时间的时候，已经卵用了
22:44 Dove: 效率很渣我很蛋疼
22:44 varna: 无关效率
22:45 Dove: 万事开头难吧，可能搞一搞也就知道大概怎么搞了，我是这么想的。
22:45 varna: 我给你讲个我自己的事情
22:45 Dove: 嗯
22:46 varna: 我大一的时候是个逗比，在图书馆和网上各种查UNIX资料，还抱着莱昂氏看，然而我也没写出卵来
22:46 varna: 所以很多人并不明白为何我推荐JamesM tutorial在10到20天内完成
22:46 Mokou: 看书没写出卵来+
22:46 varna: 少给自己找借口，要么干出来，要么认怂
22:47 Dove: 嗯
22:47 condy: 莱昂氏 是啥？
22:47 varna: UNIX版本6的源代码附分析
22:47 condy: ：o
22:47 condy: 搜到了..
22:47 varna: 当然后来其实有个对应的i386版本
22:47 Mokou: /* You are not expected to understand this */
22:47 varna: ln 2238
22:47 tauruswag joined channel
22:48 tauruswag: 新人报到
22:48 tauruswag: 这个有人聊天？
22:48 Mokou: 有聊天的，不知道是不是人
22:48 tauruswag: 哦哦
22:48 hope1: 有会敲击键盘的碳基生物
22:48 tauruswag: 是人啦，第一次玩 irc
22:48 varna: Dove: 简单来说，我觉得认怂不可耻，但幻想自己通过杀时间能够达到不太确定有没有谱的程度还不如认怂
22:48 * iyzsong 认怂 =_=
22:49 hope1: 死线是第一生产力
22:49 Dove: varna: 好的，不过我还是不打算认怂。
22:49 tauruswag: 我在上海 ，大家在那里 ？
22:49 varna: 死线产生渣码，但有时候速攻有用
22:50 hope1: 虽然我这种严重拖延症患者并无资格这样说……
22:50 * Mokou 在撸吹第一
22:50 tauruswag: taxonomy 是啥意思？
22:50 varna: Dove: 这跟你打不打算无关，也跟你是否有拖延症无关；我可以再讲个事情
22:50 Dove: tauruswag: 西宁
22:50 varna: 我刚上大二的时候，简单看了一眼PHP
22:50 tauruswag: 我是学 mfc
22:50 tauruswag: c++
22:50 varna: 然后我老爹有点好奇，他跟我说，给我五分钟让我考虑一个爬虫该怎么写
22:51 iyzsong: orz
22:51 Dove: tauruswag: 如果不是工作要用，别学那个东西。
22:51 varna: 我没想出来，老爹的结论是我思考太乱了
22:51 Dove: 我思考也很乱
22:51 hope1: varna, 死线搞出可以跑的烂代码，并不指望能一个pass就写得很优雅
22:51 tauruswag: 工作需要， 写股票软件 
22:51 varna: Dove: 这不是借口
22:51 varna: 简单来说，如果你乱，那么你就怂吧
22:52 Dove: varna: 嗯，我试着不乱。
22:52 varna: 试着？
22:52 varna: 别把自己架高之后找台阶下
22:52 Dove: 多思考一下试试看
22:52 varna: 要干的话硬干就行了
22:52 Dove: 嗯
22:52 varna: 干不过就怂
22:52 Dove: 好的
22:53 varna: 这不是建议，只是我个人的态度
22:53 Dove: 我觉得这个态度挺好的。
22:53 varna: 你未必会习惯我的方式，我也不会用这个方式去要求别人
22:53 Dove: tauruswag: 跪股票大神
22:53 varna: 但我只觉得人没必要把自己架高
22:54 Dove: 嗯
22:54 varna: 如果你真觉得自己技术差，你会过得挺滋润的；我就是这样
22:54 Dove: OTL
22:54 varna: 过得滋润不是说有￥，仅仅是说你认栽了
22:54 varna: 该骂骂，该打滚打滚，然而认栽了
22:54 tauruswag: 就是些测试代码 很多， 稳定性要好
22:54 varna: tauruswag: 欢迎，是贴吧来的么？
22:54 hope1: hope1, 好像是强行套了个写文书的模型，放在代码上并不一定管用…… 感觉应该不会想重写可用的烂代码
22:55 varna: hope1: self-reference
22:55 tauruswag: 好像是 baidu 搜索 频道名字的
22:55 tauruswag: 第一次玩 irc
22:55 tauruswag: 好玩吗？
22:55 varna: 欢迎
22:56 Dove: tauruswag: 不懂，没玩过UI。
22:56 iyzsong: 不好玩..
22:56 varna: 对很多人来说未必有QQ好玩，因为协议古老
22:56 Dove: 一般般吧，就是聊天。
22:56 hope1: 正是在self-reference
22:56 hope1: 欢迎
22:56 Matsune: 最不好玩的地方是发图麻烦
22:56 varna: 我用这个只是因为我不太喜欢在IM对话框里看到图片
22:56 varna: 我只想看文字
22:56 Dove: 我讨厌刷图
22:56 tauruswag: >nickserv< identify ****
22:56 tauruswag:  -NickServ- You are already logged in as tauruswag.
22:56 * Matsune 代表了另一种价值观
22:57 tauruswag: 我注册啦，是不是下次就可以用哪个 nick name 啦？
22:57 tauruswag: 求科普 irc 的知识
22:57 Dove: 是的
22:57 varna: 建议读读freenode的FAQ; 下次你上线的时候，仍然需要登陆
22:57 Dove: 用用就会了，不会也无所谓，会打字就行。
22:57 Dove: 我就不会。
22:58 tauruswag: 命令好多的样子
22:58 varna: 即使你注册了nick, 别人也可以用；只不过你有权把用你nick的人踢掉
22:58 hope1: 图片显著降低了信息密度…… 另外有种被喂下去的感觉。可能这样说太矫情了
22:58 Mokou: 先睡，诸君武运
22:58 varna: 强迫他们放弃这nick
22:58 Mokou quit:Quit: 睡觉
22:58 tauruswag: 我是 chat azure 的程序
22:58 hope1: 晚安
22:58 tauruswag: 晚安 
22:58 Matsune: 不过有发图手段也就OK
22:59 tauruswag: xchat azure，  大家用的是啥 程序》
22:59 varna: irssi
22:59 Dove: kvirc
22:59 stardust: irccloud
22:59 Matsune: hexchat
22:59 Matsune: 这里win党相对偏少。？
23:00 hope1: irssi/androirc
23:00 varna: win下面好用的客户端少
23:00 lh_mouse: hexchat 同。
23:00 iyzsong: yaaic/erc + znc
23:01 Dove: tauruswag: kvirc在win下好用一些。
23:01 tauruswag: 我是 Macbook ， 苹果党啦， 已经用 virtual box   ＋  win ＋ visual studio 编程 好多年啦。。。
23:01 iyzsong: 2333
23:01 lh_mouse: 为毛 GCC 的系统头文件里居然有 non-reserved identifier.
23:01 hope1: 据说苹果的IDE还可以啊？
23:01 tauruswag: xcode ？ 感觉一般吧。。。
23:01 Dove: 我个人不用苹果
23:02 Matsune: VS大法好
23:02 Matsune: 虽然其实我不用。
23:02 lh_mouse: x64 http://pan.baidu.com/s/1gf127FP    x86 http://pan.baidu.com/s/1miaTVPA
23:03 varna: (｡･ω･)ﾉ
23:03 lh_mouse: Thread model: mcf
23:03 iyzsong: 不可以 天天崩  测试用例都不能改名子
23:03 Dove: OTL，先跪再用。
23:03 lh_mouse: 改天把 gcc 的内存泄漏修了。
23:03 Matsune: 不过我倒是经常看见有人捧xcode来着
23:03 varna: libstdc艹那个么
23:03 lh_mouse: 还有。
23:04 lh_mouse: libgcc 也有。
23:04 lh_mouse: 它有个 key_create 没 key_delete 。
23:04 varna: 略鬼
23:05 iyzsong: 加个文件还要点几下菜单，比Makefile差远了..
23:05 CyrusYzGTt quit:Ping timeout: 268 seconds
23:05 Matsune: 2333
23:05 varna: makefile太傻
23:06 varna: 如果它能正常地接受依赖项展开，也能省下一部分autocrap
23:07 iyzsong: 至少是能扩展的。。 xcode为用户设计太多
23:07 varna: 我觉得只是需要一个东西来生成傻乎乎的makefile...
23:08 varna: 指望makefile自己从什么破依赖临时文件里读东西出来，一股旧UNIX下水道反出来的怪味儿
23:10 lh_mouse: makefile 应该被干掉。
23:10 tauruswag quit:Quit: Leaving
23:10 iyzsong: (#･∀･) 睡觉
23:10 lh_mouse: 昨天ヲ在 #gcc 把 autocrap 骂了一顿。
23:10 Dove: iyzsong: 晚安
23:10 iyzsong: 2333
23:11 iyzsong: (+_+) 安
23:11 Dove: 我自己写的网络程序连接和通信不需要inetd的服务吧？
23:12 varna: 为何inetd
23:12 Dove: 我就是看到这个东西所以问一下。
23:12 Dove: 没太看懂。
23:12 varna: 夯
23:13 Dove: 他只是在network login提了一下inetd invoke telnetd。
23:13 tauruswang joined channel
23:14 varna: 没事，你看，你还连着网呢，而且你写过几个简单的服务器
23:14 varna: 网络原理你也知道
23:14 varna: 可能你还见过别人开Web服务器
23:14 tauruswang quit:Client Quit
23:15 tauruswag joined channel
23:15 Dove: 我去查查看
23:21 tauruswag quit:Quit: Leaving
23:21 Dove: 哦，懂了。
23:26 Dove: 它只是个监听指定端口的server daemon。
23:28 varna: inetd很糟糕
23:29 Dove: soga
23:29 varna: 在旧时代，它甚至限定1min内调用指定服务的次数
23:30 Dove: 他都是spawn一个进程去搞，大概是要限定的吧。
23:31 varna: 这显然是比较犯二的做法
23:31 Dove: 嗯
23:32 varna: 犯二的东西基本只适合用来临时对付一下服务，比如LAN内点对点做点什么，又懒得真正架服务器
23:32 cc quit:Quit: My Mac has gone to sleep. ZZZzzz…
23:33 Dove: 嗯
23:39 Dove: 我有一点实现细节没懂，如果他是spawn一个进程去对应一个TCP连接，accept返回的fd在子进程里要如何使用。
23:40 Dove: 哦
23:40 varna: ...
23:40 Dove: 等下
23:40 varna: 你fork的时候fd怎么用，你懂的
23:41 Dove: exec可以不关闭fd
23:41 Dove: 我懂了，我不熟练2333.
23:41 varna: 不然你指望古久时代的CGI怎么活
23:42 varna: 先重定向好再走exec系，执行的CGI程序照样能通
23:42 Dove: 哦，书上说是exec之后重定向的。
23:43 Dove: 嘛，这个细节好像影响不大。
23:46 varna: Dove: 举个例子，假如你要把父进程的一个管道重定向到子进程的stdin/stdout两端上，怎么办
23:46 Dove: dup然后openat？
23:47 Dove: 这个直接openat就可以了吧。
23:47 lh_mouse quit:Read error: Connection reset by peer
23:47 varna: 子进程如果是个fastcgi呢
23:47 Dove: 什么是fastcgi？
23:48 Dove: 我去查查看
23:48 varna: StW
23:49 varna: 实际上你都不用想这么多
23:49 varna: 有个最简单的办法验证你的想法：man execve, 查找descriptor
23:50 varna: 你会发现这么段话：File descriptors open in the calling process image shall remain open in the new process image, except for those whose close-on-exec flag FD_CLOEXEC is set.
23:51 Dove: 哦，close on exec之后也要open啊。
23:51 varna: 我意识有点模糊
23:51 Dove: 哦
23:51 Dove: 不用
23:51 varna: 不太理解你在说什么
23:52 Dove: 父进程的管道，对。
23:52 varna: 而且我没记错的话，openat的类型不是int (*)(int, const char *, int, ...)么
23:52 varna: 为何把这玩意牵扯进来
23:53 Dove: 子进程里是打开的。
23:53 varna: 强行开标准输入输出通路的古旧做法基本都是准备管道，分别关一端+dup2另一端，这样出一个单工
23:54 varna: 不知道为何这种地方会被强行跑题成dup和openat
23:54 Dove: 哎呀我傻逼了。。
23:57 Dove: 主要是不熟练。
23:58 Dove: orz
23:58 varna: 所以话说回来，你写fork on connection的时候没怀疑过fd为何有效么
23:58 varna: 这只是个逻辑性问题吧
23:58 Dove: 没有exec
23:58 varna: 演示一个逻辑
23:58 Dove: 我忘了exec之后fd并不会全部关闭，脑袋短路了。
23:59 varna: fork之后fd有效 -> 旧时代fork之后基本要exec -> 古人成天开CGI -> CGI里一大堆Perl脚本
23:59 Dove: 2333
23:59 varna: 那么你想想fd在exec之后该不该活几个
23:59 varna: 我觉得有时候事情可以先顺着逻辑猜猜
23:59 Dove: 我脑抽了见谅。
