00:08 lh_cat joined channel
00:10 tutu_wind: lh_cat: 摸摸头～
00:10 lh_mouse quit:Ping timeout: 264 seconds
00:16 momoka joined channel
00:16 momoka quit:Client Quit
00:17 Flandre_ joined channel
00:20 yzld2002 quit:Quit: yzld2002
01:29 lh_cat quit:Read error: Connection reset by peer
01:40 Flandre_ quit:Quit: Flandre_
01:48 whocares_2 joined channel
01:50 whocares_2_ quit:Ping timeout: 246 seconds
01:53 tutu_wind: 晚安～
01:53 tutu_wind quit:Quit: 碎觉
03:20 StardustX quit:Quit: Connection closed for inactivity
03:25 Youmu quit:Quit: Connection closed for inactivity
04:49 Xilzzerts quit:Ping timeout: 256 seconds
05:01 linearain joined channel
05:01 linearain: Hi
05:06 linearain quit:Ping timeout: 264 seconds
05:31 linearain joined channel
05:33 linearain quit:Read error: Connection reset by peer
08:07 FrankHB quit:Ping timeout: 276 seconds
08:39 FrankHB joined channel
08:45 xxxxxxxx quit:Quit: Leaving...
09:03 Xilzzerts joined channel
09:27 linearain joined channel
09:28 linearain: Hi
09:28 linearain: Anybody alive?
09:32 linearain quit:Client Quit
09:32 linearain joined channel
09:45 linearain quit:Ping timeout: 276 seconds
09:57 lh_mouse joined channel
09:59 tutu_wind joined channel
10:00 tutu_wind: morning ~
10:04 StardustX joined channel
10:42 tutu_wind: lh_mouse, 摸头~
10:58 lh_mouse: tutu_wind, 反摸。
11:13 tutu_wind quit:Ping timeout: 264 seconds
11:14 tutu_wind joined channel
11:21 Stevearzh quit:Quit: Quit...
11:32 xxxxxxxx joined channel
11:35 tutu joined channel
11:35 tutu_wind quit:Ping timeout: 260 seconds
11:36 hatelis joined channel
11:40 hatelis: 工伤，悲剧
11:46 tutu quit:Ping timeout: 240 seconds
11:49 yzld2002 joined channel
11:55 tutu_wind joined channel
12:33 hatelis quit:Remote host closed the connection
13:00 Stevearzh joined channel
13:08 FrankHB quit:Ping timeout: 272 seconds
13:50 hatelis joined channel
13:52 tutu joined channel
13:53 tutu_wind quit:Ping timeout: 240 seconds
14:39 FrankHB joined channel
14:45 varna joined channel
14:56 tutu quit:Ping timeout: 245 seconds
15:05 varna: hatelis: p7稍稍变化了一点接口，移除了一个手滑推送的本地分支
15:08 hatelis quit:Remote host closed the connection
15:10 hatelis joined channel
15:10 hatlist joined channel
15:12 hatelis: varna, 以前没有sleep/timer的么？
15:12 varna: p7_timed_event是不关联到coro的
15:13 varna: 现在p7_timed_event和p7_timed_event_assoc都返回使用根分配器的对象
15:13 varna: p7_timed_event_immediate如果不知道是什么就不要用
15:13 varna: 用法参见libp7.h
15:14 varna: sleep其实一直没有，我不喜欢睡着等
15:14 varna: 如果需要模拟睡眠的话，可以自行阻塞recv
15:14 varna: 然后等唤醒
15:26 hope1 joined channel
15:27 hatelis: varna, 为了让本协程单纯地睡过去特定的时间，就没法做到了？
15:29 varna: hatelis: 我没做自行阻塞的接口
15:29 varna: 这里是可以争论的，因为我并不觉得这里是我仔细考虑之后的结果
15:30 varna: 目前的所有阻塞都基于钦定的理由
15:30 varna: coro或者因为无法执行工作而阻塞，或者从自己控制流的观点来看在执行工作
15:32 hope1 quit:Ping timeout: 260 seconds
15:33 hatelis: 是了。没法子睡过去，这感觉很奇妙。如果羊驼子不希望让sleep的实现是个很特殊化的东西的话，应该把它的实现做成，自行阻塞在recv上，在另外一个coro上弄个timer send，
15:33 hatelis: 不过我感觉有点接近于golang的select了
15:33 varna: recv是可以带超时的
15:33 hatelis: 那就没关系了
15:33 varna: 所以你看我没做select
15:33 hatelis: golang的select感觉不是个好的设计，而且实现的性能问题也挺糟糕的。
15:33 varna: select其实来自Ada
15:34 varna: 但我不知道性能具体如何
15:34 varna: 就我个人的观点而言，我觉得一个好的select应该更进一步：它是一个黑板模式的模式匹配
15:35 varna: 不过p7的recv单纯就是收取就绪邮件或者选择放弃
15:35 FrankHB quit:Ping timeout: 272 seconds
15:35 varna: 如果不想阻塞，我还提供了一个一定不阻塞的邮件收取
15:36 varna: peek我认为没必要，因为用户可以选择把不愿意处理的邮件积压在自己可见的结构里
15:37 varna: 只要他们保证顺序，那么顺序就被保持了
15:37 hatelis: 是了。有timeout的recv，那么搞出select的意义就少了一个。
15:38 hatelis: varna, 同意。反正队列的util给他们了
15:38 varna: 用户用自己的也行
15:38 varna: 总之随意
15:39 hatelis: 对。
15:40 hatelis: 那么，没有select。羊驼子希望用户怎样处理多端对这端的响应呢
15:40 hatelis: 哦，白痴了
15:40 varna: 自带的
15:41 hatelis: 你有按名的recv，让那些端按名字填上就行了
15:41 hatelis: 按名的send
15:41 varna: recv方目前没法匹配出发端
15:41 varna: 因为发端很可能是不带tag的
15:41 varna: 我的想法是如果需要这类的东西，就自己封去
15:42 hatelis: 嗯
15:42 varna: p7的消息控制域很小，不放这类不明正体的信息；但搭载这控制域的实际邮件可以拿出来之后再分拣
15:42 varna: p7_recv相关的接口只提供了最原始的受信-收信功能
15:43 varna: 你说是原味主义也行，说是偷懒也行
15:51 hatelis: 只是突然想起那个nanomsg。羊驼子可以大概思考下，http://tim.dysinger.net/posts/2013-09-16-getting-started-with-nanomsg.html 这几种模式，用p7实现起来会不会太丑陋
15:53 varna: 会的
15:53 varna: 倒不是写起来丑
15:53 varna: 是我想起来就觉得模式本身难看……
15:53 varna: 不过单纯就通信而言，我觉得p7的好处只有一点：东西可以顺序写，稍微干净点
15:53 varna: 坏处则是需要一些封装
15:54 varna: 而且根源上是难看的
15:54 varna: 而且如同以前我说过的，我完全不打算掩盖本机和远程的差别
15:56 hatelis: 倒也不必掩盖。
15:56 hatelis: nanomsg也没掩盖吧
15:57 varna: 所以其实需要下面这些辅助设备
15:57 varna: 第一，一个select类似物，可以根据用户消息里的tag分拣
15:57 hatelis: 其实本机也分 多进程间 和 只有一个进程的多coro间
15:57 varna: 第二，一个本地-网络路由方法，用一点点的数量搭载
15:57 varna: 第三，其他辅助通信
15:58 varna: 这三件事情都是库的用户该做的
15:58 varna: 进程之间的通信只要保证能适配上p7就行
15:59 varna: 比如说，共享内存不会阻塞所以随便写，而套接字、管道之类走VFS的可以直接挂上IO监管
15:59 hatelis: 有空（嗯……渺渺无期）我弄弄看
16:00 varna: (｡･ω･)ﾉ
16:01 varna: _(:з」∠)_不知不觉我听了一小时朝鲜神曲……
16:02 xxxxxxxx: 啥神曲?
16:03 xxxxxxxx: 那个排插撸?
16:04 varna: +
16:04 varna: 其实里面有一个不涉及工口的日文空耳不错
16:04 xxxxxxxx: 看不懂...
16:04 hatelis: varna, int nn_recv (int s, void *buf, size_t len, int flags);
16:04 hatelis:  
16:05 varna: 这都让人不忍直视了
16:05 xxxxxxxx: hatelis: 你的客户端是保留空行的么?
16:05 varna: ssize_t xx_recv(int s, void *buf, size_t len, int flags); 至少该是这样
16:06 xxxxxxxx: 啊 有个空格...
16:06 hatelis: xxxxxxxx, 保留的。这样有基本的格式
16:06 varna: 而且这其实就是recv(2)...
16:06 hatelis: xchat
16:06 hatelis: varna, 记错了。羊驼子说的是ssize_t->int 和 nn_freemsg 这两个多余的设计
16:06 varna: http://www.bilibili.com/video/av555667/ 这个很好的
16:07 * xxxxxxxx 不指望irc上能表现格式...
16:07 varna: 现在我甚至要求用户释放自己创建的timer
16:07 varna: 谁弄的对象谁来管，内部对象尽量不让临时的走根分配器
16:07 xxxxxxxx: 我现在用的这个发言和用户名都不是分开对齐的
16:09 hatelis: varna, 还是羊驼子这种轻薄的封装的好。
16:10 varna: 有个最大的坏处：没卵用
16:10 varna: 不节省体力是很麻烦的
16:10 varna: 只适合有闲的人玩票
16:13 hatelis: 如果需要的话，大不了再给弄一套util。有闲的直接用low-level API，没闲的用util上的节省体力
16:13 varna: 二次创作（笑）
16:13 varna: 这么说也行
16:14 hatelis: oh。想起来了，好像win是ssize_t的对么
16:14 hatelis: 没有ssize_t
16:14 varna: 噗噗
16:15 hatelis: nanomsg这伙计哪怕是和BSD socket一样的类型都要加个nn_似乎是为了让win能用上
16:15 varna: ...
16:15 varna: int32_t呢
16:16 lh_mouse: hatelis, poseidon 也不支持 coro 的 sleep。
16:16 xxxxxxxx: http://img.2chcn.com/2016/01/NCTMCe4.jpg
16:16 hatelis: varna, 不知道vs2015有没有支持C99……
16:17 lh_mouse: hatelis, 如果你试图用 promise + timer 这么做，你的 coro 将在睡眠一分钟之后超时，然后被 JobScheduler 认定为死锁，然后被干掉。
16:17 hatelis: lh_mouse, 这……
16:17 varna: hatelis: 哦对，似乎没有
16:17 varna: xxxxxxxx: 噗噗噗噗噗
16:21 varna: http://www.guancha.cn/Neighbors/2016_01_10_347562.shtml
16:22 xxxxxxxx: 世界上哪个国家最亲美国?
16:23 lh_mouse: hatelis, ヲ没有办法评估一个陷入睡眠状态的 coro 和食材可以重新调度，所以ヲ在这里设定初始的延迟是 100ms。如果 coro 不能在重调度的时候被唤醒，这个延迟会每次乘以 2。
16:23 varna: 和食材
16:23 lh_mouse: s/和食材/何时才/
16:23 xxxxxxxx: 口支口支口支
16:23 varna: xxxxxxxx: 外星大概有
16:23 lh_mouse: なんじ才
16:24 lh_mouse: 100ms 对于绝大多数数据库操作都够用了。
16:25 hatelis: timer真是个不舒服的东西
16:25 lh_mouse: 羊驼的这个设计，老实来说，不好。
16:26 lh_mouse: 谁分配释放缺少显式丢弃所有权的语义。
16:26 lh_mouse: 外面分配里面释放实际上更渣。
16:26 lh_mouse: C艹有个很牛逼的解决方案就是 shared_ptr。
16:26 lh_mouse: 既然是用 C，搞不好手动艹一套引用计数出来。
16:27 varna: 外面分配里面释放？
16:27 varna: 我不是这么做的
16:27 lh_mouse: ヲ知道。
16:27 lh_mouse: 这里的问题就是不能创建后不管。
16:27 varna: 至于所有权，对C代码我的态度是不管
16:27 lh_mouse: 所以对于用户来说破事多。
16:27 varna: 因为引用计数也不好弄
16:28 varna: 最后还是手工
16:28 lh_mouse: 这种设计风格缺少显式接管所有权的语义。
16:28 lh_mouse: 比如 unique_ptr 一类。
16:28 varna: 对
16:28 lh_mouse: 谁分配谁释放还是要用户人肉编译。
16:28 lh_mouse: 所以ヲ提一个折衷的方案。
16:29 varna: 然而我觉得这里有个问题
16:29 varna: C如何不人肉编译
16:29 lh_mouse: 你不愿意艹引用计数，可以换一个方案：   int adopt_session(struct session *ptr, void deleter(struct session *));
16:29 varna: session?
16:30 varna: 资源需要交给一个被确定意义的会话托管么
16:31 varna: 我不想引入太多概念，不过所有权方面这次我确实是坑人的
16:32 hatelis: lh_mouse, 耗子对gcc/clang 的 cleanup attribute怎么看？
16:33 varna: 至于p7本身，其实并不真正试图管理timer这样的实用小对象
16:33 lh_mouse: hatelis, 残废。
16:34 varna: 余下的就像lhj说的一样，按用户的想法自己管理
16:35 tutu_wind joined channel
16:35 varna: 这里我选择一个借口：我没有资格去指导用户如何看待事情
16:36 lh_mouse: ヲ提一个东西，析构函数。
16:36 lh_mouse: 不管怎么说 on_readhup on_close 一类还是得有。
16:37 lh_mouse: ヲ只是打个比方。
16:37 varna: 嗯，但是毕竟或者挂回调或者手写
16:37 varna: 我甚至不提供IO完成
16:37 lh_mouse: 最后基本都走到回调上。
16:37 varna: 而我保证errno是真实的，流程从每个coro来看是顺序的
16:37 lh_mouse: 析构函数本质上就是一种回调，只不过タ是静态 dispatch 的。
16:38 varna: 这个本质我不在意，我更在意表象：它需不需要手工写在合适的位置
16:38 lh_mouse: C 就需要。
16:38 varna: 对
16:38 lh_mouse: C艹 显然就没这破事。
16:38 varna: 所以对一个C库，我的想法是让它随C的样子去吧
16:38 varna: 用户必须知道hup close这类事情
16:39 varna: 那么就让他们真实地知道
16:39 lh_mouse: ヲ认为 C 应该这样：   int adopt_session(struct session *ptr, void deleter(struct session *));
16:39 lh_mouse: 允许底层通过回调显式接管所有权。
16:39 varna: 因为你的观点里总有一个服务器框架啊
16:39 lh_mouse: 同时赋予用户丢空删除器的权利。
16:39 lh_mouse: 0.0
16:39 varna: 这是差别所在
16:39 hatelis: 总有+
16:40 lh_mouse: 不一定是服务器。别的东西多数ヲ也会这么写。
16:40 varna: 当然我一直承认，一个好看的服务器框架确实让有些事情变得好看
16:40 varna: 所以我选择放弃这个角度……
16:40 hatelis: 可是羊驼子看起来就是希望提供个能把基本系统调用并发的容易点的东西
16:40 lh_mouse: shared_ptr + delete expression 是形而上等价的东西。
16:40 lh_mouse: 然后带了个引用计数的私货。
16:41 varna: 或者说，是在细部性能的范围内不太让多数人反感而等价的东西(｡･ω･)ﾉ
16:41 varna: 嘛，个人角度差异……
16:42 lh_mouse: (｡･ω･)ﾉ
16:42 varna: 这种角度差别倒是多点好
16:42 varna: 总盯着我自己这些烂货，迟早脑子变花生
16:42 lh_mouse: 羊驼子前序了。
16:42 lh_mouse: 日。
16:43 lh_mouse: s/前序/谦虚/
16:43 * lh_mouse 中序了。
16:43 * varna 后序写错了
16:43 varna: 不过说起来，lhj会做一点SEO之类的事情么
16:43 varna: 昨天我试着搜吱坛上的文章，效果好差
16:44 hatelis: varna, 不太会。前几天家父让我帮他SEO，结果我只能随便糊弄了本书给他
16:44 lh_mouse: 之前 SEO 是ヲ改的。
16:44 hatelis: 到现在连书名都忘了
16:44 lh_mouse: ヲ只改了改首页，但是收效不明显。
16:44 lh_mouse: 百度上面关键词的命中率低得感人。
16:45 varna: 必应也糟糕
16:48 varna: 也可能是现在SE收录严一些了，新页面一开始不被重视
16:57 tutu joined channel
16:57 tutu_wind quit:Ping timeout: 250 seconds
17:21 hatlist quit:Quit: Connection closed for inactivity
17:26 randomclown quit:Quit: Leaving
17:29 tutu is now known as tutu_wind
17:36 tutu joined channel
17:39 tutu_wind quit:Ping timeout: 276 seconds
17:46 tutu is now known as tutu_wind
17:52 cleamooon joined channel
17:54 cleamooon: 沙宣成功是3%的才干加上97%的不被互联网分散精力
17:57 varna: mooon 23333333
17:59 cleamooon: 还能更长哦
18:00 varna: 不被互联网分散精力2333
18:07 cleamooon: 度娘医药类贴吧被70W被爆出来了
18:07 varna: 看李小龙相关的视频必须关弹幕……成吨小学生从天而降
18:07 hatelis: cleamooon, http://www.ftchinese.com/story/001065703
18:07 hatelis: 海盗国这么药丸了？
18:08 cleamooon: 李小龙？小学生还听过李小龙吗
18:08 varna: 你说得对……
18:09 cleamooon: 药丸
18:10 cleamooon: 支持爆掉难民和绿党
18:10 cleamooon: 反正我不是
18:12 xxxxxxxx: 一群据称多数来自阿富汗的年轻人对年仅11或12岁的女孩实施了性骚扰。
18:13 condy: lol
18:13 condy: 药丸
18:14 varna: “据查证，他们十人中的83.1%确实来自阿富汗”
18:15 cleamooon: 嗯 数据不错
18:15 tutu_wind: varna: 羊驼酱IDE上自带的调试工具是肿么实现调试的？
18:16 tutu_wind: 假设是Codeblocks
18:20 Youmu joined channel
18:20 varna: tutu_wind: 我不用IDE
18:20 varna: 如果你要问的是实现调试器，试试ptrace系列调用
18:21 varna: http://www.bilibili.com/video/av3566548/ 这个好高能……
18:25 cleamooon: 略牛
18:25 tutu_wind: 是这样的，目前需要做一个东西包装gdb，输入是用户通过输入框输入，结果显示在结果栏里
18:25 varna: 哦，这样啊
18:25 tutu_wind: 就是给GDB做一个UI
18:26 varna: 那你可以试试gdb mi
18:26 varna: gdb/mi系列接口提供了为gdb包裹前端用的命令
18:27 tutu_wind: 哦，嗯，我去查查～
18:27 cleamooon: mi？
18:27 varna: machine interface, 我猜
18:27 lh_mouse: 辣鸡 gdb。
18:28 varna: mi拿的也是文本输入，你可以弄个parser包一下
18:28 lh_mouse: ヲ说个事情，gdb 在 return 上 n 一下会返回到上一级函数。
18:28 varna: 这里只敢s一下吧
18:28 lh_mouse: 相比之下， VC 里在 return 上单步步过会跳到函数结束的花括号上。
18:28 lh_mouse: 所以 gdb 辣鸡。
18:29 tutu_wind: ... ...
18:29 lh_mouse: tutu_wind, ヲ要 condy 的果照。
18:29 condy: 辣鸡真辣！
18:29 varna: 残念的事情其实在于问题很多，然而只是问题很多……
18:29 tutu_wind: lh_mouse: 我在手机上找一下～
18:29 lh_mouse: condy, 果照。
18:30 condy: Or2
18:30 lh_mouse: 问题很多然而也是没用。
18:30 lh_mouse: s/没用/没得用/
18:30 varna: +
18:32 cleamooon: eval(isempty(vector<software_not_suck>)) -> true
18:35 tutu_wind quit:Ping timeout: 260 seconds
18:36 lh_mouse: software 是 uncountable 的。
18:38 Mokou joined channel
18:38 lh_mouse: Mokou, 摸头。
18:39 Mokou quit:Client Quit
18:39 cleamooon quit:Ping timeout: 252 seconds
18:39 Mokou joined channel
18:39 Mokou: lh_mouse: 摸鼻
18:39 varna: 2333
18:40 lh_mouse: Mokou, 按住。
18:41 Mokou: 你身为小耗怎么可能 按得动我
18:41 lh_mouse: ヲ不小。
18:41 Mokou: 那也是耗
18:41 varna: 硕鼠硕鼠，无食我黍
18:42 lh_mouse: ヲ是猫猫。
18:43 varna: 猫身上生跳蚤，来洗洗
18:43 varna: 可先洗鼻子
18:43 lh_mouse: >A<
18:44 Mokou: 噗
18:44 Mokou: 我怎么Lv106了外
18:44 Mokou: 我怎么Lv106了
18:44 * Mokou 虚高
18:45 Mokou: 开幕炸死我三只
18:45 Mokou: 四只
18:45 Mokou: 元帅日德兰根本打不过……
18:47 varna: OTL元帅
18:47 Mokou: 好歹多了200战果
18:47 Mokou: 大将福利一段时间里吃不到了
18:51 Mokou: 这TM
18:51 Mokou: 北大4SS
18:51 Mokou: 等级最高的还全在下面
18:51 Mokou: 我等等看
18:53 Mokou: C败
18:56 Mokou: http://picpaste.com/Wm5xvEZX.png 人群当中钻出来一个咸鱼
18:56 varna: http://www.bilibili.com/video/av298326/ 高兴
19:00 Mokou: 高兴我一跳，还以为高兴帝复活了……
19:05 varna: 高兴帝大概不会复活了吧
19:05 varna: 现在屑站弱子们大多高兴不起来
19:06 Mokou: 屑站H3C-CH3
19:07 varna: 来两斤环囧烷
19:07 Mokou: 现在的屑站弱子认识高兴帝的恐怕都不多了吧
19:07 varna: 不认识倒是正常
19:07 Mokou: 你看看那帮见到创价就刷10492的弱子
19:08 condy: 喵来如此
19:08 Mokou: 搞不好见到高兴帝他们也那反应
19:09 Mokou: 连着两个1k油……
19:09 varna: OTL
19:11 tutu joined channel
19:11 tutu is now known as tutu_wind
19:14 hatelis quit:Remote host closed the connection
19:19 Xilzzerts quit:Ping timeout: 276 seconds
19:21 Mokou: 复习了一下野球拳，结果发现大坨不认识御神木的弱子
19:24 Mokou: http://ww4.sinaimg.cn/bmiddle/78f2cc43gw1ezwffazmhcj20cx0pujsc.jpg
19:28 varna: 然而sigkill杀不了被内核冻住的cp...
19:30 condy: =-=
19:35 varna: 对了求个推荐
19:35 varna: 有没有现成的http parser
19:35 varna: http parser in C, C艹就算了
19:50 Mokou: 你急吗
19:50 Mokou: 不急我把Izumo那个拆出来
19:51 varna: 那就算了
19:52 varna: 毕竟要现成东西的意味是能处理各种破事
19:52 Mokou: 要不然node那个？
19:52 Mokou: 大坨回调
19:52 Mokou: https://github.com/nodejs/http-parser
19:53 varna: ...
19:53 varna: 这什么破玩意……
19:53 varna: 算了
19:53 Mokou: 所以我才从头写了……
19:56 xxxxxxxx: https://github.com/h2o/picohttpparser 另一个
20:00 varna: 这个看着可以
20:00 varna: clone下来了
20:07 varna: 许可证也还不错，可以用
20:08 varna: 我一下想到一个幻想中的运动：codeclean
20:08 varna: 减少依赖、提高合作性的小工具
20:11 xxxxxxxx: 果然羊驼僧的品味都差不多
20:11 Mokou: 英国医保公布一项全新的治失眠方法，而且还不需要吃药……
20:11 Mokou: 从明天起，可凭处方领取曼联队比赛录像。
20:12 xxxxxxxx: Mokou: 这个应该获奖!
20:12 varna: 不懂足球
20:12 Mokou: http://ww4.sinaimg.cn/bmiddle/7e948b4djw1ezwz0byj0fj20ku1127ju.jpg
20:12 varna: 然而总觉得是个容易理解的黑？
20:12 varna: 噗
20:13 xxxxxxxx: 因为我不懂所以我估计自己会睡着
20:16 tutu_wind quit:Quit: WeeChat 1.2
20:16 xxxxxxxx: 说起来 守门员扑球会不会摔伤?
20:17 tutu_wind joined channel
20:21 varna: 大概一般不会？
20:41 e788b1 joined channel
20:42 e788b1 quit:Client Quit
20:45 Stevearzh quit:Quit: Be back later...
21:16 lh_mouse: 自己写 HTTP路过。
21:20 lh_mouse: #define ssize_t intptr_t  // 这什么垃圾。
21:32 tutu_wind: lh_mouse: 这是啥啊
21:33 lh_mouse: tutu_wind, 刚才 varna clone 的那个什么 picohttpparser。
21:34 tutu_wind: lh_mouse: 喔喔～ 刚才掉线了。。。
21:37 xxxxxxxx: varna: 对对对 你问问小耗让不让你用他造的那个
21:39 xxxxxxxx: http://sports.163.com/15/0514/21/APJTIKHD00051C89.html 旧闻  扑球被踢
21:40 Mokou: xxxxxxxx: 小耗不是用的C艹么
21:40 xxxxxxxx: Mokou: 没注意...
21:42 tutu_wind quit:Ping timeout: 246 seconds
21:44 varna: 好想舔妹子啊
21:45 lh_mouse: 异教徒！
22:02 Stevearzh joined channel
22:02 Stevearzh quit:Changing host
22:02 Stevearzh joined channel
22:31 varna: C语言吧居然搞出个话题帖来
22:32 varna: 什么鬼
22:32 varna: “真心看不惯吧里的有些人。连VC++6.0的安装包都找不到，您老百度一下还不行吗？连百度都不会？”
22:32 varna: 我整个人都妮可了
22:35 Mokou: 来个妮可妮可妮
22:35 varna: http://tieba.baidu.com/p/4297872247 我指出了亮点
22:51 lh_mouse: 做个大话题。
22:53 varna: 武运
22:53 varna quit:Quit: leaving
22:57 Mokou: 睡觉
22:57 Mokou: 诸君武运
22:57 Mokou quit:Quit: 睡觉
23:02 yzld2002 quit:Quit: yzld2002
23:25 lh_mouse: http://news.qq.com/a/20160112/043160.htm
23:41 hatelis joined channel
23:42 hatelis_ joined channel
23:42 hatelis_ quit:Client Quit
23:42 hatelis: 问:请问江主席，两岸如果真的开战岂不是相煎何太急？
23:42 hatelis: 答:我发现你们，这一点我感觉得，幸亏我这个人喜欢诗词。你大概用的曹植的这首诗——煮豆燃豆萁，豆在釜中泣，本是同根生，相煎何太急？
23:42 hatelis: 我的理解，如果你要搞台独，这个问题就意味着相煎何太急。本是同根生嘛，对不对啊?
23:43 lh_mouse: 靠，真不像话。
23:44 hatelis: 华:我知道你不同意，但美国有句古话叫做"如果走着像鸭子,叫着像鸭子,那么它就是只鸭子。"
23:44 hatelis: 华莱士教你python
23:44 hatelis: 这就是python的duck type
23:46 hatelis: lh_mouse, 肿么了
23:46 lh_mouse: hatelis, http://img.vim-cn.com/1b/621687e4770e18d3191493882e59f78261d606.png
23:47 hatelis: 我这里都是好的啊
23:47 lh_mouse: hatelis, 辣鸡字体。
23:48 hatelis: 原来是这样
23:48 TommyJerryMairo: …hexchat天然不支持emoji
23:51 lh_mouse: every irc client sucks.
23:52 hatelis: every software sucks.
23:52 lh_mouse: software 不是可数名词。
23:53 hatelis: All software sucks
23:54 hatelis: “There are two ways of constructing a software design: One way is to make it so simple that there are obviously no deficiencies and the other way is to make it so complicated that there are no obvious deficiencies.” – C.A.R. Hoare, The 1980 ACM Turing Award Lecture
23:55 lh_mouse: hatelis, ヲ对于这种情况的处理是换一个同义词。
23:55 lh_mouse: 比如 application。
23:59 lh_mouse quit:Quit: get a new font now!
23:59 lh_mouse joined channel
